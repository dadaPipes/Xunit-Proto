### YamlMime:ManagedReference
items:
- uid: Asserts.EqualityAsserts
  commentId: T:Asserts.EqualityAsserts
  id: EqualityAsserts
  parent: Asserts
  children:
  - Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime)
  - Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime,System.TimeSpan)
  - Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset)
  - Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)
  - Asserts.EqualityAsserts.Equal(System.Decimal,System.Decimal,System.Int32)
  - Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Double)
  - Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32)
  - Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32,System.MidpointRounding)
  - Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32)
  - Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32,System.MidpointRounding)
  - Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Single)
  - Asserts.EqualityAsserts.Equal``1(``0,``0)
  - Asserts.EqualityAsserts.Equal``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  - Asserts.EqualityAsserts.Equal``1(``0,``0,System.Func{``0,``0,System.Boolean})
  - Asserts.EqualityAsserts.Equal``1(``0[],``0[])
  - Asserts.EqualityAsserts.NotEqual(System.Decimal,System.Decimal,System.Int32)
  - Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Double)
  - Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32)
  - Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32,System.MidpointRounding)
  - Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32)
  - Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32,System.MidpointRounding)
  - Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Single)
  - Asserts.EqualityAsserts.NotEqual``1(``0,``0)
  - Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  - Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Func{``0,``0,System.Boolean})
  - Asserts.EqualityAsserts.NotEqual``1(``0[],``0[])
  - Asserts.EqualityAsserts.NotStrictEqual``1(``0,``0)
  - Asserts.EqualityAsserts.StrictEqual``1(``0,``0)
  langs:
  - csharp
  - vb
  name: EqualityAsserts
  nameWithType: EqualityAsserts
  fullName: Asserts.EqualityAsserts
  type: Class
  source:
    id: EqualityAsserts
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 29
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  syntax:
    content: public class EqualityAsserts
    content.vb: Public Class EqualityAsserts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Asserts.EqualityAsserts.Equal``1(``0[],``0[])
  commentId: M:Asserts.EqualityAsserts.Equal``1(``0[],``0[])
  id: Equal``1(``0[],``0[])
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(T[], T[])
  nameWithType: EqualityAsserts.Equal<T>(T[], T[])
  fullName: Asserts.EqualityAsserts.Equal<T>(T[], T[])
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 55
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two arrays of un-managed type T are equal, using Span&lt;T&gt;.SequenceEqual.

    This can be significantly faster than generic enumerables, when the collections are actually

    equal, because the system can optimize packed-memory comparisons for value type arrays.
  remarks: >-
    If <xref href="System.MemoryExtensions.SequenceEqual%60%601(System.Span%7b%60%600%7d%2cSystem.ReadOnlySpan%7b%60%600%7d)" data-throw-if-not-resolved="false"></xref> fails, a call

    to Assert.Equal&lt;T&gt;(T, T) is made, to provide a more meaningful error message.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(T[] expected, T[] actual) where T : unmanaged, IEquatable<T>'
    parameters:
    - id: expected
      type: '{T}[]'
      description: The expected value
    - id: actual
      type: '{T}[]'
      description: The value to be compared against
    typeParameters:
    - id: T
      description: The type of items whose arrays are to be compared
    content.vb: Public Shared Sub Equal(Of T As {Structure, IEquatable(Of T)})(expected As T(), actual As T())
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Of T)(T(), T())
  fullName.vb: Asserts.EqualityAsserts.Equal(Of T)(T(), T())
  name.vb: Equal(Of T)(T(), T())
- uid: Asserts.EqualityAsserts.Equal``1(``0,``0)
  commentId: M:Asserts.EqualityAsserts.Equal``1(``0,``0)
  id: Equal``1(``0,``0)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(T, T)
  nameWithType: EqualityAsserts.Equal<T>(T, T)
  fullName: Asserts.EqualityAsserts.Equal<T>(T, T)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 87
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are equal, using a default comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal<T>(T expected, T actual)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected value
    - id: actual
      type: '{T}'
      description: The value to be compared against
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub Equal(Of T)(expected As T, actual As T)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Of T)(T, T)
  fullName.vb: Asserts.EqualityAsserts.Equal(Of T)(T, T)
  name.vb: Equal(Of T)(T, T)
- uid: Asserts.EqualityAsserts.Equal``1(``0,``0,System.Func{``0,``0,System.Boolean})
  commentId: M:Asserts.EqualityAsserts.Equal``1(``0,``0,System.Func{``0,``0,System.Boolean})
  id: Equal``1(``0,``0,System.Func{``0,``0,System.Boolean})
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(T, T, Func<T, T, bool>)
  nameWithType: EqualityAsserts.Equal<T>(T, T, Func<T, T, bool>)
  fullName: Asserts.EqualityAsserts.Equal<T>(T, T, System.Func<T, T, bool>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 110
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are equal, using a custom comparer function.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal<T>(T expected, T actual, Func<T, T, bool> comparer)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected value
    - id: actual
      type: '{T}'
      description: The value to be compared against
    - id: comparer
      type: System.Func{{T},{T},System.Boolean}
      description: The comparer used to compare the two objects
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub Equal(Of T)(expected As T, actual As T, comparer As Func(Of T, T, Boolean))
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Of T)(T, T, Func(Of T, T, Boolean))
  fullName.vb: Asserts.EqualityAsserts.Equal(Of T)(T, T, System.Func(Of T, T, Boolean))
  name.vb: Equal(Of T)(T, T, Func(Of T, T, Boolean))
- uid: Asserts.EqualityAsserts.Equal``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Asserts.EqualityAsserts.Equal``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  id: Equal``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(T, T, IEqualityComparer<T>)
  nameWithType: EqualityAsserts.Equal<T>(T, T, IEqualityComparer<T>)
  fullName: Asserts.EqualityAsserts.Equal<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 134
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are equal, using a custom equatable comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal<T>(T expected, T actual, IEqualityComparer<T> comparer)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected value
    - id: actual
      type: '{T}'
      description: The value to be compared against
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The comparer used to compare the two objects
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub Equal(Of T)(expected As T, actual As T, comparer As IEqualityComparer(Of T))
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Asserts.EqualityAsserts.Equal(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: Equal(Of T)(T, T, IEqualityComparer(Of T))
- uid: Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32)
  id: Equal(System.Double,System.Double,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(double, double, int)
  nameWithType: EqualityAsserts.Equal(double, double, int)
  fullName: Asserts.EqualityAsserts.Equal(double, double, int)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 336
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(double expected, double actual, int precision)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    content.vb: Public Shared Sub Equal(expected As Double, actual As Double, precision As Integer)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Double, Double, Integer)
  fullName.vb: Asserts.EqualityAsserts.Equal(Double, Double, Integer)
  name.vb: Equal(Double, Double, Integer)
- uid: Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32,System.MidpointRounding)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Int32,System.MidpointRounding)
  id: Equal(System.Double,System.Double,System.Int32,System.MidpointRounding)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(double, double, int, MidpointRounding)
  nameWithType: EqualityAsserts.Equal(double, double, int, MidpointRounding)
  fullName: Asserts.EqualityAsserts.Equal(double, double, int, System.MidpointRounding)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 367
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.

    The rounding method to use is given by <code class="paramref">rounding</code>
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(double expected, double actual, int precision, MidpointRounding rounding)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    - id: rounding
      type: System.MidpointRounding
      description: Rounding method to use to process a number that is midway between two numbers
    content.vb: Public Shared Sub Equal(expected As Double, actual As Double, precision As Integer, rounding As MidpointRounding)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Double, Double, Integer, MidpointRounding)
  fullName.vb: Asserts.EqualityAsserts.Equal(Double, Double, Integer, System.MidpointRounding)
  name.vb: Equal(Double, Double, Integer, MidpointRounding)
- uid: Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Double)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Double,System.Double,System.Double)
  id: Equal(System.Double,System.Double,System.Double)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(double, double, double)
  nameWithType: EqualityAsserts.Equal(double, double, double)
  fullName: Asserts.EqualityAsserts.Equal(double, double, double)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 397
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are equal, within the tolerance given by

    <code class="paramref">tolerance</code> (positive or negative).
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(double expected, double actual, double tolerance)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: tolerance
      type: System.Double
      description: The allowed difference between values
    content.vb: Public Shared Sub Equal(expected As Double, actual As Double, tolerance As Double)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Double, Double, Double)
  fullName.vb: Asserts.EqualityAsserts.Equal(Double, Double, Double)
  name.vb: Equal(Double, Double, Double)
- uid: Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32)
  id: Equal(System.Single,System.Single,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(float, float, int)
  nameWithType: EqualityAsserts.Equal(float, float, int)
  fullName: Asserts.EqualityAsserts.Equal(float, float, int)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 426
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(float expected, float actual, int precision)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    content.vb: Public Shared Sub Equal(expected As Single, actual As Single, precision As Integer)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Single, Single, Integer)
  fullName.vb: Asserts.EqualityAsserts.Equal(Single, Single, Integer)
  name.vb: Equal(Single, Single, Integer)
- uid: Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32,System.MidpointRounding)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Int32,System.MidpointRounding)
  id: Equal(System.Single,System.Single,System.Int32,System.MidpointRounding)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(float, float, int, MidpointRounding)
  nameWithType: EqualityAsserts.Equal(float, float, int, MidpointRounding)
  fullName: Asserts.EqualityAsserts.Equal(float, float, int, System.MidpointRounding)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 457
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.

    The rounding method to use is given by <code class="paramref">rounding</code>
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(float expected, float actual, int precision, MidpointRounding rounding)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    - id: rounding
      type: System.MidpointRounding
      description: Rounding method to use to process a number that is midway between two numbers
    content.vb: Public Shared Sub Equal(expected As Single, actual As Single, precision As Integer, rounding As MidpointRounding)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Single, Single, Integer, MidpointRounding)
  fullName.vb: Asserts.EqualityAsserts.Equal(Single, Single, Integer, System.MidpointRounding)
  name.vb: Equal(Single, Single, Integer, MidpointRounding)
- uid: Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Single)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Single,System.Single,System.Single)
  id: Equal(System.Single,System.Single,System.Single)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(float, float, float)
  nameWithType: EqualityAsserts.Equal(float, float, float)
  fullName: Asserts.EqualityAsserts.Equal(float, float, float)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 487
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are equal, within the tolerance given by

    <code class="paramref">tolerance</code> (positive or negative).
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(float expected, float actual, float tolerance)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: tolerance
      type: System.Single
      description: The allowed difference between values
    content.vb: Public Shared Sub Equal(expected As Single, actual As Single, tolerance As Single)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Single, Single, Single)
  fullName.vb: Asserts.EqualityAsserts.Equal(Single, Single, Single)
  name.vb: Equal(Single, Single, Single)
- uid: Asserts.EqualityAsserts.Equal(System.Decimal,System.Decimal,System.Int32)
  commentId: M:Asserts.EqualityAsserts.Equal(System.Decimal,System.Decimal,System.Int32)
  id: Equal(System.Decimal,System.Decimal,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(decimal, decimal, int)
  nameWithType: EqualityAsserts.Equal(decimal, decimal, int)
  fullName: Asserts.EqualityAsserts.Equal(decimal, decimal, int)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 516
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> values are equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(decimal expected, decimal actual, int precision)
    parameters:
    - id: expected
      type: System.Decimal
      description: The expected value
    - id: actual
      type: System.Decimal
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-28)'
    content.vb: Public Shared Sub Equal(expected As Decimal, actual As Decimal, precision As Integer)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Decimal, Decimal, Integer)
  fullName.vb: Asserts.EqualityAsserts.Equal(Decimal, Decimal, Integer)
  name.vb: Equal(Decimal, Decimal, Integer)
- uid: Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime)
  commentId: M:Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime)
  id: Equal(System.DateTime,System.DateTime)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(DateTime, DateTime)
  nameWithType: EqualityAsserts.Equal(DateTime, DateTime)
  fullName: Asserts.EqualityAsserts.Equal(System.DateTime, System.DateTime)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 542
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> values are equal.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(DateTime expected, DateTime actual)
    parameters:
    - id: expected
      type: System.DateTime
      description: The expected value
    - id: actual
      type: System.DateTime
      description: The value to be compared against
    content.vb: Public Shared Sub Equal(expected As Date, actual As Date)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Date, Date)
  fullName.vb: Asserts.EqualityAsserts.Equal(Date, Date)
  name.vb: Equal(Date, Date)
- uid: Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime,System.TimeSpan)
  commentId: M:Asserts.EqualityAsserts.Equal(System.DateTime,System.DateTime,System.TimeSpan)
  id: Equal(System.DateTime,System.DateTime,System.TimeSpan)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(DateTime, DateTime, TimeSpan)
  nameWithType: EqualityAsserts.Equal(DateTime, DateTime, TimeSpan)
  fullName: Asserts.EqualityAsserts.Equal(System.DateTime, System.DateTime, System.TimeSpan)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 560
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> values are equal, within the precision

    given by <code class="paramref">precision</code>.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(DateTime expected, DateTime actual, TimeSpan precision)
    parameters:
    - id: expected
      type: System.DateTime
      description: The expected value
    - id: actual
      type: System.DateTime
      description: The value to be compared against
    - id: precision
      type: System.TimeSpan
      description: The allowed difference in time where the two dates are considered equal
    content.vb: Public Shared Sub Equal(expected As Date, actual As Date, precision As TimeSpan)
  overload: Asserts.EqualityAsserts.Equal*
  nameWithType.vb: EqualityAsserts.Equal(Date, Date, TimeSpan)
  fullName.vb: Asserts.EqualityAsserts.Equal(Date, Date, System.TimeSpan)
  name.vb: Equal(Date, Date, TimeSpan)
- uid: Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset)
  id: Equal(System.DateTimeOffset,System.DateTimeOffset)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(DateTimeOffset, DateTimeOffset)
  nameWithType: EqualityAsserts.Equal(DateTimeOffset, DateTimeOffset)
  fullName: Asserts.EqualityAsserts.Equal(System.DateTimeOffset, System.DateTimeOffset)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 588
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> values are equal.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(DateTimeOffset expected, DateTimeOffset actual)
    parameters:
    - id: expected
      type: System.DateTimeOffset
      description: The expected value
    - id: actual
      type: System.DateTimeOffset
      description: The value to be compared against
    content.vb: Public Shared Sub Equal(expected As DateTimeOffset, actual As DateTimeOffset)
  overload: Asserts.EqualityAsserts.Equal*
- uid: Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)
  commentId: M:Asserts.EqualityAsserts.Equal(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)
  id: Equal(System.DateTimeOffset,System.DateTimeOffset,System.TimeSpan)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: Equal(DateTimeOffset, DateTimeOffset, TimeSpan)
  nameWithType: EqualityAsserts.Equal(DateTimeOffset, DateTimeOffset, TimeSpan)
  fullName: Asserts.EqualityAsserts.Equal(System.DateTimeOffset, System.DateTimeOffset, System.TimeSpan)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 606
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> values are equal, within the precision

    given by <code class="paramref">precision</code>.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Equal(DateTimeOffset expected, DateTimeOffset actual, TimeSpan precision)
    parameters:
    - id: expected
      type: System.DateTimeOffset
      description: The expected value
    - id: actual
      type: System.DateTimeOffset
      description: The value to be compared against
    - id: precision
      type: System.TimeSpan
      description: The allowed difference in time where the two dates are considered equal
    content.vb: Public Shared Sub Equal(expected As DateTimeOffset, actual As DateTimeOffset, precision As TimeSpan)
  overload: Asserts.EqualityAsserts.Equal*
- uid: Asserts.EqualityAsserts.NotEqual``1(``0[],``0[])
  commentId: M:Asserts.EqualityAsserts.NotEqual``1(``0[],``0[])
  id: NotEqual``1(``0[],``0[])
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual<T>(T[], T[])
  nameWithType: EqualityAsserts.NotEqual<T>(T[], T[])
  fullName: Asserts.EqualityAsserts.NotEqual<T>(T[], T[])
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 635
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two arrays of un-managed type T are not equal, using Span&lt;T&gt;.SequenceEqual.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void NotEqual<T>(T[] expected, T[] actual) where T : unmanaged, IEquatable<T>'
    parameters:
    - id: expected
      type: '{T}[]'
      description: The expected value
    - id: actual
      type: '{T}[]'
      description: The value to be compared against
    typeParameters:
    - id: T
      description: The type of items whose arrays are to be compared
    content.vb: Public Shared Sub NotEqual(Of T As {Structure, IEquatable(Of T)})(expected As T(), actual As T())
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Of T)(T(), T())
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Of T)(T(), T())
  name.vb: NotEqual(Of T)(T(), T())
- uid: Asserts.EqualityAsserts.NotEqual``1(``0,``0)
  commentId: M:Asserts.EqualityAsserts.NotEqual``1(``0,``0)
  id: NotEqual``1(``0,``0)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual<T>(T, T)
  nameWithType: EqualityAsserts.NotEqual<T>(T, T)
  fullName: Asserts.EqualityAsserts.NotEqual<T>(T, T)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 667
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are not equal, using a default comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual<T>(T expected, T actual)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected object
    - id: actual
      type: '{T}'
      description: The actual object
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub NotEqual(Of T)(expected As T, actual As T)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Of T)(T, T)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Of T)(T, T)
  name.vb: NotEqual(Of T)(T, T)
- uid: Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Func{``0,``0,System.Boolean})
  commentId: M:Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Func{``0,``0,System.Boolean})
  id: NotEqual``1(``0,``0,System.Func{``0,``0,System.Boolean})
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual<T>(T, T, Func<T, T, bool>)
  nameWithType: EqualityAsserts.NotEqual<T>(T, T, Func<T, T, bool>)
  fullName: Asserts.EqualityAsserts.NotEqual<T>(T, T, System.Func<T, T, bool>)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 690
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are not equal, using a custom equality comparer function.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual<T>(T expected, T actual, Func<T, T, bool> comparer)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected object
    - id: actual
      type: '{T}'
      description: The actual object
    - id: comparer
      type: System.Func{{T},{T},System.Boolean}
      description: The comparer used to examine the objects
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub NotEqual(Of T)(expected As T, actual As T, comparer As Func(Of T, T, Boolean))
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Of T)(T, T, Func(Of T, T, Boolean))
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Of T)(T, T, System.Func(Of T, T, Boolean))
  name.vb: NotEqual(Of T)(T, T, Func(Of T, T, Boolean))
- uid: Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Asserts.EqualityAsserts.NotEqual``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  id: NotEqual``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual<T>(T, T, IEqualityComparer<T>)
  nameWithType: EqualityAsserts.NotEqual<T>(T, T, IEqualityComparer<T>)
  fullName: Asserts.EqualityAsserts.NotEqual<T>(T, T, System.Collections.Generic.IEqualityComparer<T>)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 714
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are not equal, using a custom equality comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual<T>(T expected, T actual, IEqualityComparer<T> comparer)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected object
    - id: actual
      type: '{T}'
      description: The actual object
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The comparer used to examine the objects
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub NotEqual(Of T)(expected As T, actual As T, comparer As IEqualityComparer(Of T))
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Of T)(T, T, IEqualityComparer(Of T))
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: NotEqual(Of T)(T, T, IEqualityComparer(Of T))
- uid: Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32)
  id: NotEqual(System.Double,System.Double,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(double, double, int)
  nameWithType: EqualityAsserts.NotEqual(double, double, int)
  fullName: Asserts.EqualityAsserts.NotEqual(double, double, int)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 901
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are not equal, within the number of decimal

    places given by <code class="paramref">precision</code>.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(double expected, double actual, int precision)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    content.vb: Public Shared Sub NotEqual(expected As Double, actual As Double, precision As Integer)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Double, Double, Integer)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Double, Double, Integer)
  name.vb: NotEqual(Double, Double, Integer)
- uid: Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32,System.MidpointRounding)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Int32,System.MidpointRounding)
  id: NotEqual(System.Double,System.Double,System.Int32,System.MidpointRounding)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(double, double, int, MidpointRounding)
  nameWithType: EqualityAsserts.NotEqual(double, double, int, MidpointRounding)
  fullName: Asserts.EqualityAsserts.NotEqual(double, double, int, System.MidpointRounding)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 932
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are not equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.

    The rounding method to use is given by <code class="paramref">rounding</code>
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(double expected, double actual, int precision, MidpointRounding rounding)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    - id: rounding
      type: System.MidpointRounding
      description: Rounding method to use to process a number that is midway between two numbers
    content.vb: Public Shared Sub NotEqual(expected As Double, actual As Double, precision As Integer, rounding As MidpointRounding)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Double, Double, Integer, MidpointRounding)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Double, Double, Integer, System.MidpointRounding)
  name.vb: NotEqual(Double, Double, Integer, MidpointRounding)
- uid: Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Double)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Double,System.Double,System.Double)
  id: NotEqual(System.Double,System.Double,System.Double)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(double, double, double)
  nameWithType: EqualityAsserts.NotEqual(double, double, double)
  fullName: Asserts.EqualityAsserts.NotEqual(double, double, double)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 962
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Double" data-throw-if-not-resolved="false"></xref> values are not equal, within the tolerance given by

    <code class="paramref">tolerance</code> (positive or negative).
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(double expected, double actual, double tolerance)
    parameters:
    - id: expected
      type: System.Double
      description: The expected value
    - id: actual
      type: System.Double
      description: The value to be compared against
    - id: tolerance
      type: System.Double
      description: The allowed difference between values
    content.vb: Public Shared Sub NotEqual(expected As Double, actual As Double, tolerance As Double)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Double, Double, Double)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Double, Double, Double)
  name.vb: NotEqual(Double, Double, Double)
- uid: Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32)
  id: NotEqual(System.Single,System.Single,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(float, float, int)
  nameWithType: EqualityAsserts.NotEqual(float, float, int)
  fullName: Asserts.EqualityAsserts.NotEqual(float, float, int)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 991
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are not equal, within the number of decimal

    places given by <code class="paramref">precision</code>.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(float expected, float actual, int precision)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    content.vb: Public Shared Sub NotEqual(expected As Single, actual As Single, precision As Integer)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Single, Single, Integer)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Single, Single, Integer)
  name.vb: NotEqual(Single, Single, Integer)
- uid: Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32,System.MidpointRounding)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Int32,System.MidpointRounding)
  id: NotEqual(System.Single,System.Single,System.Int32,System.MidpointRounding)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(float, float, int, MidpointRounding)
  nameWithType: EqualityAsserts.NotEqual(float, float, int, MidpointRounding)
  fullName: Asserts.EqualityAsserts.NotEqual(float, float, int, System.MidpointRounding)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 1022
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are not equal, within the number of decimal

    places given by <code class="paramref">precision</code>. The values are rounded before comparison.

    The rounding method to use is given by <code class="paramref">rounding</code>
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(float expected, float actual, int precision, MidpointRounding rounding)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-15)'
    - id: rounding
      type: System.MidpointRounding
      description: Rounding method to use to process a number that is midway between two numbers
    content.vb: Public Shared Sub NotEqual(expected As Single, actual As Single, precision As Integer, rounding As MidpointRounding)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Single, Single, Integer, MidpointRounding)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Single, Single, Integer, System.MidpointRounding)
  name.vb: NotEqual(Single, Single, Integer, MidpointRounding)
- uid: Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Single)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Single,System.Single,System.Single)
  id: NotEqual(System.Single,System.Single,System.Single)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(float, float, float)
  nameWithType: EqualityAsserts.NotEqual(float, float, float)
  fullName: Asserts.EqualityAsserts.NotEqual(float, float, float)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 1052
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Single" data-throw-if-not-resolved="false"></xref> values are not equal, within the tolerance given by

    <code class="paramref">tolerance</code> (positive or negative).
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(float expected, float actual, float tolerance)
    parameters:
    - id: expected
      type: System.Single
      description: The expected value
    - id: actual
      type: System.Single
      description: The value to be compared against
    - id: tolerance
      type: System.Single
      description: The allowed difference between values
    content.vb: Public Shared Sub NotEqual(expected As Single, actual As Single, tolerance As Single)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Single, Single, Single)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Single, Single, Single)
  name.vb: NotEqual(Single, Single, Single)
- uid: Asserts.EqualityAsserts.NotEqual(System.Decimal,System.Decimal,System.Int32)
  commentId: M:Asserts.EqualityAsserts.NotEqual(System.Decimal,System.Decimal,System.Int32)
  id: NotEqual(System.Decimal,System.Decimal,System.Int32)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotEqual(decimal, decimal, int)
  nameWithType: EqualityAsserts.NotEqual(decimal, decimal, int)
  fullName: Asserts.EqualityAsserts.NotEqual(decimal, decimal, int)
  type: Method
  source:
    id: NotEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 1081
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: >-
    Verifies that two <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> values are not equal, within the number of decimal

    places given by <code class="paramref">precision</code>.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotEqual(decimal expected, decimal actual, int precision)
    parameters:
    - id: expected
      type: System.Decimal
      description: The expected value
    - id: actual
      type: System.Decimal
      description: The value to be compared against
    - id: precision
      type: System.Int32
      description: 'The number of decimal places (valid values: 0-28)'
    content.vb: Public Shared Sub NotEqual(expected As Decimal, actual As Decimal, precision As Integer)
  overload: Asserts.EqualityAsserts.NotEqual*
  nameWithType.vb: EqualityAsserts.NotEqual(Decimal, Decimal, Integer)
  fullName.vb: Asserts.EqualityAsserts.NotEqual(Decimal, Decimal, Integer)
  name.vb: NotEqual(Decimal, Decimal, Integer)
- uid: Asserts.EqualityAsserts.NotStrictEqual``1(``0,``0)
  commentId: M:Asserts.EqualityAsserts.NotStrictEqual``1(``0,``0)
  id: NotStrictEqual``1(``0,``0)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: NotStrictEqual<T>(T, T)
  nameWithType: EqualityAsserts.NotStrictEqual<T>(T, T)
  fullName: Asserts.EqualityAsserts.NotStrictEqual<T>(T, T)
  type: Method
  source:
    id: NotStrictEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 1108
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are strictly not equal, using the type's default comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotStrictEqual<T>(T expected, T actual)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected object
    - id: actual
      type: '{T}'
      description: The actual object
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub NotStrictEqual(Of T)(expected As T, actual As T)
  overload: Asserts.EqualityAsserts.NotStrictEqual*
  nameWithType.vb: EqualityAsserts.NotStrictEqual(Of T)(T, T)
  fullName.vb: Asserts.EqualityAsserts.NotStrictEqual(Of T)(T, T)
  name.vb: NotStrictEqual(Of T)(T, T)
- uid: Asserts.EqualityAsserts.StrictEqual``1(``0,``0)
  commentId: M:Asserts.EqualityAsserts.StrictEqual``1(``0,``0)
  id: StrictEqual``1(``0,``0)
  parent: Asserts.EqualityAsserts
  langs:
  - csharp
  - vb
  name: StrictEqual<T>(T, T)
  nameWithType: EqualityAsserts.StrictEqual<T>(T, T)
  fullName: Asserts.EqualityAsserts.StrictEqual<T>(T, T)
  type: Method
  source:
    id: StrictEqual
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\EqualityAsserts.cs
    startLine: 1138
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two objects are strictly equal, using the type's default comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void StrictEqual<T>(T expected, T actual)
    parameters:
    - id: expected
      type: '{T}'
      description: The expected value
    - id: actual
      type: '{T}'
      description: The value to be compared against
    typeParameters:
    - id: T
      description: The type of the objects to be compared
    content.vb: Public Shared Sub StrictEqual(Of T)(expected As T, actual As T)
  overload: Asserts.EqualityAsserts.StrictEqual*
  nameWithType.vb: EqualityAsserts.StrictEqual(Of T)(T, T)
  fullName.vb: Asserts.EqualityAsserts.StrictEqual(Of T)(T, T)
  name.vb: StrictEqual(Of T)(T, T)
references:
- uid: Asserts
  commentId: N:Asserts
  href: Asserts.html
  name: Asserts
  nameWithType: Asserts
  fullName: Asserts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.MemoryExtensions.SequenceEqual``1(System.Span{``0},System.ReadOnlySpan{``0})
  commentId: M:System.MemoryExtensions.SequenceEqual``1(System.Span{``0},System.ReadOnlySpan{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.memoryextensions.sequenceequal#system-memoryextensions-sequenceequal-1(system-span((-0))-system-readonlyspan((-0)))
  name: SequenceEqual<T>(Span<T>, ReadOnlySpan<T>)
  nameWithType: MemoryExtensions.SequenceEqual<T>(Span<T>, ReadOnlySpan<T>)
  fullName: System.MemoryExtensions.SequenceEqual<T>(System.Span<T>, System.ReadOnlySpan<T>)
  nameWithType.vb: MemoryExtensions.SequenceEqual(Of T)(Span(Of T), ReadOnlySpan(Of T))
  fullName.vb: System.MemoryExtensions.SequenceEqual(Of T)(System.Span(Of T), System.ReadOnlySpan(Of T))
  name.vb: SequenceEqual(Of T)(Span(Of T), ReadOnlySpan(Of T))
  spec.csharp:
  - uid: System.MemoryExtensions.SequenceEqual``1(System.Span{``0},System.ReadOnlySpan{``0})
    name: SequenceEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memoryextensions.sequenceequal#system-memoryextensions-sequenceequal-1(system-span((-0))-system-readonlyspan((-0)))
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.MemoryExtensions.SequenceEqual``1(System.Span{``0},System.ReadOnlySpan{``0})
    name: SequenceEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memoryextensions.sequenceequal#system-memoryextensions-sequenceequal-1(system-span((-0))-system-readonlyspan((-0)))
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Asserts.EqualityAsserts.Equal*
  commentId: Overload:Asserts.EqualityAsserts.Equal
  href: Asserts.EqualityAsserts.html#Asserts_EqualityAsserts_Equal__1___0_____0___
  name: Equal
  nameWithType: EqualityAsserts.Equal
  fullName: Asserts.EqualityAsserts.Equal
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{{T},{T},System.Boolean}
  commentId: T:System.Func{``0,``0,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T, T, bool>
  nameWithType: Func<T, T, bool>
  fullName: System.Func<T, T, bool>
  nameWithType.vb: Func(Of T, T, Boolean)
  fullName.vb: System.Func(Of T, T, Boolean)
  name.vb: Func(Of T, T, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.MidpointRounding
  commentId: T:System.MidpointRounding
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.midpointrounding
  name: MidpointRounding
  nameWithType: MidpointRounding
  fullName: System.MidpointRounding
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Asserts.EqualityAsserts.NotEqual*
  commentId: Overload:Asserts.EqualityAsserts.NotEqual
  href: Asserts.EqualityAsserts.html#Asserts_EqualityAsserts_NotEqual__1___0_____0___
  name: NotEqual
  nameWithType: EqualityAsserts.NotEqual
  fullName: Asserts.EqualityAsserts.NotEqual
- uid: Asserts.EqualityAsserts.NotStrictEqual*
  commentId: Overload:Asserts.EqualityAsserts.NotStrictEqual
  href: Asserts.EqualityAsserts.html#Asserts_EqualityAsserts_NotStrictEqual__1___0___0_
  name: NotStrictEqual
  nameWithType: EqualityAsserts.NotStrictEqual
  fullName: Asserts.EqualityAsserts.NotStrictEqual
- uid: Asserts.EqualityAsserts.StrictEqual*
  commentId: Overload:Asserts.EqualityAsserts.StrictEqual
  href: Asserts.EqualityAsserts.html#Asserts_EqualityAsserts_StrictEqual__1___0___0_
  name: StrictEqual
  nameWithType: EqualityAsserts.StrictEqual
  fullName: Asserts.EqualityAsserts.StrictEqual
