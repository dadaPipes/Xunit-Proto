### YamlMime:ManagedReference
items:
- uid: Asserts.SetAsserts
  commentId: T:Asserts.SetAsserts
  id: SetAsserts
  parent: Asserts
  children:
  - Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.HashSet{``0})
  - Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.ISet{``0})
  - Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.SortedSet{``0})
  - Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  - Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  - Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.HashSet{``0})
  - Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.ISet{``0})
  - Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.SortedSet{``0})
  - Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  - Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  - Asserts.SetAsserts.ProperSubset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  - Asserts.SetAsserts.ProperSuperset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  - Asserts.SetAsserts.Subset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  - Asserts.SetAsserts.Superset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  langs:
  - csharp
  - vb
  name: SetAsserts
  nameWithType: SetAsserts
  fullName: Asserts.SetAsserts
  type: Class
  source:
    id: SetAsserts
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 18
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  syntax:
    content: public class SetAsserts
    content.vb: Public Class SetAsserts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.ISet{``0})
  id: Contains``1(``0,System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(T, ISet<T>)
  nameWithType: SetAsserts.Contains<T>(T, ISet<T>)
  fullName: Asserts.SetAsserts.Contains<T>(T, System.Collections.Generic.ISet<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 35
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the set contains the given object.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Contains<T>(T expected, ISet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Generic.ISet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Contains(Of T)(expected As T, [set] As ISet(Of T))
  overload: Asserts.SetAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.Contains(Of T)(T, ISet(Of T))
  fullName.vb: Asserts.SetAsserts.Contains(Of T)(T, System.Collections.Generic.ISet(Of T))
  name.vb: Contains(Of T)(T, ISet(Of T))
- uid: Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.HashSet{``0})
  commentId: M:Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.HashSet{``0})
  id: Contains``1(``0,System.Collections.Generic.HashSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(T, HashSet<T>)
  nameWithType: SetAsserts.Contains<T>(T, HashSet<T>)
  fullName: Asserts.SetAsserts.Contains<T>(T, System.Collections.Generic.HashSet<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 91
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the hashset contains the given object.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Contains<T>(T expected, HashSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Generic.HashSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Contains(Of T)(expected As T, [set] As HashSet(Of T))
  overload: Asserts.SetAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.Contains(Of T)(T, HashSet(Of T))
  fullName.vb: Asserts.SetAsserts.Contains(Of T)(T, System.Collections.Generic.HashSet(Of T))
  name.vb: Contains(Of T)(T, HashSet(Of T))
- uid: Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.SortedSet{``0})
  commentId: M:Asserts.SetAsserts.Contains``1(``0,System.Collections.Generic.SortedSet{``0})
  id: Contains``1(``0,System.Collections.Generic.SortedSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(T, SortedSet<T>)
  nameWithType: SetAsserts.Contains<T>(T, SortedSet<T>)
  fullName: Asserts.SetAsserts.Contains<T>(T, System.Collections.Generic.SortedSet<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 109
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the sorted hashset contains the given object.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Contains<T>(T expected, SortedSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Generic.SortedSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Contains(Of T)(expected As T, [set] As SortedSet(Of T))
  overload: Asserts.SetAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.Contains(Of T)(T, SortedSet(Of T))
  fullName.vb: Asserts.SetAsserts.Contains(Of T)(T, System.Collections.Generic.SortedSet(Of T))
  name.vb: Contains(Of T)(T, SortedSet(Of T))
- uid: Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  commentId: M:Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  id: Contains``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(T, ImmutableHashSet<T>)
  nameWithType: SetAsserts.Contains<T>(T, ImmutableHashSet<T>)
  fullName: Asserts.SetAsserts.Contains<T>(T, System.Collections.Immutable.ImmutableHashSet<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 127
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the immutable hashset contains the given object.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Contains<T>(T expected, ImmutableHashSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Contains(Of T)(expected As T, [set] As ImmutableHashSet(Of T))
  overload: Asserts.SetAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.Contains(Of T)(T, ImmutableHashSet(Of T))
  fullName.vb: Asserts.SetAsserts.Contains(Of T)(T, System.Collections.Immutable.ImmutableHashSet(Of T))
  name.vb: Contains(Of T)(T, ImmutableHashSet(Of T))
- uid: Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  commentId: M:Asserts.SetAsserts.Contains``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  id: Contains``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(T, ImmutableSortedSet<T>)
  nameWithType: SetAsserts.Contains<T>(T, ImmutableSortedSet<T>)
  fullName: Asserts.SetAsserts.Contains<T>(T, System.Collections.Immutable.ImmutableSortedSet<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 145
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the immutable sorted hashset contains the given object.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Contains<T>(T expected, ImmutableSortedSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Contains(Of T)(expected As T, [set] As ImmutableSortedSet(Of T))
  overload: Asserts.SetAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.Contains(Of T)(T, ImmutableSortedSet(Of T))
  fullName.vb: Asserts.SetAsserts.Contains(Of T)(T, System.Collections.Immutable.ImmutableSortedSet(Of T))
  name.vb: Contains(Of T)(T, ImmutableSortedSet(Of T))
- uid: Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.ISet{``0})
  id: DoesNotContain``1(``0,System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(T, ISet<T>)
  nameWithType: SetAsserts.DoesNotContain<T>(T, ISet<T>)
  fullName: Asserts.SetAsserts.DoesNotContain<T>(T, System.Collections.Generic.ISet<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 163
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the set does not contain the given item.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void DoesNotContain<T>(T expected, ISet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object that is expected not to be in the set
    - id: set
      type: System.Collections.Generic.ISet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be compared
    content.vb: Public Shared Sub DoesNotContain(Of T)(expected As T, [set] As ISet(Of T))
  overload: Asserts.SetAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.DoesNotContainException
    commentId: T:Xunit.Sdk.DoesNotContainException
    description: Thrown when the object is present inside the set
  nameWithType.vb: SetAsserts.DoesNotContain(Of T)(T, ISet(Of T))
  fullName.vb: Asserts.SetAsserts.DoesNotContain(Of T)(T, System.Collections.Generic.ISet(Of T))
  name.vb: DoesNotContain(Of T)(T, ISet(Of T))
- uid: Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.HashSet{``0})
  commentId: M:Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.HashSet{``0})
  id: DoesNotContain``1(``0,System.Collections.Generic.HashSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(T, HashSet<T>)
  nameWithType: SetAsserts.DoesNotContain<T>(T, HashSet<T>)
  fullName: Asserts.SetAsserts.DoesNotContain<T>(T, System.Collections.Generic.HashSet<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 217
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the hashset does not contain the given item.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void DoesNotContain<T>(T expected, HashSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Generic.HashSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub DoesNotContain(Of T)(expected As T, [set] As HashSet(Of T))
  overload: Asserts.SetAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.DoesNotContain(Of T)(T, HashSet(Of T))
  fullName.vb: Asserts.SetAsserts.DoesNotContain(Of T)(T, System.Collections.Generic.HashSet(Of T))
  name.vb: DoesNotContain(Of T)(T, HashSet(Of T))
- uid: Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.SortedSet{``0})
  commentId: M:Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Generic.SortedSet{``0})
  id: DoesNotContain``1(``0,System.Collections.Generic.SortedSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(T, SortedSet<T>)
  nameWithType: SetAsserts.DoesNotContain<T>(T, SortedSet<T>)
  fullName: Asserts.SetAsserts.DoesNotContain<T>(T, System.Collections.Generic.SortedSet<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 235
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the sorted hashset does not contain the given item.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void DoesNotContain<T>(T expected, SortedSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Generic.SortedSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub DoesNotContain(Of T)(expected As T, [set] As SortedSet(Of T))
  overload: Asserts.SetAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.DoesNotContain(Of T)(T, SortedSet(Of T))
  fullName.vb: Asserts.SetAsserts.DoesNotContain(Of T)(T, System.Collections.Generic.SortedSet(Of T))
  name.vb: DoesNotContain(Of T)(T, SortedSet(Of T))
- uid: Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  commentId: M:Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  id: DoesNotContain``1(``0,System.Collections.Immutable.ImmutableHashSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(T, ImmutableHashSet<T>)
  nameWithType: SetAsserts.DoesNotContain<T>(T, ImmutableHashSet<T>)
  fullName: Asserts.SetAsserts.DoesNotContain<T>(T, System.Collections.Immutable.ImmutableHashSet<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 253
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the immutable hashset does not contain the given item.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void DoesNotContain<T>(T expected, ImmutableHashSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Immutable.ImmutableHashSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub DoesNotContain(Of T)(expected As T, [set] As ImmutableHashSet(Of T))
  overload: Asserts.SetAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.DoesNotContain(Of T)(T, ImmutableHashSet(Of T))
  fullName.vb: Asserts.SetAsserts.DoesNotContain(Of T)(T, System.Collections.Immutable.ImmutableHashSet(Of T))
  name.vb: DoesNotContain(Of T)(T, ImmutableHashSet(Of T))
- uid: Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  commentId: M:Asserts.SetAsserts.DoesNotContain``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  id: DoesNotContain``1(``0,System.Collections.Immutable.ImmutableSortedSet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(T, ImmutableSortedSet<T>)
  nameWithType: SetAsserts.DoesNotContain<T>(T, ImmutableSortedSet<T>)
  fullName: Asserts.SetAsserts.DoesNotContain<T>(T, System.Collections.Immutable.ImmutableSortedSet<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 271
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that the immutable sorted hashset does not contain the given item.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void DoesNotContain<T>(T expected, ImmutableSortedSet<T> set)
    parameters:
    - id: expected
      type: '{T}'
      description: The object expected to be in the set
    - id: set
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The set to be inspected
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub DoesNotContain(Of T)(expected As T, [set] As ImmutableSortedSet(Of T))
  overload: Asserts.SetAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the object is not present in the set
  nameWithType.vb: SetAsserts.DoesNotContain(Of T)(T, ImmutableSortedSet(Of T))
  fullName.vb: Asserts.SetAsserts.DoesNotContain(Of T)(T, System.Collections.Immutable.ImmutableSortedSet(Of T))
  name.vb: DoesNotContain(Of T)(T, ImmutableSortedSet(Of T))
- uid: Asserts.SetAsserts.ProperSubset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.ProperSubset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  id: ProperSubset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: ProperSubset<T>(ISet<T>, ISet<T>?)
  nameWithType: SetAsserts.ProperSubset<T>(ISet<T>, ISet<T>?)
  fullName: Asserts.SetAsserts.ProperSubset<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>?)
  type: Method
  source:
    id: ProperSubset
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 289
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a set is a proper subset of another set.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void ProperSubset<T>(ISet<T> expectedSubset, ISet<T>? actual)
    parameters:
    - id: expectedSubset
      type: System.Collections.Generic.ISet{{T}}
      description: The expected subset
    - id: actual
      type: System.Collections.Generic.ISet{{T}}
      description: The set expected to be a proper subset
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub ProperSubset(Of T)(expectedSubset As ISet(Of T), actual As ISet(Of T))
  overload: Asserts.SetAsserts.ProperSubset*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the actual set is not a proper subset of the expected set
  nameWithType.vb: SetAsserts.ProperSubset(Of T)(ISet(Of T), ISet(Of T))
  fullName.vb: Asserts.SetAsserts.ProperSubset(Of T)(System.Collections.Generic.ISet(Of T), System.Collections.Generic.ISet(Of T))
  name.vb: ProperSubset(Of T)(ISet(Of T), ISet(Of T))
- uid: Asserts.SetAsserts.ProperSuperset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.ProperSuperset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  id: ProperSuperset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: ProperSuperset<T>(ISet<T>, ISet<T>?)
  nameWithType: SetAsserts.ProperSuperset<T>(ISet<T>, ISet<T>?)
  fullName: Asserts.SetAsserts.ProperSuperset<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>?)
  type: Method
  source:
    id: ProperSuperset
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 319
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a set is a proper superset of another set.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void ProperSuperset<T>(ISet<T> expectedSuperset, ISet<T>? actual)
    parameters:
    - id: expectedSuperset
      type: System.Collections.Generic.ISet{{T}}
      description: The expected superset
    - id: actual
      type: System.Collections.Generic.ISet{{T}}
      description: The set expected to be a proper superset
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub ProperSuperset(Of T)(expectedSuperset As ISet(Of T), actual As ISet(Of T))
  overload: Asserts.SetAsserts.ProperSuperset*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the actual set is not a proper superset of the expected set
  nameWithType.vb: SetAsserts.ProperSuperset(Of T)(ISet(Of T), ISet(Of T))
  fullName.vb: Asserts.SetAsserts.ProperSuperset(Of T)(System.Collections.Generic.ISet(Of T), System.Collections.Generic.ISet(Of T))
  name.vb: ProperSuperset(Of T)(ISet(Of T), ISet(Of T))
- uid: Asserts.SetAsserts.Subset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.Subset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  id: Subset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Subset<T>(ISet<T>, ISet<T>?)
  nameWithType: SetAsserts.Subset<T>(ISet<T>, ISet<T>?)
  fullName: Asserts.SetAsserts.Subset<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>?)
  type: Method
  source:
    id: Subset
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 349
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a set is a subset of another set.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Subset<T>(ISet<T> expectedSubset, ISet<T>? actual)
    parameters:
    - id: expectedSubset
      type: System.Collections.Generic.ISet{{T}}
      description: The expected subset
    - id: actual
      type: System.Collections.Generic.ISet{{T}}
      description: The set expected to be a subset
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Subset(Of T)(expectedSubset As ISet(Of T), actual As ISet(Of T))
  overload: Asserts.SetAsserts.Subset*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the actual set is not a subset of the expected set
  nameWithType.vb: SetAsserts.Subset(Of T)(ISet(Of T), ISet(Of T))
  fullName.vb: Asserts.SetAsserts.Subset(Of T)(System.Collections.Generic.ISet(Of T), System.Collections.Generic.ISet(Of T))
  name.vb: Subset(Of T)(ISet(Of T), ISet(Of T))
- uid: Asserts.SetAsserts.Superset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  commentId: M:Asserts.SetAsserts.Superset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  id: Superset``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0})
  parent: Asserts.SetAsserts
  langs:
  - csharp
  - vb
  name: Superset<T>(ISet<T>, ISet<T>?)
  nameWithType: SetAsserts.Superset<T>(ISet<T>, ISet<T>?)
  fullName: Asserts.SetAsserts.Superset<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>?)
  type: Method
  source:
    id: Superset
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SetAsserts.cs
    startLine: 379
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a set is a superset of another set.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void Superset<T>(ISet<T> expectedSuperset, ISet<T>? actual)
    parameters:
    - id: expectedSuperset
      type: System.Collections.Generic.ISet{{T}}
      description: The expected superset
    - id: actual
      type: System.Collections.Generic.ISet{{T}}
      description: The set expected to be a superset
    typeParameters:
    - id: T
      description: The type of the object to be verified
    content.vb: Public Shared Sub Superset(Of T)(expectedSuperset As ISet(Of T), actual As ISet(Of T))
  overload: Asserts.SetAsserts.Superset*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the actual set is not a superset of the expected set
  nameWithType.vb: SetAsserts.Superset(Of T)(ISet(Of T), ISet(Of T))
  fullName.vb: Asserts.SetAsserts.Superset(Of T)(System.Collections.Generic.ISet(Of T), System.Collections.Generic.ISet(Of T))
  name.vb: Superset(Of T)(ISet(Of T), ISet(Of T))
references:
- uid: Asserts
  commentId: N:Asserts
  href: Asserts.html
  name: Asserts
  nameWithType: Asserts
  fullName: Asserts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Sdk.ContainsException
  commentId: T:Xunit.Sdk.ContainsException
  parent: Xunit.Sdk
  href: Xunit.Sdk.ContainsException.html
  name: ContainsException
  nameWithType: ContainsException
  fullName: Xunit.Sdk.ContainsException
- uid: Asserts.SetAsserts.Contains*
  commentId: Overload:Asserts.SetAsserts.Contains
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_Contains__1___0_System_Collections_Generic_ISet___0__
  name: Contains
  nameWithType: SetAsserts.Contains
  fullName: Asserts.SetAsserts.Contains
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ISet{{T}}
  commentId: T:System.Collections.Generic.ISet{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.HashSet{{T}}
  commentId: T:System.Collections.Generic.HashSet{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedSet{{T}}
  commentId: T:System.Collections.Generic.SortedSet{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.SortedSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  name: SortedSet<T>
  nameWithType: SortedSet<T>
  fullName: System.Collections.Generic.SortedSet<T>
  nameWithType.vb: SortedSet(Of T)
  fullName.vb: System.Collections.Generic.SortedSet(Of T)
  name.vb: SortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedSet`1
    name: SortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedSet`1
    name: SortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedSet`1
  commentId: T:System.Collections.Generic.SortedSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  name: SortedSet<T>
  nameWithType: SortedSet<T>
  fullName: System.Collections.Generic.SortedSet<T>
  nameWithType.vb: SortedSet(Of T)
  fullName.vb: System.Collections.Generic.SortedSet(Of T)
  name.vb: SortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedSet`1
    name: SortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedSet`1
    name: SortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet{{T}}
  commentId: T:System.Collections.Immutable.ImmutableHashSet{``0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableHashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
  nameWithType.vb: ImmutableHashSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T)
  name.vb: ImmutableHashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableHashSet`1
  commentId: T:System.Collections.Immutable.ImmutableHashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
  nameWithType.vb: ImmutableHashSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableHashSet(Of T)
  name.vb: ImmutableHashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablehashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: System.Collections.Immutable.ImmutableSortedSet{{T}}
  commentId: T:System.Collections.Immutable.ImmutableSortedSet{``0}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  name: ImmutableSortedSet<T>
  nameWithType: ImmutableSortedSet<T>
  fullName: System.Collections.Immutable.ImmutableSortedSet<T>
  nameWithType.vb: ImmutableSortedSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of T)
  name.vb: ImmutableSortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedSet`1
  commentId: T:System.Collections.Immutable.ImmutableSortedSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  name: ImmutableSortedSet<T>
  nameWithType: ImmutableSortedSet<T>
  fullName: System.Collections.Immutable.ImmutableSortedSet<T>
  nameWithType.vb: ImmutableSortedSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of T)
  name.vb: ImmutableSortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Sdk.DoesNotContainException
  commentId: T:Xunit.Sdk.DoesNotContainException
  parent: Xunit.Sdk
  href: Xunit.Sdk.DoesNotContainException.html
  name: DoesNotContainException
  nameWithType: DoesNotContainException
  fullName: Xunit.Sdk.DoesNotContainException
- uid: Asserts.SetAsserts.DoesNotContain*
  commentId: Overload:Asserts.SetAsserts.DoesNotContain
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_DoesNotContain__1___0_System_Collections_Generic_ISet___0__
  name: DoesNotContain
  nameWithType: SetAsserts.DoesNotContain
  fullName: Asserts.SetAsserts.DoesNotContain
- uid: Asserts.SetAsserts.ProperSubset*
  commentId: Overload:Asserts.SetAsserts.ProperSubset
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_ProperSubset__1_System_Collections_Generic_ISet___0__System_Collections_Generic_ISet___0__
  name: ProperSubset
  nameWithType: SetAsserts.ProperSubset
  fullName: Asserts.SetAsserts.ProperSubset
- uid: Asserts.SetAsserts.ProperSuperset*
  commentId: Overload:Asserts.SetAsserts.ProperSuperset
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_ProperSuperset__1_System_Collections_Generic_ISet___0__System_Collections_Generic_ISet___0__
  name: ProperSuperset
  nameWithType: SetAsserts.ProperSuperset
  fullName: Asserts.SetAsserts.ProperSuperset
- uid: Asserts.SetAsserts.Subset*
  commentId: Overload:Asserts.SetAsserts.Subset
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_Subset__1_System_Collections_Generic_ISet___0__System_Collections_Generic_ISet___0__
  name: Subset
  nameWithType: SetAsserts.Subset
  fullName: Asserts.SetAsserts.Subset
- uid: Asserts.SetAsserts.Superset*
  commentId: Overload:Asserts.SetAsserts.Superset
  href: Asserts.SetAsserts.html#Asserts_SetAsserts_Superset__1_System_Collections_Generic_ISet___0__System_Collections_Generic_ISet___0__
  name: Superset
  nameWithType: SetAsserts.Superset
  fullName: Asserts.SetAsserts.Superset
