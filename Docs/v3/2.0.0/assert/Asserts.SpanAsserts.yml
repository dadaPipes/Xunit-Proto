### YamlMime:ManagedReference
items:
- uid: Asserts.SpanAsserts
  commentId: T:Asserts.SpanAsserts
  id: SpanAsserts
  parent: Asserts
  children:
  - Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.Span{``0})
  - Asserts.SpanAsserts.Contains``1(System.Span{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.Contains``1(System.Span{``0},System.Span{``0})
  - Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.Span{``0})
  - Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.Span{``0})
  - Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.Span{``0})
  - Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},``0[])
  - Asserts.SpanAsserts.Equal``1(System.Span{``0},System.ReadOnlySpan{``0})
  - Asserts.SpanAsserts.Equal``1(System.Span{``0},System.Span{``0})
  langs:
  - csharp
  - vb
  name: SpanAsserts
  nameWithType: SpanAsserts
  fullName: Asserts.SpanAsserts
  type: Class
  source:
    id: SpanAsserts
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 14
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  syntax:
    content: public class SpanAsserts
    content.vb: Public Class SpanAsserts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Asserts.SpanAsserts.Contains``1(System.Span{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.Contains``1(System.Span{``0},System.Span{``0})
  id: Contains``1(System.Span{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(Span<T>, Span<T>)
  nameWithType: SpanAsserts.Contains<T>(Span<T>, Span<T>)
  fullName: Asserts.SpanAsserts.Contains<T>(System.Span<T>, System.Span<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 37
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span contains a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Contains<T>(Span<T> expectedSubSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.Span{{T}}
      description: The sub-span expected to be in the span
    - id: actualSpan
      type: System.Span{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Contains(Of T As IEquatable(Of T))(expectedSubSpan As Span(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the sub-span is not present inside the span
  nameWithType.vb: SpanAsserts.Contains(Of T)(Span(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.Contains(Of T)(System.Span(Of T), System.Span(Of T))
  name.vb: Contains(Of T)(Span(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.Contains``1(System.Span{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.Contains``1(System.Span{``0},System.ReadOnlySpan{``0})
  id: Contains``1(System.Span{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(Span<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.Contains<T>(Span<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.Contains<T>(System.Span<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 55
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span contains a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Contains<T>(Span<T> expectedSubSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.Span{{T}}
      description: The sub-span expected to be in the span
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Contains(Of T As IEquatable(Of T))(expectedSubSpan As Span(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the sub-span is not present inside the span
  nameWithType.vb: SpanAsserts.Contains(Of T)(Span(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.Contains(Of T)(System.Span(Of T), System.ReadOnlySpan(Of T))
  name.vb: Contains(Of T)(Span(Of T), ReadOnlySpan(Of T))
- uid: Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.Span{``0})
  id: Contains``1(System.ReadOnlySpan{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(ReadOnlySpan<T>, Span<T>)
  nameWithType: SpanAsserts.Contains<T>(ReadOnlySpan<T>, Span<T>)
  fullName: Asserts.SpanAsserts.Contains<T>(System.ReadOnlySpan<T>, System.Span<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 73
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span contains a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Contains<T>(ReadOnlySpan<T> expectedSubSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.ReadOnlySpan{{T}}
      description: The sub-span expected to be in the span
    - id: actualSpan
      type: System.Span{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Contains(Of T As IEquatable(Of T))(expectedSubSpan As ReadOnlySpan(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the sub-span is not present inside the span
  nameWithType.vb: SpanAsserts.Contains(Of T)(ReadOnlySpan(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.Contains(Of T)(System.ReadOnlySpan(Of T), System.Span(Of T))
  name.vb: Contains(Of T)(ReadOnlySpan(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.Contains``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  id: Contains``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Contains<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.Contains<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.Contains<T>(System.ReadOnlySpan<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: Contains
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 91
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span contains a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Contains<T>(ReadOnlySpan<T> expectedSubSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.ReadOnlySpan{{T}}
      description: The sub-span expected to be in the span
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Contains(Of T As IEquatable(Of T))(expectedSubSpan As ReadOnlySpan(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.Contains*
  exceptions:
  - type: Xunit.Sdk.ContainsException
    commentId: T:Xunit.Sdk.ContainsException
    description: Thrown when the sub-span is not present inside the span
  nameWithType.vb: SpanAsserts.Contains(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.Contains(Of T)(System.ReadOnlySpan(Of T), System.ReadOnlySpan(Of T))
  name.vb: Contains(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
- uid: Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.Span{``0})
  id: DoesNotContain``1(System.Span{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(Span<T>, Span<T>)
  nameWithType: SpanAsserts.DoesNotContain<T>(Span<T>, Span<T>)
  fullName: Asserts.SpanAsserts.DoesNotContain<T>(System.Span<T>, System.Span<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 115
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span does not contain a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void DoesNotContain<T>(Span<T> expectedSubSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.Span{{T}}
      description: The sub-span expected not to be in the span
    - id: actualSpan
      type: System.Span{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub DoesNotContain(Of T As IEquatable(Of T))(expectedSubSpan As Span(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.DoesNotContainException
    commentId: T:Xunit.Sdk.DoesNotContainException
    description: Thrown when the sub-span is present inside the span
  nameWithType.vb: SpanAsserts.DoesNotContain(Of T)(Span(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.DoesNotContain(Of T)(System.Span(Of T), System.Span(Of T))
  name.vb: DoesNotContain(Of T)(Span(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.DoesNotContain``1(System.Span{``0},System.ReadOnlySpan{``0})
  id: DoesNotContain``1(System.Span{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(Span<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.DoesNotContain<T>(Span<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.DoesNotContain<T>(System.Span<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 133
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span does not contain a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void DoesNotContain<T>(Span<T> expectedSubSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.Span{{T}}
      description: The sub-span expected not to be in the span
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub DoesNotContain(Of T As IEquatable(Of T))(expectedSubSpan As Span(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.DoesNotContainException
    commentId: T:Xunit.Sdk.DoesNotContainException
    description: Thrown when the sub-span is present inside the span
  nameWithType.vb: SpanAsserts.DoesNotContain(Of T)(Span(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.DoesNotContain(Of T)(System.Span(Of T), System.ReadOnlySpan(Of T))
  name.vb: DoesNotContain(Of T)(Span(Of T), ReadOnlySpan(Of T))
- uid: Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.Span{``0})
  id: DoesNotContain``1(System.ReadOnlySpan{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(ReadOnlySpan<T>, Span<T>)
  nameWithType: SpanAsserts.DoesNotContain<T>(ReadOnlySpan<T>, Span<T>)
  fullName: Asserts.SpanAsserts.DoesNotContain<T>(System.ReadOnlySpan<T>, System.Span<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 151
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span does not contain a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void DoesNotContain<T>(ReadOnlySpan<T> expectedSubSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.ReadOnlySpan{{T}}
      description: The sub-span expected not to be in the span
    - id: actualSpan
      type: System.Span{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub DoesNotContain(Of T As IEquatable(Of T))(expectedSubSpan As ReadOnlySpan(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.DoesNotContainException
    commentId: T:Xunit.Sdk.DoesNotContainException
    description: Thrown when the sub-span is present inside the span
  nameWithType.vb: SpanAsserts.DoesNotContain(Of T)(ReadOnlySpan(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.DoesNotContain(Of T)(System.ReadOnlySpan(Of T), System.Span(Of T))
  name.vb: DoesNotContain(Of T)(ReadOnlySpan(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.DoesNotContain``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  id: DoesNotContain``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: DoesNotContain<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.DoesNotContain<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.DoesNotContain<T>(System.ReadOnlySpan<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: DoesNotContain
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 169
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span does not contain a given sub-span
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void DoesNotContain<T>(ReadOnlySpan<T> expectedSubSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSubSpan
      type: System.ReadOnlySpan{{T}}
      description: The sub-span expected not to be in the span
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The span to be inspected
    typeParameters:
    - id: T
    content.vb: Public Shared Sub DoesNotContain(Of T As IEquatable(Of T))(expectedSubSpan As ReadOnlySpan(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.DoesNotContain*
  exceptions:
  - type: Xunit.Sdk.DoesNotContainException
    commentId: T:Xunit.Sdk.DoesNotContainException
    description: Thrown when the sub-span is present inside the span
  nameWithType.vb: SpanAsserts.DoesNotContain(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.DoesNotContain(Of T)(System.ReadOnlySpan(Of T), System.ReadOnlySpan(Of T))
  name.vb: DoesNotContain(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
- uid: Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},``0[])
  commentId: M:Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},``0[])
  id: Equal``1(System.ReadOnlySpan{``0},``0[])
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(ReadOnlySpan<T>, T[])
  nameWithType: SpanAsserts.Equal<T>(ReadOnlySpan<T>, T[])
  fullName: Asserts.SpanAsserts.Equal<T>(System.ReadOnlySpan<T>, T[])
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 202
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a span and an array contain the same values in the same order.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(ReadOnlySpan<T> expectedSpan, T[] actualArray) where T : IEquatable<T>'
    parameters:
    - id: expectedSpan
      type: System.ReadOnlySpan{{T}}
      description: The expected span value.
    - id: actualArray
      type: '{T}[]'
      description: The actual array value.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Equal(Of T As IEquatable(Of T))(expectedSpan As ReadOnlySpan(Of T), actualArray As T())
  overload: Asserts.SpanAsserts.Equal*
  exceptions:
  - type: Xunit.Sdk.EqualException
    commentId: T:Xunit.Sdk.EqualException
    description: Thrown when the collections are not equal.
  nameWithType.vb: SpanAsserts.Equal(Of T)(ReadOnlySpan(Of T), T())
  fullName.vb: Asserts.SpanAsserts.Equal(Of T)(System.ReadOnlySpan(Of T), T())
  name.vb: Equal(Of T)(ReadOnlySpan(Of T), T())
- uid: Asserts.SpanAsserts.Equal``1(System.Span{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.Equal``1(System.Span{``0},System.Span{``0})
  id: Equal``1(System.Span{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(Span<T>, Span<T>)
  nameWithType: SpanAsserts.Equal<T>(Span<T>, Span<T>)
  fullName: Asserts.SpanAsserts.Equal<T>(System.Span<T>, System.Span<T>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 220
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two spans contain the same values in the same order.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(Span<T> expectedSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSpan
      type: System.Span{{T}}
      description: The expected span value.
    - id: actualSpan
      type: System.Span{{T}}
      description: The actual span value.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Equal(Of T As IEquatable(Of T))(expectedSpan As Span(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.Equal*
  exceptions:
  - type: Xunit.Sdk.EqualException
    commentId: T:Xunit.Sdk.EqualException
    description: Thrown when the spans are not equal.
  nameWithType.vb: SpanAsserts.Equal(Of T)(Span(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.Equal(Of T)(System.Span(Of T), System.Span(Of T))
  name.vb: Equal(Of T)(Span(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.Equal``1(System.Span{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.Equal``1(System.Span{``0},System.ReadOnlySpan{``0})
  id: Equal``1(System.Span{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(Span<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.Equal<T>(Span<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.Equal<T>(System.Span<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 238
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two spans contain the same values in the same order.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(Span<T> expectedSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSpan
      type: System.Span{{T}}
      description: The expected span value.
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The actual span value.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Equal(Of T As IEquatable(Of T))(expectedSpan As Span(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.Equal*
  exceptions:
  - type: Xunit.Sdk.EqualException
    commentId: T:Xunit.Sdk.EqualException
    description: Thrown when the spans are not equal.
  nameWithType.vb: SpanAsserts.Equal(Of T)(Span(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.Equal(Of T)(System.Span(Of T), System.ReadOnlySpan(Of T))
  name.vb: Equal(Of T)(Span(Of T), ReadOnlySpan(Of T))
- uid: Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.Span{``0})
  commentId: M:Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.Span{``0})
  id: Equal``1(System.ReadOnlySpan{``0},System.Span{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(ReadOnlySpan<T>, Span<T>)
  nameWithType: SpanAsserts.Equal<T>(ReadOnlySpan<T>, Span<T>)
  fullName: Asserts.SpanAsserts.Equal<T>(System.ReadOnlySpan<T>, System.Span<T>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 256
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two spans contain the same values in the same order.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(ReadOnlySpan<T> expectedSpan, Span<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSpan
      type: System.ReadOnlySpan{{T}}
      description: The expected span value.
    - id: actualSpan
      type: System.Span{{T}}
      description: The actual span value.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Equal(Of T As IEquatable(Of T))(expectedSpan As ReadOnlySpan(Of T), actualSpan As Span(Of T))
  overload: Asserts.SpanAsserts.Equal*
  exceptions:
  - type: Xunit.Sdk.EqualException
    commentId: T:Xunit.Sdk.EqualException
    description: Thrown when the spans are not equal.
  nameWithType.vb: SpanAsserts.Equal(Of T)(ReadOnlySpan(Of T), Span(Of T))
  fullName.vb: Asserts.SpanAsserts.Equal(Of T)(System.ReadOnlySpan(Of T), System.Span(Of T))
  name.vb: Equal(Of T)(ReadOnlySpan(Of T), Span(Of T))
- uid: Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  commentId: M:Asserts.SpanAsserts.Equal``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  id: Equal``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0})
  parent: Asserts.SpanAsserts
  langs:
  - csharp
  - vb
  name: Equal<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  nameWithType: SpanAsserts.Equal<T>(ReadOnlySpan<T>, ReadOnlySpan<T>)
  fullName: Asserts.SpanAsserts.Equal<T>(System.ReadOnlySpan<T>, System.ReadOnlySpan<T>)
  type: Method
  source:
    id: Equal
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\SpanAsserts.cs
    startLine: 274
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that two spans contain the same values in the same order.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void Equal<T>(ReadOnlySpan<T> expectedSpan, ReadOnlySpan<T> actualSpan) where T : IEquatable<T>'
    parameters:
    - id: expectedSpan
      type: System.ReadOnlySpan{{T}}
      description: The expected span value.
    - id: actualSpan
      type: System.ReadOnlySpan{{T}}
      description: The actual span value.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Equal(Of T As IEquatable(Of T))(expectedSpan As ReadOnlySpan(Of T), actualSpan As ReadOnlySpan(Of T))
  overload: Asserts.SpanAsserts.Equal*
  exceptions:
  - type: Xunit.Sdk.EqualException
    commentId: T:Xunit.Sdk.EqualException
    description: Thrown when the spans are not equal.
  nameWithType.vb: SpanAsserts.Equal(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
  fullName.vb: Asserts.SpanAsserts.Equal(Of T)(System.ReadOnlySpan(Of T), System.ReadOnlySpan(Of T))
  name.vb: Equal(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T))
references:
- uid: Asserts
  commentId: N:Asserts
  href: Asserts.html
  name: Asserts
  nameWithType: Asserts
  fullName: Asserts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Sdk.ContainsException
  commentId: T:Xunit.Sdk.ContainsException
  parent: Xunit.Sdk
  href: Xunit.Sdk.ContainsException.html
  name: ContainsException
  nameWithType: ContainsException
  fullName: Xunit.Sdk.ContainsException
- uid: Asserts.SpanAsserts.Contains*
  commentId: Overload:Asserts.SpanAsserts.Contains
  href: Asserts.SpanAsserts.html#Asserts_SpanAsserts_Contains__1_System_Span___0__System_Span___0__
  name: Contains
  nameWithType: SpanAsserts.Contains
  fullName: Asserts.SpanAsserts.Contains
- uid: System.Span{{T}}
  commentId: T:System.Span{``0}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan{{T}}
  commentId: T:System.ReadOnlySpan{``0}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Xunit.Sdk.DoesNotContainException
  commentId: T:Xunit.Sdk.DoesNotContainException
  parent: Xunit.Sdk
  href: Xunit.Sdk.DoesNotContainException.html
  name: DoesNotContainException
  nameWithType: DoesNotContainException
  fullName: Xunit.Sdk.DoesNotContainException
- uid: Asserts.SpanAsserts.DoesNotContain*
  commentId: Overload:Asserts.SpanAsserts.DoesNotContain
  href: Asserts.SpanAsserts.html#Asserts_SpanAsserts_DoesNotContain__1_System_Span___0__System_Span___0__
  name: DoesNotContain
  nameWithType: SpanAsserts.DoesNotContain
  fullName: Asserts.SpanAsserts.DoesNotContain
- uid: Xunit.Sdk.EqualException
  commentId: T:Xunit.Sdk.EqualException
  parent: Xunit.Sdk
  href: Xunit.Sdk.EqualException.html
  name: EqualException
  nameWithType: EqualException
  fullName: Xunit.Sdk.EqualException
- uid: Asserts.SpanAsserts.Equal*
  commentId: Overload:Asserts.SpanAsserts.Equal
  href: Asserts.SpanAsserts.html#Asserts_SpanAsserts_Equal__1_System_ReadOnlySpan___0____0___
  name: Equal
  nameWithType: SpanAsserts.Equal
  fullName: Asserts.SpanAsserts.Equal
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
