### YamlMime:ManagedReference
items:
- uid: Asserts.RangeAsserts
  commentId: T:Asserts.RangeAsserts
  id: RangeAsserts
  parent: Asserts
  children:
  - Asserts.RangeAsserts.InRange``1(``0,``0,``0)
  - Asserts.RangeAsserts.InRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  - Asserts.RangeAsserts.NotInRange``1(``0,``0,``0)
  - Asserts.RangeAsserts.NotInRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  langs:
  - csharp
  - vb
  name: RangeAsserts
  nameWithType: RangeAsserts
  fullName: Asserts.RangeAsserts
  type: Class
  source:
    id: RangeAsserts
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\RangeAsserts.cs
    startLine: 18
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  syntax:
    content: public class RangeAsserts
    content.vb: Public Class RangeAsserts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Asserts.RangeAsserts.InRange``1(``0,``0,``0)
  commentId: M:Asserts.RangeAsserts.InRange``1(``0,``0,``0)
  id: InRange``1(``0,``0,``0)
  parent: Asserts.RangeAsserts
  langs:
  - csharp
  - vb
  name: InRange<T>(T, T, T)
  nameWithType: RangeAsserts.InRange<T>(T, T, T)
  fullName: Asserts.RangeAsserts.InRange<T>(T, T, T)
  type: Method
  source:
    id: InRange
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\RangeAsserts.cs
    startLine: 36
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a value is within a given range.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void InRange<T>(T actual, T low, T high) where T : IComparable'
    parameters:
    - id: actual
      type: '{T}'
      description: The actual value to be evaluated
    - id: low
      type: '{T}'
      description: The (inclusive) low value of the range
    - id: high
      type: '{T}'
      description: The (inclusive) high value of the range
    typeParameters:
    - id: T
      description: The type of the value to be compared
    content.vb: Public Shared Sub InRange(Of T As IComparable)(actual As T, low As T, high As T)
  overload: Asserts.RangeAsserts.InRange*
  exceptions:
  - type: Xunit.Sdk.InRangeException
    commentId: T:Xunit.Sdk.InRangeException
    description: Thrown when the value is not in the given range
  nameWithType.vb: RangeAsserts.InRange(Of T)(T, T, T)
  fullName.vb: Asserts.RangeAsserts.InRange(Of T)(T, T, T)
  name.vb: InRange(Of T)(T, T, T)
- uid: Asserts.RangeAsserts.InRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  commentId: M:Asserts.RangeAsserts.InRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  id: InRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  parent: Asserts.RangeAsserts
  langs:
  - csharp
  - vb
  name: InRange<T>(T, T, T, IComparer<T>)
  nameWithType: RangeAsserts.InRange<T>(T, T, T, IComparer<T>)
  fullName: Asserts.RangeAsserts.InRange<T>(T, T, T, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    id: InRange
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\RangeAsserts.cs
    startLine: 58
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a value is within a given range, using a comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void InRange<T>(T actual, T low, T high, IComparer<T> comparer)
    parameters:
    - id: actual
      type: '{T}'
      description: The actual value to be evaluated
    - id: low
      type: '{T}'
      description: The (inclusive) low value of the range
    - id: high
      type: '{T}'
      description: The (inclusive) high value of the range
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer used to evaluate the value's range
    typeParameters:
    - id: T
      description: The type of the value to be compared
    content.vb: Public Shared Sub InRange(Of T)(actual As T, low As T, high As T, comparer As IComparer(Of T))
  overload: Asserts.RangeAsserts.InRange*
  exceptions:
  - type: Xunit.Sdk.InRangeException
    commentId: T:Xunit.Sdk.InRangeException
    description: Thrown when the value is not in the given range
  nameWithType.vb: RangeAsserts.InRange(Of T)(T, T, T, IComparer(Of T))
  fullName.vb: Asserts.RangeAsserts.InRange(Of T)(T, T, T, System.Collections.Generic.IComparer(Of T))
  name.vb: InRange(Of T)(T, T, T, IComparer(Of T))
- uid: Asserts.RangeAsserts.NotInRange``1(``0,``0,``0)
  commentId: M:Asserts.RangeAsserts.NotInRange``1(``0,``0,``0)
  id: NotInRange``1(``0,``0,``0)
  parent: Asserts.RangeAsserts
  langs:
  - csharp
  - vb
  name: NotInRange<T>(T, T, T)
  nameWithType: RangeAsserts.NotInRange<T>(T, T, T)
  fullName: Asserts.RangeAsserts.NotInRange<T>(T, T, T)
  type: Method
  source:
    id: NotInRange
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\RangeAsserts.cs
    startLine: 87
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a value is not within a given range, using the default comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: 'public static void NotInRange<T>(T actual, T low, T high) where T : IComparable'
    parameters:
    - id: actual
      type: '{T}'
      description: The actual value to be evaluated
    - id: low
      type: '{T}'
      description: The (inclusive) low value of the range
    - id: high
      type: '{T}'
      description: The (inclusive) high value of the range
    typeParameters:
    - id: T
      description: The type of the value to be compared
    content.vb: Public Shared Sub NotInRange(Of T As IComparable)(actual As T, low As T, high As T)
  overload: Asserts.RangeAsserts.NotInRange*
  exceptions:
  - type: Xunit.Sdk.NotInRangeException
    commentId: T:Xunit.Sdk.NotInRangeException
    description: Thrown when the value is in the given range
  nameWithType.vb: RangeAsserts.NotInRange(Of T)(T, T, T)
  fullName.vb: Asserts.RangeAsserts.NotInRange(Of T)(T, T, T)
  name.vb: NotInRange(Of T)(T, T, T)
- uid: Asserts.RangeAsserts.NotInRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  commentId: M:Asserts.RangeAsserts.NotInRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  id: NotInRange``1(``0,``0,``0,System.Collections.Generic.IComparer{``0})
  parent: Asserts.RangeAsserts
  langs:
  - csharp
  - vb
  name: NotInRange<T>(T, T, T, IComparer<T>)
  nameWithType: RangeAsserts.NotInRange<T>(T, T, T, IComparer<T>)
  fullName: Asserts.RangeAsserts.NotInRange<T>(T, T, T, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    id: NotInRange
    path: C:\Users\dadaP\source\TestingRepos\Xunit-Proto\v3\v3-2.0.0\src\xunit.v3.assert\Asserts\RangeAsserts.cs
    startLine: 109
  assemblies:
  - xunit.v3.assert
  namespace: Asserts
  summary: Verifies that a value is not within a given range, using a comparer.
  example:
  - >-
    <pre><code class="lang-csharp">Add an example for this method ?</code></pre>

    Contribution <a href="https://media.giphy.com/media/gVoBC0SuaHStq/giphy.gif">guide</a>.
  syntax:
    content: public static void NotInRange<T>(T actual, T low, T high, IComparer<T> comparer)
    parameters:
    - id: actual
      type: '{T}'
      description: The actual value to be evaluated
    - id: low
      type: '{T}'
      description: The (inclusive) low value of the range
    - id: high
      type: '{T}'
      description: The (inclusive) high value of the range
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer used to evaluate the value's range
    typeParameters:
    - id: T
      description: The type of the value to be compared
    content.vb: Public Shared Sub NotInRange(Of T)(actual As T, low As T, high As T, comparer As IComparer(Of T))
  overload: Asserts.RangeAsserts.NotInRange*
  exceptions:
  - type: Xunit.Sdk.NotInRangeException
    commentId: T:Xunit.Sdk.NotInRangeException
    description: Thrown when the value is in the given range
  nameWithType.vb: RangeAsserts.NotInRange(Of T)(T, T, T, IComparer(Of T))
  fullName.vb: Asserts.RangeAsserts.NotInRange(Of T)(T, T, T, System.Collections.Generic.IComparer(Of T))
  name.vb: NotInRange(Of T)(T, T, T, IComparer(Of T))
references:
- uid: Asserts
  commentId: N:Asserts
  href: Asserts.html
  name: Asserts
  nameWithType: Asserts
  fullName: Asserts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Sdk.InRangeException
  commentId: T:Xunit.Sdk.InRangeException
  parent: Xunit.Sdk
  href: Xunit.Sdk.InRangeException.html
  name: InRangeException
  nameWithType: InRangeException
  fullName: Xunit.Sdk.InRangeException
- uid: Asserts.RangeAsserts.InRange*
  commentId: Overload:Asserts.RangeAsserts.InRange
  href: Asserts.RangeAsserts.html#Asserts_RangeAsserts_InRange__1___0___0___0_
  name: InRange
  nameWithType: RangeAsserts.InRange
  fullName: Asserts.RangeAsserts.InRange
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Xunit.Sdk.NotInRangeException
  commentId: T:Xunit.Sdk.NotInRangeException
  parent: Xunit.Sdk
  href: Xunit.Sdk.NotInRangeException.html
  name: NotInRangeException
  nameWithType: NotInRangeException
  fullName: Xunit.Sdk.NotInRangeException
- uid: Asserts.RangeAsserts.NotInRange*
  commentId: Overload:Asserts.RangeAsserts.NotInRange
  href: Asserts.RangeAsserts.html#Asserts_RangeAsserts_NotInRange__1___0___0___0_
  name: NotInRange
  nameWithType: RangeAsserts.NotInRange
  fullName: Asserts.RangeAsserts.NotInRange
