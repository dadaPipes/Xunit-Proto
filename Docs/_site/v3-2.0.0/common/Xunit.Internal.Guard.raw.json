{
  "uid": "Xunit.Internal.Guard",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Internal",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Internal.Guard.ArgumentEnumValid``1(``0,System.Collections.Generic.HashSet{``0},System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentEnumValid<T>(T, HashSet<T>, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentEnumValid(Of T)(T, HashSet(Of T), String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentEnumValid<T>(T, HashSet<T>, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentEnumValid(Of T)(T, HashSet(Of T), String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentEnumValid<T>(T, System.Collections.Generic.HashSet<T>, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentEnumValid(Of T)(T, System.Collections.Generic.HashSet(Of T), String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentEnumValid``1(``0,System.Collections.Generic.HashSet{``0},System.String)\" text=\"ArgumentEnumValid&lt;T&gt;(T, HashSet&lt;T&gt;, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentEnumValid``1(``0,System.Collections.Generic.HashSet{``0},System.String)\" text=\"ArgumentEnumValid&lt;T&gt;(T, HashSet&lt;T&gt;, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentEnumValid<T>(T argValue, HashSet<T> validValues, string? argName = null) where T : Enum"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentEnumValid(Of T As [Enum])(argValue As T, validValues As HashSet(Of T), argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "validValues",
            "type": {
              "uid": "System.Collections.Generic.HashSet{{T}}",
              "definition": "System.Collections.Generic.HashSet`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "HashSet<T>"
                },
                {
                  "lang": "vb",
                  "value": "HashSet(Of T)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "HashSet<T>"
                },
                {
                  "lang": "vb",
                  "value": "HashSet(Of T)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.HashSet<T>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.HashSet(Of T)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1\">HashSet</a>&lt;T&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1\">HashSet</a>(Of T)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The list of valid values</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentEnumValid",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 25,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentEnumValid*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentEnumValid"
          },
          {
            "lang": "vb",
            "value": "ArgumentEnumValid"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentEnumValid"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentEnumValid"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentEnumValid"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentEnumValid"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentEnumValid*\" text=\"ArgumentEnumValid\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentEnumValid*\" text=\"ArgumentEnumValid\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": ""
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that an enum value is valid by comparing against a list of valid values.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.Func{System.String},``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNullOrEmpty<T>(Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNullOrEmpty(Of T)(Func(Of String), T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNullOrEmpty<T>(Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNullOrEmpty(Of T)(Func(Of String), T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty<T>(System.Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty(Of T)(System.Func(Of String), T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.Func{System.String},``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(Func&lt;string&gt;, T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.Func{System.String},``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(Func&lt;string&gt;, T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNullOrEmpty<T>(Func<string> messageFunc, T? argValue, string? argName = null) where T : class, IEnumerable"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNullOrEmpty(Of T As {Class, IEnumerable})(messageFunc As Func(Of String), argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "messageFunc",
            "type": {
              "uid": "System.Func{System.String}",
              "definition": "System.Func`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Func(Of String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The creator for an exception message to use when the argument is null or empty</p>\n"
          },
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null, non-empty value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNullOrEmpty",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 137,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNullOrEmpty"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null or empty</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable enumerable type argument is not null or empty.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.String,``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNullOrEmpty<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNullOrEmpty(Of T)(String, T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNullOrEmpty<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNullOrEmpty(Of T)(String, T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty(Of T)(String, T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.String,``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(string, T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(System.String,``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(string, T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNullOrEmpty<T>(string message, T? argValue, string? argName = null) where T : class, IEnumerable"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNullOrEmpty(Of T As {Class, IEnumerable})(message As String, argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The exception message to use when the argument is null or empty</p>\n"
          },
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null, non-empty value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNullOrEmpty",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 119,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNullOrEmpty"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null or empty</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable enumerable type argument is not null or empty.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNullOrEmpty<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNullOrEmpty(Of T)(T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNullOrEmpty<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNullOrEmpty(Of T)(T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty(Of T)(T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty``1(``0,System.String)\" text=\"ArgumentNotNullOrEmpty&lt;T&gt;(T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNullOrEmpty<T>(T? argValue, string? argName = null) where T : class, IEnumerable"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNullOrEmpty(Of T As {Class, IEnumerable})(argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null, non-empty value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNullOrEmpty",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 102,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNullOrEmpty"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNullOrEmpty"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNullOrEmpty*\" text=\"ArgumentNotNullOrEmpty\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null or empty</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable enumerable type argument is not null or empty.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNull``1(System.Func{System.String},``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNull<T>(Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNull(Of T)(Func(Of String), T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNull<T>(Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNull(Of T)(Func(Of String), T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNull<T>(System.Func<string>, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNull(Of T)(System.Func(Of String), T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.Func{System.String},``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(Func&lt;string&gt;, T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.Func{System.String},``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(Func&lt;string&gt;, T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNull<T>(Func<string> messageFunc, T? argValue, string? argName = null) where T : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNull(Of T As Class)(messageFunc As Func(Of String), argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "messageFunc",
            "type": {
              "uid": "System.Func{System.String}",
              "definition": "System.Func`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Func(Of String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The creator for an exception message to use when the argument is null</p>\n"
          },
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 87,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentNullException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentNullException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable reference type argument is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNull``1(System.Nullable{``0},System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNull(Of T)(T?, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNull(Of T)(T?, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNull(Of T)(T?, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.Nullable{``0},System.String)\" text=\"ArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.Nullable{``0},System.String)\" text=\"ArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNull<T>(T? argValue, string? argName = null) where T : struct"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNull(Of T As Structure)(argValue As T?, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "argValue",
            "type": {
              "uid": "System.Nullable{{T}}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 42,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentNullException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentNullException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable value type argument is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNull``1(System.String,``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNull<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNull(Of T)(String, T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNull<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNull(Of T)(String, T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNull<T>(string, T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNull(Of T)(String, T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.String,``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(string, T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(System.String,``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(string, T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNull<T>(string message, T? argValue, string? argName = null) where T : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNull(Of T As Class)(message As String, argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The exception message to use when the argument is null</p>\n"
          },
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 71,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentNullException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentNullException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable reference type argument is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentNotNull``1(``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentNotNull(Of T)(T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentNotNull(Of T)(T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentNotNull(Of T)(T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull``1(``0,System.String)\" text=\"ArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T ArgumentNotNull<T>(T? argValue, string? argName = null) where T : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ArgumentNotNull(Of T As Class)(argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentNotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 56,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentNotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "ArgumentNotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentNotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentNotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentNotNull*\" text=\"ArgumentNotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentNullException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentNullException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a nullable reference type argument is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentValid(System.Func{System.String},System.Boolean,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentValid(Func<string>, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentValid(Func(Of String), Boolean, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentValid(Func<string>, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentValid(Func(Of String), Boolean, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentValid(System.Func<string>, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentValid(System.Func(Of String), Boolean, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid(System.Func{System.String},System.Boolean,System.String)\" text=\"ArgumentValid(Func&lt;string&gt;, bool, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid(System.Func{System.String},System.Boolean,System.String)\" text=\"ArgumentValid(Func&lt;string&gt;, bool, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void ArgumentValid(Func<string> messageFunc, bool test, string? argName = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub ArgumentValid(messageFunc As Func(Of String), test As Boolean, argName As String = Nothing)"
          }
        ],
        "parameters": [
          {
            "id": "messageFunc",
            "type": {
              "uid": "System.Func{System.String}",
              "definition": "System.Func`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Func(Of String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The creator for an exception message to use when the argument is not valid</p>\n"
          },
          {
            "id": "test",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The validity test value</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentValid",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 171,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentValid*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "ArgumentValid"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentValid"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentValid"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid*\" text=\"ArgumentValid\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid*\" text=\"ArgumentValid\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that an argument is valid.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.ArgumentValid(System.String,System.Boolean,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentValid(string, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "ArgumentValid(String, Boolean, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.ArgumentValid(string, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.ArgumentValid(String, Boolean, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.ArgumentValid(string, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.ArgumentValid(String, Boolean, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid(System.String,System.Boolean,System.String)\" text=\"ArgumentValid(string, bool, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid(System.String,System.Boolean,System.String)\" text=\"ArgumentValid(string, bool, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void ArgumentValid(string message, bool test, string? argName = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub ArgumentValid(message As String, test As Boolean, argName As String = Nothing)"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The exception message to use when the argument is not valid</p>\n"
          },
          {
            "id": "test",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The validity test value</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ArgumentValid",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 154,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.ArgumentValid*",
        "name": [
          {
            "lang": "csharp",
            "value": "ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "ArgumentValid"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "Guard.ArgumentValid"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.ArgumentValid"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.ArgumentValid"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid*\" text=\"ArgumentValid\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.ArgumentValid*\" text=\"ArgumentValid\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that an argument is valid.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.FileExists(System.String,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FileExists(string?, string?)"
        },
        {
          "lang": "vb",
          "value": "FileExists(String, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.FileExists(string?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.FileExists(String, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.FileExists(string?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.FileExists(String, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.FileExists(System.String,System.String)\" text=\"FileExists(string?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.FileExists(System.String,System.String)\" text=\"FileExists(string?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string FileExists(string? fileName, string? argName = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FileExists(fileName As String, argName As String = Nothing) As String"
          }
        ],
        "parameters": [
          {
            "id": "fileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The file name value</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The file name as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FileExists",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 187,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.FileExists*",
        "name": [
          {
            "lang": "csharp",
            "value": "FileExists"
          },
          {
            "lang": "vb",
            "value": "FileExists"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.FileExists"
          },
          {
            "lang": "vb",
            "value": "Guard.FileExists"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.FileExists"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.FileExists"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.FileExists*\" text=\"FileExists\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.FileExists*\" text=\"FileExists\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentException"
              },
              {
                "lang": "vb",
                "value": "ArgumentException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentException\" text=\"ArgumentException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is null, empty, or not on disk</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a filename argument is not null or empty, and that the file exists on disk.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.GenericArgumentNotNull``1(``0,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GenericArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "GenericArgumentNotNull(Of T)(T, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.GenericArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Guard.GenericArgumentNotNull(Of T)(T, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.GenericArgumentNotNull<T>(T?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.GenericArgumentNotNull(Of T)(T, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.GenericArgumentNotNull``1(``0,System.String)\" text=\"GenericArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.GenericArgumentNotNull``1(``0,System.String)\" text=\"GenericArgumentNotNull&lt;T&gt;(T?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T GenericArgumentNotNull<T>(T? argValue, string? argName = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GenericArgumentNotNull(Of T)(argValue As T, argName As String = Nothing) As T"
          }
        ],
        "parameters": [
          {
            "id": "argValue",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value of the argument</p>\n"
          },
          {
            "id": "argName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The name of the argument</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The argument value as a non-default value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GenericArgumentNotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 206,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.GenericArgumentNotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "GenericArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "GenericArgumentNotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.GenericArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.GenericArgumentNotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.GenericArgumentNotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.GenericArgumentNotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.GenericArgumentNotNull*\" text=\"GenericArgumentNotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.GenericArgumentNotNull*\" text=\"GenericArgumentNotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.ArgumentNullException",
            "name": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "ArgumentNullException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.ArgumentNullException"
              },
              {
                "lang": "vb",
                "value": "System.ArgumentNullException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.ArgumentNullException\" text=\"ArgumentNullException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the argument is default</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensures that a value is not default value. This is used for values of generic types\nwhere nullability is not known.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.NotNull``1(System.Func{System.String},System.Nullable{``0})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NotNull<T>(Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "NotNull(Of T)(Func(Of String), T?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.NotNull<T>(Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "Guard.NotNull(Of T)(Func(Of String), T?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.NotNull<T>(System.Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.NotNull(Of T)(System.Func(Of String), T?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.Func{System.String},System.Nullable{``0})\" text=\"NotNull&lt;T&gt;(Func&lt;string&gt;, T?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.Func{System.String},System.Nullable{``0})\" text=\"NotNull&lt;T&gt;(Func&lt;string&gt;, T?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T NotNull<T>(Func<string> messageFunc, T? value) where T : struct"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function NotNull(Of T As Structure)(messageFunc As Func(Of String), value As T?) As T"
          }
        ],
        "parameters": [
          {
            "id": "messageFunc",
            "type": {
              "uid": "System.Func{System.String}",
              "definition": "System.Func`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Func(Of String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The creator for an exception message to use when the value is not valid</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{{T}}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value to test for null</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 261,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.NotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "NotNull"
          },
          {
            "lang": "vb",
            "value": "NotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.NotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.NotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.InvalidOperationException",
            "name": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "System.InvalidOperationException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the value is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensure that a nullable struct value is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.NotNull``1(System.Func{System.String},``0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NotNull<T>(Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "NotNull(Of T)(Func(Of String), T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.NotNull<T>(Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "Guard.NotNull(Of T)(Func(Of String), T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.NotNull<T>(System.Func<string>, T?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.NotNull(Of T)(System.Func(Of String), T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.Func{System.String},``0)\" text=\"NotNull&lt;T&gt;(Func&lt;string&gt;, T?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.Func{System.String},``0)\" text=\"NotNull&lt;T&gt;(Func&lt;string&gt;, T?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T NotNull<T>(Func<string> messageFunc, T? value) where T : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function NotNull(Of T As Class)(messageFunc As Func(Of String), value As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "messageFunc",
            "type": {
              "uid": "System.Func{System.String}",
              "definition": "System.Func`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "Func(Of String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Func<string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Func(Of String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.func-1\">Func</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The creator for an exception message to use when the value is not valid</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value to test for null</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 233,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.NotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "NotNull"
          },
          {
            "lang": "vb",
            "value": "NotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.NotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.NotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.InvalidOperationException",
            "name": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "System.InvalidOperationException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the value is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensure that a reference value is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.NotNull``1(System.String,System.Nullable{``0})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "NotNull(Of T)(String, T?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "Guard.NotNull(Of T)(String, T?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.NotNull(Of T)(String, T?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.String,System.Nullable{``0})\" text=\"NotNull&lt;T&gt;(string, T?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.String,System.Nullable{``0})\" text=\"NotNull&lt;T&gt;(string, T?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T NotNull<T>(string message, T? value) where T : struct"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function NotNull(Of T As Structure)(message As String, value As T?) As T"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The exception message to use when the value is not valid</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{{T}}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "T?"
                },
                {
                  "lang": "vb",
                  "value": "T?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value to test for null</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 247,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.NotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "NotNull"
          },
          {
            "lang": "vb",
            "value": "NotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.NotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.NotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.InvalidOperationException",
            "name": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "System.InvalidOperationException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the value is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensure that a nullable struct value is not null.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.Guard.NotNull``1(System.String,``0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.Guard",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "NotNull(Of T)(String, T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Guard.NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "Guard.NotNull(Of T)(String, T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.Guard.NotNull<T>(string, T?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.Guard.NotNull(Of T)(String, T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.String,``0)\" text=\"NotNull&lt;T&gt;(string, T?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.Guard.NotNull``1(System.String,``0)\" text=\"NotNull&lt;T&gt;(string, T?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static T NotNull<T>(string message, T? value) where T : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function NotNull(Of T As Class)(message As String, value As T) As T"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The exception message to use when the value is not valid</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "{T}",
              "definition": "T",
              "name": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "T"
                },
                {
                  "lang": "vb",
                  "value": "T"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{T}\" text=\"T\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value to test for null</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "T",
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{T}",
            "definition": "T",
            "name": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "T"
              },
              {
                "lang": "vb",
                "value": "T"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{T}\" text=\"T\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">The value as a non-null value</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Internal/Guard.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NotNull",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
        "startLine": 219,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.Guard.NotNull*",
        "name": [
          {
            "lang": "csharp",
            "value": "NotNull"
          },
          {
            "lang": "vb",
            "value": "NotNull"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Guard.NotNull"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.Guard.NotNull"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.Guard.NotNull"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.Guard.NotNull*\" text=\"NotNull\"/>"
          }
        ]
      },
      "exceptions": [
        {
          "type": {
            "uid": "System.InvalidOperationException",
            "name": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "InvalidOperationException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.InvalidOperationException"
              },
              {
                "lang": "vb",
                "value": "System.InvalidOperationException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.InvalidOperationException\" text=\"InvalidOperationException\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Thrown when the value is not valid</p>\n"
        }
      ],
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Ensure that a reference value is not null.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "Guard"
    },
    {
      "lang": "vb",
      "value": "Guard"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "Guard"
    },
    {
      "lang": "vb",
      "value": "Guard"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Internal.Guard"
    },
    {
      "lang": "vb",
      "value": "Xunit.Internal.Guard"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.common/Internal/Guard.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "Guard",
    "path": "../v3/v3-2.0.0/src/xunit.v3.common/Internal/Guard.cs",
    "startLine": 15,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.common"
  ],
  "namespace": {
    "uid": "Xunit.Internal",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Internal.Guard.yml\" sourcestartlinenumber=\"1\">Helper class for guarding value arguments and valid state.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class Guard"
      },
      {
        "lang": "vb",
        "value": "Public Module Guard"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/common/Xunit.Internal.Guard.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/common/Xunit.Internal.Guard.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/common/toc.yml",
  "_tocPath": "v3-2.0.0/common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}