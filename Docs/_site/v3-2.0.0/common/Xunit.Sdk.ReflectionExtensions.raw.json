{
  "uid": "Xunit.Sdk.ReflectionExtensions",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDefaultValue(Type)"
        },
        {
          "lang": "vb",
          "value": "GetDefaultValue(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetDefaultValue(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetDefaultValue(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDefaultValue(System.Type)\" text=\"GetDefaultValue(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDefaultValue(System.Type)\" text=\"GetDefaultValue(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static object? GetDefaultValue(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDefaultValue(type As Type) As Object"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type to get the default value of.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Object",
            "name": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The default value for the given type.</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDefaultValue",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 69,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDefaultValue"
          },
          {
            "lang": "vb",
            "value": "GetDefaultValue"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetDefaultValue"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetDefaultValue"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetDefaultValue"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDefaultValue*\" text=\"GetDefaultValue\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDefaultValue*\" text=\"GetDefaultValue\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Returns the default value for the given type. For value types, this means a 0-initialized\ninstance of the type; for reference types, this means <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments(System.Reflection.MethodInfo,System.String,System.Object[],System.Type[])",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDisplayNameWithArguments(MethodInfo, string, object?[]?, Type[]?)"
        },
        {
          "lang": "vb",
          "value": "GetDisplayNameWithArguments(MethodInfo, String, Object(), Type())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetDisplayNameWithArguments(MethodInfo, string, object?[]?, Type[]?)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetDisplayNameWithArguments(MethodInfo, String, Object(), Type())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments(System.Reflection.MethodInfo, string, object?[]?, System.Type[]?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments(System.Reflection.MethodInfo, String, Object(), System.Type())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments(System.Reflection.MethodInfo,System.String,System.Object[],System.Type[])\" text=\"GetDisplayNameWithArguments(MethodInfo, string, object?[]?, Type[]?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments(System.Reflection.MethodInfo,System.String,System.Object[],System.Type[])\" text=\"GetDisplayNameWithArguments(MethodInfo, string, object?[]?, Type[]?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string GetDisplayNameWithArguments(this MethodInfo method, string baseDisplayName, object?[]? arguments, Type[]? genericTypes)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDisplayNameWithArguments(method As MethodInfo, baseDisplayName As String, arguments As Object(), genericTypes As Type()) As String"
          }
        ],
        "parameters": [
          {
            "id": "method",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The test method</p>\n"
          },
          {
            "id": "baseDisplayName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The base part of the display name</p>\n"
          },
          {
            "id": "arguments",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The test method arguments</p>\n"
          },
          {
            "id": "genericTypes",
            "type": {
              "uid": "System.Type[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type[]"
                },
                {
                  "lang": "vb",
                  "value": "Type()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type[]"
                },
                {
                  "lang": "vb",
                  "value": "Type()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type[]"
                },
                {
                  "lang": "vb",
                  "value": "System.Type()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The test method's generic types</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The full display name for the test method</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDisplayNameWithArguments",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 84,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDisplayNameWithArguments"
          },
          {
            "lang": "vb",
            "value": "GetDisplayNameWithArguments"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetDisplayNameWithArguments"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetDisplayNameWithArguments"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments*\" text=\"GetDisplayNameWithArguments\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetDisplayNameWithArguments*\" text=\"GetDisplayNameWithArguments\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Formulates the extended portion of the display name for a test method. For tests with no arguments, this will\nreturn just the base name; for tests with arguments, attempts to format the arguments and appends the argument\nlist to the test name.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Attribute, string)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Attribute, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Attribute, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Attribute, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.String)\" text=\"GetMatchingCustomAttributes(Attribute, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.String)\" text=\"GetMatchingCustomAttributes(Attribute, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Attribute attribute, string assemblyQualifiedTypeName)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(attribute As Attribute, assemblyQualifiedTypeName As String) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "attribute",
            "type": {
              "uid": "System.Attribute",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Attribute"
                },
                {
                  "lang": "vb",
                  "value": "Attribute"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Attribute"
                },
                {
                  "lang": "vb",
                  "value": "Attribute"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Attribute"
                },
                {
                  "lang": "vb",
                  "value": "System.Attribute"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Attribute\" text=\"Attribute\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Attribute\" text=\"Attribute\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The attribute to get custom attributes for.</p>\n"
          },
          {
            "id": "assemblyQualifiedTypeName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the attribute</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 165,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the attribute that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Attribute, Type)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Attribute, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Attribute, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Attribute, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.Type)\" text=\"GetMatchingCustomAttributes(Attribute, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Attribute,System.Type)\" text=\"GetMatchingCustomAttributes(Attribute, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Attribute attribute, Type attributeType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(attribute As Attribute, attributeType As Type) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "attribute",
            "type": {
              "uid": "System.Attribute",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Attribute"
                },
                {
                  "lang": "vb",
                  "value": "Attribute"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Attribute"
                },
                {
                  "lang": "vb",
                  "value": "Attribute"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Attribute"
                },
                {
                  "lang": "vb",
                  "value": "System.Attribute"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Attribute\" text=\"Attribute\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Attribute\" text=\"Attribute\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The attribute to get custom attributes for.</p>\n"
          },
          {
            "id": "attributeType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the attribute</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 152,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the attribute that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Assembly, string)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Assembly, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Assembly, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Assembly, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.String)\" text=\"GetMatchingCustomAttributes(Assembly, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.String)\" text=\"GetMatchingCustomAttributes(Assembly, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Assembly assembly, string assemblyQualifiedTypeName)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(assembly As Assembly, assemblyQualifiedTypeName As String) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "assembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The assembly to get custom attributes for.</p>\n"
          },
          {
            "id": "assemblyQualifiedTypeName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the assembly</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 139,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the assembly that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Assembly, Type)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Assembly, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Assembly, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Assembly, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.Type)\" text=\"GetMatchingCustomAttributes(Assembly, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.Assembly,System.Type)\" text=\"GetMatchingCustomAttributes(Assembly, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Assembly assembly, Type attributeType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(assembly As Assembly, attributeType As Type) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "assembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The assembly to get custom attributes for.</p>\n"
          },
          {
            "id": "attributeType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the assembly</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 126,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the assembly that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(MethodInfo, string)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(MethodInfo, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(MethodInfo, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(MethodInfo, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.String)\" text=\"GetMatchingCustomAttributes(MethodInfo, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.String)\" text=\"GetMatchingCustomAttributes(MethodInfo, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this MethodInfo method, string assemblyQualifiedTypeName)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(method As MethodInfo, assemblyQualifiedTypeName As String) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "method",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The method to get custom attributes for.</p>\n"
          },
          {
            "id": "assemblyQualifiedTypeName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the method</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 191,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the method that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(MethodInfo, Type)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(MethodInfo, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(MethodInfo, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(MethodInfo, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.Type)\" text=\"GetMatchingCustomAttributes(MethodInfo, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.MethodInfo,System.Type)\" text=\"GetMatchingCustomAttributes(MethodInfo, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this MethodInfo method, Type attributeType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(method As MethodInfo, attributeType As Type) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "method",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The method to get custom attributes for.</p>\n"
          },
          {
            "id": "attributeType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the method</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 178,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the method that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(ParameterInfo, string)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(ParameterInfo, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(ParameterInfo, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(ParameterInfo, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.String)\" text=\"GetMatchingCustomAttributes(ParameterInfo, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.String)\" text=\"GetMatchingCustomAttributes(ParameterInfo, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this ParameterInfo parameter, string assemblyQualifiedTypeName)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(parameter As ParameterInfo, assemblyQualifiedTypeName As String) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "parameter",
            "type": {
              "uid": "System.Reflection.ParameterInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "ParameterInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "ParameterInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.ParameterInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.ParameterInfo\" text=\"ParameterInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.ParameterInfo\" text=\"ParameterInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The parameter to get custom attributes for.</p>\n"
          },
          {
            "id": "assemblyQualifiedTypeName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the parameter</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 217,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the parameter that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(ParameterInfo, Type)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(ParameterInfo, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(ParameterInfo, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(ParameterInfo, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.Type)\" text=\"GetMatchingCustomAttributes(ParameterInfo, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Reflection.ParameterInfo,System.Type)\" text=\"GetMatchingCustomAttributes(ParameterInfo, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this ParameterInfo parameter, Type attributeType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(parameter As ParameterInfo, attributeType As Type) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "parameter",
            "type": {
              "uid": "System.Reflection.ParameterInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "ParameterInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "ParameterInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.ParameterInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.ParameterInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.ParameterInfo\" text=\"ParameterInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.ParameterInfo\" text=\"ParameterInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The parameter to get custom attributes for.</p>\n"
          },
          {
            "id": "attributeType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the parameter</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 204,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the parameter that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Type, string)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Type, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Type, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Type, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.String)\" text=\"GetMatchingCustomAttributes(Type, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.String)\" text=\"GetMatchingCustomAttributes(Type, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Type type, string assemblyQualifiedTypeName)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(type As Type, assemblyQualifiedTypeName As String) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type to get custom attributes for.</p>\n"
          },
          {
            "id": "assemblyQualifiedTypeName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the type</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 243,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the type that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMatchingCustomAttributes(Type, Type)"
        },
        {
          "lang": "vb",
          "value": "GetMatchingCustomAttributes(Type, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Type, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.GetMatchingCustomAttributes(Type, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.Type)\" text=\"GetMatchingCustomAttributes(Type, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes(System.Type,System.Type)\" text=\"GetMatchingCustomAttributes(Type, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Attribute> GetMatchingCustomAttributes(this Type type, Type attributeType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMatchingCustomAttributes(type As Type, attributeType As Type) As IReadOnlyCollection(Of Attribute)"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type to get custom attributes for.</p>\n"
          },
          {
            "id": "attributeType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type of the attribute to find. Will accept attribute types that are concrete,\nclosed generic, and open generic. When provided an open generic type (e.g., MyAttribute&lt;&gt;) it will\nreturn matching closed generic attributes (e.g., MyAttribute&gt;int&lt;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Attribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Attribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Attribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Attribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Attribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.attribute\">Attribute</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The matching attributes that decorate the type</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMatchingCustomAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 230,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMatchingCustomAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.GetMatchingCustomAttributes*\" text=\"GetMatchingCustomAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets all the custom attributes for the type that are of the given attribute type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.Implements(System.Type,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Implements(Type, Type)"
        },
        {
          "lang": "vb",
          "value": "Implements(Type, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.Implements(Type, Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.Implements(Type, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.Implements(System.Type, System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.Implements(System.Type, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.Implements(System.Type,System.Type)\" text=\"Implements(Type, Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.Implements(System.Type,System.Type)\" text=\"Implements(Type, Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool Implements(this Type type, Type interfaceType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function [Implements](type As Type, interfaceType As Type) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type to check</p>\n"
          },
          {
            "id": "interfaceType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The interface type to look for</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the type implements the interface; <code>false</code>, otherwise</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Implements",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 261,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.Implements*",
        "name": [
          {
            "lang": "csharp",
            "value": "Implements"
          },
          {
            "lang": "vb",
            "value": "Implements"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.Implements"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.Implements"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.Implements"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.Implements"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.Implements*\" text=\"Implements\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.Implements*\" text=\"Implements\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Determines if the given type implements the given interface.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IsFromLocalAssembly(Type)"
        },
        {
          "lang": "vb",
          "value": "IsFromLocalAssembly(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.IsFromLocalAssembly(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.IsFromLocalAssembly(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly(System.Type)\" text=\"IsFromLocalAssembly(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly(System.Type)\" text=\"IsFromLocalAssembly(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool IsFromLocalAssembly(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function IsFromLocalAssembly(type As Type) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The type to verify</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the type originates in a local assembly; <code>false</code> if the type originates in the GAC.</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IsFromLocalAssembly",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 281,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly*",
        "name": [
          {
            "lang": "csharp",
            "value": "IsFromLocalAssembly"
          },
          {
            "lang": "vb",
            "value": "IsFromLocalAssembly"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.IsFromLocalAssembly"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.IsFromLocalAssembly"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly*\" text=\"IsFromLocalAssembly\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsFromLocalAssembly*\" text=\"IsFromLocalAssembly\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Determines if the given type is from a local assembly.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.IsNullable(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IsNullable(Type)"
        },
        {
          "lang": "vb",
          "value": "IsNullable(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.IsNullable(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.IsNullable(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.IsNullable(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.IsNullable(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullable(System.Type)\" text=\"IsNullable(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullable(System.Type)\" text=\"IsNullable(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool IsNullable(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function IsNullable(type As Type) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IsNullable",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 304,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.IsNullable*",
        "name": [
          {
            "lang": "csharp",
            "value": "IsNullable"
          },
          {
            "lang": "vb",
            "value": "IsNullable"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.IsNullable"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.IsNullable"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.IsNullable"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.IsNullable"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullable*\" text=\"IsNullable\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullable*\" text=\"IsNullable\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Determines whether <code class=\"paramref\">type</code> is a nullable type; that is, whether it\nis a reference type or it represents <xref href=\"System.Nullable%601\" data-throw-if-not-resolved=\"false\"></xref> for a value type.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IsNullableEnum(Type)"
        },
        {
          "lang": "vb",
          "value": "IsNullableEnum(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.IsNullableEnum(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.IsNullableEnum(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullableEnum(System.Type)\" text=\"IsNullableEnum(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullableEnum(System.Type)\" text=\"IsNullableEnum(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool IsNullableEnum(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function IsNullableEnum(type As Type) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IsNullableEnum",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 313,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum*",
        "name": [
          {
            "lang": "csharp",
            "value": "IsNullableEnum"
          },
          {
            "lang": "vb",
            "value": "IsNullableEnum"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.IsNullableEnum"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.IsNullableEnum"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.IsNullableEnum"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullableEnum*\" text=\"IsNullableEnum\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.IsNullableEnum*\" text=\"IsNullableEnum\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Determines whether <code class=\"paramref\">type</code> represents a nullable enum value.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes(System.Reflection.MethodInfo,System.Object[])",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ResolveGenericTypes(MethodInfo, object?[])"
        },
        {
          "lang": "vb",
          "value": "ResolveGenericTypes(MethodInfo, Object())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ResolveGenericTypes(MethodInfo, object?[])"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ResolveGenericTypes(MethodInfo, Object())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes(System.Reflection.MethodInfo, object?[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes(System.Reflection.MethodInfo, Object())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes(System.Reflection.MethodInfo,System.Object[])\" text=\"ResolveGenericTypes(MethodInfo, object?[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes(System.Reflection.MethodInfo,System.Object[])\" text=\"ResolveGenericTypes(MethodInfo, object?[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static Type[] ResolveGenericTypes(this MethodInfo method, object?[] arguments)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ResolveGenericTypes(method As MethodInfo, arguments As Object()) As Type()"
          }
        ],
        "parameters": [
          {
            "id": "method",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The method</p>\n"
          },
          {
            "id": "arguments",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The argument values being passed to the method</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Type[]",
            "name": [
              {
                "lang": "csharp",
                "value": "Type[]"
              },
              {
                "lang": "vb",
                "value": "Type()"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Type[]"
              },
              {
                "lang": "vb",
                "value": "Type()"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Type[]"
              },
              {
                "lang": "vb",
                "value": "System.Type()"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>[]"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>()"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The best matching generic types</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ResolveGenericTypes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 419,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes*",
        "name": [
          {
            "lang": "csharp",
            "value": "ResolveGenericTypes"
          },
          {
            "lang": "vb",
            "value": "ResolveGenericTypes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ResolveGenericTypes"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ResolveGenericTypes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes*\" text=\"ResolveGenericTypes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveGenericTypes*\" text=\"ResolveGenericTypes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Resolves all the generic types for a test method. The arguments are used to determine\nthe best matching generic types for the method that can be satisfied by all the generic\nparameters and their argument values.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments(System.Reflection.MethodBase,System.Object[])",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ResolveMethodArguments(MethodBase, object?[])"
        },
        {
          "lang": "vb",
          "value": "ResolveMethodArguments(MethodBase, Object())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ResolveMethodArguments(MethodBase, object?[])"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ResolveMethodArguments(MethodBase, Object())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments(System.Reflection.MethodBase, object?[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments(System.Reflection.MethodBase, Object())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments(System.Reflection.MethodBase,System.Object[])\" text=\"ResolveMethodArguments(MethodBase, object?[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments(System.Reflection.MethodBase,System.Object[])\" text=\"ResolveMethodArguments(MethodBase, object?[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static object?[] ResolveMethodArguments(this MethodBase testMethod, object?[] arguments)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ResolveMethodArguments(testMethod As MethodBase, arguments As Object()) As Object()"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodBase",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodBase"
                },
                {
                  "lang": "vb",
                  "value": "MethodBase"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodBase"
                },
                {
                  "lang": "vb",
                  "value": "MethodBase"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodBase"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodBase"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodBase\" text=\"MethodBase\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodBase\" text=\"MethodBase\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The test method to resolve.</p>\n"
          },
          {
            "id": "arguments",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The user-supplied method arguments.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Object[]",
            "name": [
              {
                "lang": "csharp",
                "value": "object[]"
              },
              {
                "lang": "vb",
                "value": "Object()"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "object[]"
              },
              {
                "lang": "vb",
                "value": "Object()"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "object[]"
              },
              {
                "lang": "vb",
                "value": "Object()"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">The argument values</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ResolveMethodArguments",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 519,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments*",
        "name": [
          {
            "lang": "csharp",
            "value": "ResolveMethodArguments"
          },
          {
            "lang": "vb",
            "value": "ResolveMethodArguments"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ResolveMethodArguments"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ResolveMethodArguments"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments*\" text=\"ResolveMethodArguments\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ResolveMethodArguments*\" text=\"ResolveMethodArguments\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Resolves argument values for the test method, ensuring they are the correct type,\nincluding support for optional method arguments.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.SafeName(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SafeName(Type)"
        },
        {
          "lang": "vb",
          "value": "SafeName(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.SafeName(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.SafeName(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.SafeName(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.SafeName(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.SafeName(System.Type)\" text=\"SafeName(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.SafeName(System.Type)\" text=\"SafeName(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string SafeName(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function SafeName(type As Type) As String"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SafeName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 615,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.SafeName*",
        "name": [
          {
            "lang": "csharp",
            "value": "SafeName"
          },
          {
            "lang": "vb",
            "value": "SafeName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.SafeName"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.SafeName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.SafeName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.SafeName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.SafeName*\" text=\"SafeName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.SafeName*\" text=\"SafeName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets a fully qualified type name (i.e., <xref href=\"System.Type.FullName\" data-throw-if-not-resolved=\"false\"></xref>), falling back to a simple\ntype name (i.e., <xref href=\"System.Reflection.MemberInfo.Name\" data-throw-if-not-resolved=\"false\"></xref>) when a fully qualified name is not available. Typically\nused when presenting type names to the user, or to guarantee the type name is never <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList(System.Collections.Generic.IEnumerable{System.Type},System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ToCommaSeparatedList(IEnumerable<Type?>, string)"
        },
        {
          "lang": "vb",
          "value": "ToCommaSeparatedList(IEnumerable(Of Type), String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ToCommaSeparatedList(IEnumerable<Type?>, string)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ToCommaSeparatedList(IEnumerable(Of Type), String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList(System.Collections.Generic.IEnumerable<System.Type?>, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList(System.Collections.Generic.IEnumerable(Of System.Type), String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList(System.Collections.Generic.IEnumerable{System.Type},System.String)\" text=\"ToCommaSeparatedList(IEnumerable&lt;Type?&gt;, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList(System.Collections.Generic.IEnumerable{System.Type},System.String)\" text=\"ToCommaSeparatedList(IEnumerable&lt;Type?&gt;, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string ToCommaSeparatedList(this IEnumerable<Type?> types, string nullDisplay = \"(null)\")"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ToCommaSeparatedList(types As IEnumerable(Of Type), nullDisplay As String = \"(null)\") As String"
          }
        ],
        "parameters": [
          {
            "id": "types",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{System.Type}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<Type>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of Type)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<Type>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of Type)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<System.Type>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of System.Type)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
                }
              ]
            }
          },
          {
            "id": "nullDisplay",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ToCommaSeparatedList",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 626,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList*",
        "name": [
          {
            "lang": "csharp",
            "value": "ToCommaSeparatedList"
          },
          {
            "lang": "vb",
            "value": "ToCommaSeparatedList"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ToCommaSeparatedList"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ToCommaSeparatedList"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList*\" text=\"ToCommaSeparatedList\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToCommaSeparatedList*\" text=\"ToCommaSeparatedList\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Convert a collection of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects into a comma-separated list\nfor display purposes.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ToDisplayName(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ToDisplayName(Type)"
        },
        {
          "lang": "vb",
          "value": "ToDisplayName(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ToDisplayName(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ToDisplayName(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ToDisplayName(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ToDisplayName(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToDisplayName(System.Type)\" text=\"ToDisplayName(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToDisplayName(System.Type)\" text=\"ToDisplayName(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string ToDisplayName(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ToDisplayName(type As Type) As String"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ToDisplayName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 635,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ToDisplayName*",
        "name": [
          {
            "lang": "csharp",
            "value": "ToDisplayName"
          },
          {
            "lang": "vb",
            "value": "ToDisplayName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ToDisplayName"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ToDisplayName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ToDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ToDisplayName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToDisplayName*\" text=\"ToDisplayName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToDisplayName*\" text=\"ToDisplayName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Converts a type into a name string for display purposes. It attempts to make a more user friendly\nname than <xref href=\"System.Type.FullName\" data-throw-if-not-resolved=\"false\"></xref> would give, especially when the type is generic.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ToSimpleName(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ToSimpleName(Type)"
        },
        {
          "lang": "vb",
          "value": "ToSimpleName(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ToSimpleName(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ToSimpleName(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ToSimpleName(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ToSimpleName(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToSimpleName(System.Type)\" text=\"ToSimpleName(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToSimpleName(System.Type)\" text=\"ToSimpleName(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string ToSimpleName(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ToSimpleName(type As Type) As String"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ToSimpleName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 664,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ToSimpleName*",
        "name": [
          {
            "lang": "csharp",
            "value": "ToSimpleName"
          },
          {
            "lang": "vb",
            "value": "ToSimpleName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ToSimpleName"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ToSimpleName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ToSimpleName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ToSimpleName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToSimpleName*\" text=\"ToSimpleName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToSimpleName*\" text=\"ToSimpleName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Gets the simple name for a type, suitable for use with <xref href=\"Xunit.Sdk.ITestCaseMetadata.TestClassSimpleName\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName(System.Type,System.Reflection.MethodInfo,System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ToVSTestTypeName(Type, MethodInfo?, Type?)"
        },
        {
          "lang": "vb",
          "value": "ToVSTestTypeName(Type, MethodInfo, Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.ToVSTestTypeName(Type, MethodInfo?, Type?)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.ToVSTestTypeName(Type, MethodInfo, Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName(System.Type, System.Reflection.MethodInfo?, System.Type?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName(System.Type, System.Reflection.MethodInfo, System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName(System.Type,System.Reflection.MethodInfo,System.Type)\" text=\"ToVSTestTypeName(Type, MethodInfo?, Type?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName(System.Type,System.Reflection.MethodInfo,System.Type)\" text=\"ToVSTestTypeName(Type, MethodInfo?, Type?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string ToVSTestTypeName(this Type type, MethodInfo? testMethod = null, Type? testClass = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ToVSTestTypeName(type As Type, testMethod As MethodInfo = Nothing, testClass As Type = Nothing) As String"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          },
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            }
          },
          {
            "id": "testClass",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ToVSTestTypeName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 685,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "remarks": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">See <a href=\"https://github.com/microsoft/vstest/blob/main/docs/RFCs/0017-Managed-TestCase-Properties.md\">https://github.com/microsoft/vstest/blob/main/docs/RFCs/0017-Managed-TestCase-Properties.md</a></p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName*",
        "name": [
          {
            "lang": "csharp",
            "value": "ToVSTestTypeName"
          },
          {
            "lang": "vb",
            "value": "ToVSTestTypeName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.ToVSTestTypeName"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.ToVSTestTypeName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName*\" text=\"ToVSTestTypeName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.ToVSTestTypeName*\" text=\"ToVSTestTypeName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Converts a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> name into the correct form for VSTest managed type name for\nusing in managed TestCase properties and by xunit.runner.visualstudio.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable(System.Type)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.ReflectionExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "UnwrapNullable(Type)"
        },
        {
          "lang": "vb",
          "value": "UnwrapNullable(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ReflectionExtensions.UnwrapNullable(Type)"
        },
        {
          "lang": "vb",
          "value": "ReflectionExtensions.UnwrapNullable(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.UnwrapNullable(System.Type)\" text=\"UnwrapNullable(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.UnwrapNullable(System.Type)\" text=\"UnwrapNullable(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static Type UnwrapNullable(this Type type)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function UnwrapNullable(type As Type) As Type"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Type",
            "name": [
              {
                "lang": "csharp",
                "value": "Type"
              },
              {
                "lang": "vb",
                "value": "Type"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Type"
              },
              {
                "lang": "vb",
                "value": "Type"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Type"
              },
              {
                "lang": "vb",
                "value": "System.Type"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "UnwrapNullable",
        "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
        "startLine": 761,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable*",
        "name": [
          {
            "lang": "csharp",
            "value": "UnwrapNullable"
          },
          {
            "lang": "vb",
            "value": "UnwrapNullable"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ReflectionExtensions.UnwrapNullable"
          },
          {
            "lang": "vb",
            "value": "ReflectionExtensions.UnwrapNullable"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ReflectionExtensions.UnwrapNullable"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.UnwrapNullable*\" text=\"UnwrapNullable\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ReflectionExtensions.UnwrapNullable*\" text=\"UnwrapNullable\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Attempts to strip <xref href=\"System.Nullable%601\" data-throw-if-not-resolved=\"false\"></xref> from a type value and just return T.\nFor non-nullable types, will return the type that was passed in.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ReflectionExtensions"
    },
    {
      "lang": "vb",
      "value": "ReflectionExtensions"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ReflectionExtensions"
    },
    {
      "lang": "vb",
      "value": "ReflectionExtensions"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.ReflectionExtensions"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.ReflectionExtensions"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "ReflectionExtensions",
    "path": "../v3/v3-2.0.0/src/xunit.v3.common/Extensions/ReflectionExtensions.cs",
    "startLine": 14,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.common"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods for reflection types in .NET.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class ReflectionExtensions"
      },
      {
        "lang": "vb",
        "value": "Public Module ReflectionExtensions"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/common/Xunit.Sdk.ReflectionExtensions.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/common/toc.yml",
  "_tocPath": "v3-2.0.0/common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}