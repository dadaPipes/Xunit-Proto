{
  "uid": "Xunit.Internal.CommandLineParserBase",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Internal",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Internal.CommandLineParserBase.#ctor(Xunit.Runner.Common.ConsoleHelper,System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter},System.String,System.String[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase(ConsoleHelper, IReadOnlyList<IRunnerReporter>?, string?, string[])"
        },
        {
          "lang": "vb",
          "value": "New(ConsoleHelper, IReadOnlyList(Of IRunnerReporter), String, String())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.CommandLineParserBase(ConsoleHelper, IReadOnlyList<IRunnerReporter>?, string?, string[])"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.New(ConsoleHelper, IReadOnlyList(Of IRunnerReporter), String, String())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.CommandLineParserBase(Xunit.Runner.Common.ConsoleHelper, System.Collections.Generic.IReadOnlyList<Xunit.Runner.Common.IRunnerReporter>?, string?, string[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.New(Xunit.Runner.Common.ConsoleHelper, System.Collections.Generic.IReadOnlyList(Of Xunit.Runner.Common.IRunnerReporter), String, String())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.#ctor(Xunit.Runner.Common.ConsoleHelper,System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter},System.String,System.String[])\" text=\"CommandLineParserBase(ConsoleHelper, IReadOnlyList&lt;IRunnerReporter&gt;?, string?, string[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.#ctor(Xunit.Runner.Common.ConsoleHelper,System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter},System.String,System.String[])\" text=\"CommandLineParserBase(ConsoleHelper, IReadOnlyList&lt;IRunnerReporter&gt;?, string?, string[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected CommandLineParserBase(ConsoleHelper consoleHelper, IReadOnlyList<IRunnerReporter>? runnerReporters, string? reporterFolder, string[] args)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub New(consoleHelper As ConsoleHelper, runnerReporters As IReadOnlyList(Of IRunnerReporter), reporterFolder As String, args As String())"
          }
        ],
        "parameters": [
          {
            "id": "consoleHelper",
            "type": {
              "uid": "Xunit.Runner.Common.ConsoleHelper",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ConsoleHelper"
                },
                {
                  "lang": "vb",
                  "value": "ConsoleHelper"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ConsoleHelper"
                },
                {
                  "lang": "vb",
                  "value": "ConsoleHelper"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ConsoleHelper"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ConsoleHelper"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ConsoleHelper\" text=\"ConsoleHelper\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ConsoleHelper\" text=\"ConsoleHelper\"/>"
                }
              ]
            }
          },
          {
            "id": "runnerReporters",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter}",
              "definition": "System.Collections.Generic.IReadOnlyList`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyList<IRunnerReporter>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyList(Of IRunnerReporter)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyList<IRunnerReporter>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyList(Of IRunnerReporter)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyList<Xunit.Runner.Common.IRunnerReporter>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyList(Of Xunit.Runner.Common.IRunnerReporter)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>)"
                }
              ]
            }
          },
          {
            "id": "reporterFolder",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "args",
            "type": {
              "uid": "System.String[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>()"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": ".ctor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 22,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.#ctor*",
        "name": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase"
          },
          {
            "lang": "vb",
            "value": "New"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.CommandLineParserBase"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.New"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.CommandLineParserBase"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.New"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.#ctor*\" text=\"CommandLineParserBase\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.#ctor*\" text=\"CommandLineParserBase\"/>"
          }
        ]
      },
      "level": 0,
      "type": "constructor",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.AddHiddenParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddHiddenParser(string, Action<KeyValuePair<string, string?>>, string?)"
        },
        {
          "lang": "vb",
          "value": "AddHiddenParser(String, Action(Of KeyValuePair(Of String, String)), String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.AddHiddenParser(string, Action<KeyValuePair<string, string?>>, string?)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.AddHiddenParser(String, Action(Of KeyValuePair(Of String, String)), String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.AddHiddenParser(string, System.Action<System.Collections.Generic.KeyValuePair<string, string?>>, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.AddHiddenParser(String, System.Action(Of System.Collections.Generic.KeyValuePair(Of String, String)), String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddHiddenParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)\" text=\"AddHiddenParser(string, Action&lt;KeyValuePair&lt;string, string?&gt;&gt;, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddHiddenParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)\" text=\"AddHiddenParser(string, Action&lt;KeyValuePair&lt;string, string?&gt;&gt;, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void AddHiddenParser(string @switch, Action<KeyValuePair<string, string?>> handler, string? replacement = null)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub AddHiddenParser(switch As String, handler As Action(Of KeyValuePair(Of String, String)), replacement As String = Nothing)"
          }
        ],
        "parameters": [
          {
            "id": "switch",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "handler",
            "type": {
              "uid": "System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}}",
              "definition": "System.Action`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Action<KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "Action(Of KeyValuePair(Of String, String))"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Action<KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "Action(Of KeyValuePair(Of String, String))"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Action<System.Collections.Generic.KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "System.Action(Of System.Collections.Generic.KeyValuePair(Of String, String))"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.action-1\">Action</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.action-1\">Action</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
                }
              ]
            }
          },
          {
            "id": "replacement",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddHiddenParser",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 257,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.AddHiddenParser*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddHiddenParser"
          },
          {
            "lang": "vb",
            "value": "AddHiddenParser"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.AddHiddenParser"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.AddHiddenParser"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.AddHiddenParser"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.AddHiddenParser"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddHiddenParser*\" text=\"AddHiddenParser\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddHiddenParser*\" text=\"AddHiddenParser\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.AddParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},Xunit.Internal.CommandLineGroup,System.String,System.String[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddParser(string, Action<KeyValuePair<string, string?>>, CommandLineGroup, string?, params string[])"
        },
        {
          "lang": "vb",
          "value": "AddParser(String, Action(Of KeyValuePair(Of String, String)), CommandLineGroup, String, ParamArray String())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.AddParser(string, Action<KeyValuePair<string, string?>>, CommandLineGroup, string?, params string[])"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.AddParser(String, Action(Of KeyValuePair(Of String, String)), CommandLineGroup, String, ParamArray String())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.AddParser(string, System.Action<System.Collections.Generic.KeyValuePair<string, string?>>, Xunit.Internal.CommandLineGroup, string?, params string[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.AddParser(String, System.Action(Of System.Collections.Generic.KeyValuePair(Of String, String)), Xunit.Internal.CommandLineGroup, String, ParamArray String())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},Xunit.Internal.CommandLineGroup,System.String,System.String[])\" text=\"AddParser(string, Action&lt;KeyValuePair&lt;string, string?&gt;&gt;, CommandLineGroup, string?, params string[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddParser(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}},Xunit.Internal.CommandLineGroup,System.String,System.String[])\" text=\"AddParser(string, Action&lt;KeyValuePair&lt;string, string?&gt;&gt;, CommandLineGroup, string?, params string[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void AddParser(string @switch, Action<KeyValuePair<string, string?>> handler, CommandLineGroup group, string? argumentDisplay, params string[] descriptions)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub AddParser(switch As String, handler As Action(Of KeyValuePair(Of String, String)), group As CommandLineGroup, argumentDisplay As String, ParamArray descriptions As String())"
          }
        ],
        "parameters": [
          {
            "id": "switch",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "handler",
            "type": {
              "uid": "System.Action{System.Collections.Generic.KeyValuePair{System.String,System.String}}",
              "definition": "System.Action`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Action<KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "Action(Of KeyValuePair(Of String, String))"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Action<KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "Action(Of KeyValuePair(Of String, String))"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Action<System.Collections.Generic.KeyValuePair<string, string>>"
                },
                {
                  "lang": "vb",
                  "value": "System.Action(Of System.Collections.Generic.KeyValuePair(Of String, String))"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.action-1\">Action</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.action-1\">Action</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
                }
              ]
            }
          },
          {
            "id": "group",
            "type": {
              "uid": "Xunit.Internal.CommandLineGroup",
              "name": [
                {
                  "lang": "csharp",
                  "value": "CommandLineGroup"
                },
                {
                  "lang": "vb",
                  "value": "CommandLineGroup"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "CommandLineGroup"
                },
                {
                  "lang": "vb",
                  "value": "CommandLineGroup"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Internal.CommandLineGroup"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Internal.CommandLineGroup"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Internal.CommandLineGroup\" text=\"CommandLineGroup\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Internal.CommandLineGroup\" text=\"CommandLineGroup\"/>"
                }
              ]
            }
          },
          {
            "id": "argumentDisplay",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "descriptions",
            "type": {
              "uid": "System.String[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>()"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddParser",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 264,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.AddParser*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddParser"
          },
          {
            "lang": "vb",
            "value": "AddParser"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.AddParser"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.AddParser"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.AddParser"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.AddParser"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddParser*\" text=\"AddParser\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.AddParser*\" text=\"AddParser\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.Args",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Args"
        },
        {
          "lang": "vb",
          "value": "Args"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.Args"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.Args"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.Args"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.Args"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Args\" text=\"Args\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Args\" text=\"Args\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected IReadOnlyList<string> Args { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property Args As IReadOnlyList(Of String)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyList{System.String}",
            "definition": "System.Collections.Generic.IReadOnlyList`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of String)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of String)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyList(Of String)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Args",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 231,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.Args*",
        "name": [
          {
            "lang": "csharp",
            "value": "Args"
          },
          {
            "lang": "vb",
            "value": "Args"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.Args"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.Args"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.Args"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.Args"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Args*\" text=\"Args\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Args*\" text=\"Args\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.ConsoleHelper",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ConsoleHelper"
        },
        {
          "lang": "vb",
          "value": "ConsoleHelper"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.ConsoleHelper"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.ConsoleHelper"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.ConsoleHelper"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.ConsoleHelper"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ConsoleHelper\" text=\"ConsoleHelper\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ConsoleHelper\" text=\"ConsoleHelper\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected ConsoleHelper ConsoleHelper { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property ConsoleHelper As ConsoleHelper"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.ConsoleHelper",
            "name": [
              {
                "lang": "csharp",
                "value": "ConsoleHelper"
              },
              {
                "lang": "vb",
                "value": "ConsoleHelper"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ConsoleHelper"
              },
              {
                "lang": "vb",
                "value": "ConsoleHelper"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.ConsoleHelper"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.ConsoleHelper"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.ConsoleHelper\" text=\"ConsoleHelper\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.ConsoleHelper\" text=\"ConsoleHelper\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ConsoleHelper",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 234,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.ConsoleHelper*",
        "name": [
          {
            "lang": "csharp",
            "value": "ConsoleHelper"
          },
          {
            "lang": "vb",
            "value": "ConsoleHelper"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.ConsoleHelper"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.ConsoleHelper"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.ConsoleHelper"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.ConsoleHelper"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ConsoleHelper*\" text=\"ConsoleHelper\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ConsoleHelper*\" text=\"ConsoleHelper\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.FileExists(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FileExists(string?)"
        },
        {
          "lang": "vb",
          "value": "FileExists(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.FileExists(string?)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.FileExists(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.FileExists(string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.FileExists(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.FileExists(System.String)\" text=\"FileExists(string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.FileExists(System.String)\" text=\"FileExists(string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual bool FileExists(string? path)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function FileExists(path As String) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "path",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FileExists",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 283,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.FileExists*",
        "name": [
          {
            "lang": "csharp",
            "value": "FileExists"
          },
          {
            "lang": "vb",
            "value": "FileExists"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.FileExists"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.FileExists"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.FileExists"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.FileExists"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.FileExists*\" text=\"FileExists\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.FileExists*\" text=\"FileExists\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAvailableRunnerReporters()"
        },
        {
          "lang": "vb",
          "value": "GetAvailableRunnerReporters()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.GetAvailableRunnerReporters()"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.GetAvailableRunnerReporters()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters\" text=\"GetAvailableRunnerReporters()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters\" text=\"GetAvailableRunnerReporters()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected abstract IReadOnlyList<IRunnerReporter> GetAvailableRunnerReporters()"
          },
          {
            "lang": "vb",
            "value": "Protected MustOverride Function GetAvailableRunnerReporters() As IReadOnlyList(Of IRunnerReporter)"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter}",
            "definition": "System.Collections.Generic.IReadOnlyList`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of IRunnerReporter)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of IRunnerReporter)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyList<Xunit.Runner.Common.IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyList(Of Xunit.Runner.Common.IRunnerReporter)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAvailableRunnerReporters",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 308,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAvailableRunnerReporters"
          },
          {
            "lang": "vb",
            "value": "GetAvailableRunnerReporters"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.GetAvailableRunnerReporters"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.GetAvailableRunnerReporters"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters*\" text=\"GetAvailableRunnerReporters\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetAvailableRunnerReporters*\" text=\"GetAvailableRunnerReporters\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.GetFullPath(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFullPath(string?)"
        },
        {
          "lang": "vb",
          "value": "GetFullPath(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.GetFullPath(string?)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.GetFullPath(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.GetFullPath(string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.GetFullPath(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetFullPath(System.String)\" text=\"GetFullPath(string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetFullPath(System.String)\" text=\"GetFullPath(string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual string? GetFullPath(string? fileName)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function GetFullPath(fileName As String) As String"
          }
        ],
        "parameters": [
          {
            "id": "fileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFullPath",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 311,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.GetFullPath*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFullPath"
          },
          {
            "lang": "vb",
            "value": "GetFullPath"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.GetFullPath"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.GetFullPath"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.GetFullPath"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.GetFullPath"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetFullPath*\" text=\"GetFullPath\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GetFullPath*\" text=\"GetFullPath\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue(System.Collections.Generic.KeyValuePair{System.String,System.String})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GuardNoOptionValue(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "GuardNoOptionValue(KeyValuePair(Of String, String))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.GuardNoOptionValue(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.GuardNoOptionValue(KeyValuePair(Of String, String))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue(System.Collections.Generic.KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue(System.Collections.Generic.KeyValuePair(Of String, String))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GuardNoOptionValue(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"GuardNoOptionValue(KeyValuePair&lt;string, string?&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GuardNoOptionValue(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"GuardNoOptionValue(KeyValuePair&lt;string, string?&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected static void GuardNoOptionValue(KeyValuePair<string, string?> option)"
          },
          {
            "lang": "vb",
            "value": "Protected Shared Sub GuardNoOptionValue([option] As KeyValuePair(Of String, String))"
          }
        ],
        "parameters": [
          {
            "id": "option",
            "type": {
              "uid": "System.Collections.Generic.KeyValuePair{System.String,System.String}",
              "definition": "System.Collections.Generic.KeyValuePair`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.KeyValuePair(Of String, String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GuardNoOptionValue",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 316,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue*",
        "name": [
          {
            "lang": "csharp",
            "value": "GuardNoOptionValue"
          },
          {
            "lang": "vb",
            "value": "GuardNoOptionValue"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.GuardNoOptionValue"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.GuardNoOptionValue"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.GuardNoOptionValue"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GuardNoOptionValue*\" text=\"GuardNoOptionValue\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.GuardNoOptionValue*\" text=\"GuardNoOptionValue\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.HelpRequested",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HelpRequested"
        },
        {
          "lang": "vb",
          "value": "HelpRequested"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.HelpRequested"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.HelpRequested"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.HelpRequested"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.HelpRequested"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.HelpRequested\" text=\"HelpRequested\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.HelpRequested\" text=\"HelpRequested\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool HelpRequested { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property HelpRequested As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HelpRequested",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 237,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.HelpRequested*",
        "name": [
          {
            "lang": "csharp",
            "value": "HelpRequested"
          },
          {
            "lang": "vb",
            "value": "HelpRequested"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.HelpRequested"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.HelpRequested"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.HelpRequested"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.HelpRequested"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.HelpRequested*\" text=\"HelpRequested\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.HelpRequested*\" text=\"HelpRequested\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.IsConfigFile(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IsConfigFile(string)"
        },
        {
          "lang": "vb",
          "value": "IsConfigFile(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.IsConfigFile(string)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.IsConfigFile(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.IsConfigFile(string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.IsConfigFile(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.IsConfigFile(System.String)\" text=\"IsConfigFile(string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.IsConfigFile(System.String)\" text=\"IsConfigFile(string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected static bool IsConfigFile(string fileName)"
          },
          {
            "lang": "vb",
            "value": "Protected Shared Function IsConfigFile(fileName As String) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "fileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IsConfigFile",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 323,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.IsConfigFile*",
        "name": [
          {
            "lang": "csharp",
            "value": "IsConfigFile"
          },
          {
            "lang": "vb",
            "value": "IsConfigFile"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.IsConfigFile"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.IsConfigFile"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.IsConfigFile"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.IsConfigFile"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.IsConfigFile*\" text=\"IsConfigFile\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.IsConfigFile*\" text=\"IsConfigFile\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.LoadAssembly(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LoadAssembly(string)"
        },
        {
          "lang": "vb",
          "value": "LoadAssembly(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.LoadAssembly(string)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.LoadAssembly(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.LoadAssembly(string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.LoadAssembly(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.LoadAssembly(System.String)\" text=\"LoadAssembly(string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.LoadAssembly(System.String)\" text=\"LoadAssembly(string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected abstract Assembly LoadAssembly(string dllFile)"
          },
          {
            "lang": "vb",
            "value": "Protected MustOverride Function LoadAssembly(dllFile As String) As Assembly"
          }
        ],
        "parameters": [
          {
            "id": "dllFile",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Reflection.Assembly",
            "name": [
              {
                "lang": "csharp",
                "value": "Assembly"
              },
              {
                "lang": "vb",
                "value": "Assembly"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Assembly"
              },
              {
                "lang": "vb",
                "value": "Assembly"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Reflection.Assembly"
              },
              {
                "lang": "vb",
                "value": "System.Reflection.Assembly"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LoadAssembly",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 333,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.LoadAssembly*",
        "name": [
          {
            "lang": "csharp",
            "value": "LoadAssembly"
          },
          {
            "lang": "vb",
            "value": "LoadAssembly"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.LoadAssembly"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.LoadAssembly"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.LoadAssembly"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.LoadAssembly"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.LoadAssembly*\" text=\"LoadAssembly\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.LoadAssembly*\" text=\"LoadAssembly\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth(System.Collections.Generic.KeyValuePair{System.String,System.String})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "OnAssertEquivalentMaxDepth(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "OnAssertEquivalentMaxDepth(KeyValuePair(Of String, String))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.OnAssertEquivalentMaxDepth(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.OnAssertEquivalentMaxDepth(KeyValuePair(Of String, String))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth(System.Collections.Generic.KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth(System.Collections.Generic.KeyValuePair(Of String, String))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnAssertEquivalentMaxDepth(KeyValuePair&lt;string, string?&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnAssertEquivalentMaxDepth(KeyValuePair&lt;string, string?&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void OnAssertEquivalentMaxDepth(KeyValuePair<string, string?> option)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub OnAssertEquivalentMaxDepth([option] As KeyValuePair(Of String, String))"
          }
        ],
        "parameters": [
          {
            "id": "option",
            "type": {
              "uid": "System.Collections.Generic.KeyValuePair{System.String,System.String}",
              "definition": "System.Collections.Generic.KeyValuePair`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.KeyValuePair(Of String, String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "OnAssertEquivalentMaxDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 336,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "OnAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "OnAssertEquivalentMaxDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.OnAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.OnAssertEquivalentMaxDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth*\" text=\"OnAssertEquivalentMaxDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnAssertEquivalentMaxDepth*\" text=\"OnAssertEquivalentMaxDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.OnParallel(System.Collections.Generic.KeyValuePair{System.String,System.String})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "OnParallel(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "OnParallel(KeyValuePair(Of String, String))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.OnParallel(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.OnParallel(KeyValuePair(Of String, String))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.OnParallel(System.Collections.Generic.KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.OnParallel(System.Collections.Generic.KeyValuePair(Of String, String))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnParallel(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnParallel(KeyValuePair&lt;string, string?&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnParallel(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnParallel(KeyValuePair&lt;string, string?&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void OnParallel(KeyValuePair<string, string?> option)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub OnParallel([option] As KeyValuePair(Of String, String))"
          }
        ],
        "parameters": [
          {
            "id": "option",
            "type": {
              "uid": "System.Collections.Generic.KeyValuePair{System.String,System.String}",
              "definition": "System.Collections.Generic.KeyValuePair`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.KeyValuePair(Of String, String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "OnParallel",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 623,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.OnParallel*",
        "name": [
          {
            "lang": "csharp",
            "value": "OnParallel"
          },
          {
            "lang": "vb",
            "value": "OnParallel"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.OnParallel"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.OnParallel"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.OnParallel"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.OnParallel"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnParallel*\" text=\"OnParallel\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnParallel*\" text=\"OnParallel\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.OnPause(System.Collections.Generic.KeyValuePair{System.String,System.String})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "OnPause(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "OnPause(KeyValuePair(Of String, String))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.OnPause(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.OnPause(KeyValuePair(Of String, String))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.OnPause(System.Collections.Generic.KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.OnPause(System.Collections.Generic.KeyValuePair(Of String, String))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnPause(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnPause(KeyValuePair&lt;string, string?&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnPause(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnPause(KeyValuePair&lt;string, string?&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void OnPause(KeyValuePair<string, string?> option)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub OnPause([option] As KeyValuePair(Of String, String))"
          }
        ],
        "parameters": [
          {
            "id": "option",
            "type": {
              "uid": "System.Collections.Generic.KeyValuePair{System.String,System.String}",
              "definition": "System.Collections.Generic.KeyValuePair`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.KeyValuePair(Of String, String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "OnPause",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 659,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.OnPause*",
        "name": [
          {
            "lang": "csharp",
            "value": "OnPause"
          },
          {
            "lang": "vb",
            "value": "OnPause"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.OnPause"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.OnPause"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.OnPause"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.OnPause"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnPause*\" text=\"OnPause\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnPause*\" text=\"OnPause\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.OnWait(System.Collections.Generic.KeyValuePair{System.String,System.String})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "OnWait(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "OnWait(KeyValuePair(Of String, String))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.OnWait(KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.OnWait(KeyValuePair(Of String, String))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.OnWait(System.Collections.Generic.KeyValuePair<string, string?>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.OnWait(System.Collections.Generic.KeyValuePair(Of String, String))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnWait(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnWait(KeyValuePair&lt;string, string?&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnWait(System.Collections.Generic.KeyValuePair{System.String,System.String})\" text=\"OnWait(KeyValuePair&lt;string, string?&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void OnWait(KeyValuePair<string, string?> option)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub OnWait([option] As KeyValuePair(Of String, String))"
          }
        ],
        "parameters": [
          {
            "id": "option",
            "type": {
              "uid": "System.Collections.Generic.KeyValuePair{System.String,System.String}",
              "definition": "System.Collections.Generic.KeyValuePair`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "KeyValuePair(Of String, String)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.KeyValuePair<string, string>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.KeyValuePair(Of String, String)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2\">KeyValuePair</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "OnWait",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 805,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.OnWait*",
        "name": [
          {
            "lang": "csharp",
            "value": "OnWait"
          },
          {
            "lang": "vb",
            "value": "OnWait"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.OnWait"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.OnWait"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.OnWait"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.OnWait"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnWait*\" text=\"OnWait\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.OnWait*\" text=\"OnWait\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.ParseInternal(System.Int32)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParseInternal(int)"
        },
        {
          "lang": "vb",
          "value": "ParseInternal(Integer)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.ParseInternal(int)"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.ParseInternal(Integer)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.ParseInternal(int)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.ParseInternal(Integer)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseInternal(System.Int32)\" text=\"ParseInternal(int)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseInternal(System.Int32)\" text=\"ParseInternal(int)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected XunitProject ParseInternal(int argStartIndex)"
          },
          {
            "lang": "vb",
            "value": "Protected Function ParseInternal(argStartIndex As Integer) As XunitProject"
          }
        ],
        "parameters": [
          {
            "id": "argStartIndex",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.XunitProject",
            "name": [
              {
                "lang": "csharp",
                "value": "XunitProject"
              },
              {
                "lang": "vb",
                "value": "XunitProject"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "XunitProject"
              },
              {
                "lang": "vb",
                "value": "XunitProject"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.XunitProject"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.XunitProject"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitProject\" text=\"XunitProject\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitProject\" text=\"XunitProject\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParseInternal",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 812,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.ParseInternal*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParseInternal"
          },
          {
            "lang": "vb",
            "value": "ParseInternal"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.ParseInternal"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.ParseInternal"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.ParseInternal"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.ParseInternal"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseInternal*\" text=\"ParseInternal\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseInternal*\" text=\"ParseInternal\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.ParseWarnings",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParseWarnings"
        },
        {
          "lang": "vb",
          "value": "ParseWarnings"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.ParseWarnings"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.ParseWarnings"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.ParseWarnings"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.ParseWarnings"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseWarnings\" text=\"ParseWarnings\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseWarnings\" text=\"ParseWarnings\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public List<string> ParseWarnings { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ParseWarnings As List(Of String)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.List{System.String}",
            "definition": "System.Collections.Generic.List`1",
            "name": [
              {
                "lang": "csharp",
                "value": "List<string>"
              },
              {
                "lang": "vb",
                "value": "List(Of String)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "List<string>"
              },
              {
                "lang": "vb",
                "value": "List(Of String)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.List<string>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.List(Of String)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1\">List</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1\">List</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParseWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 241,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.ParseWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParseWarnings"
          },
          {
            "lang": "vb",
            "value": "ParseWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.ParseWarnings"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.ParseWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.ParseWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.ParseWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseWarnings*\" text=\"ParseWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.ParseWarnings*\" text=\"ParseWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.PrintUsage",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintUsage()"
        },
        {
          "lang": "vb",
          "value": "PrintUsage()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.PrintUsage()"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.PrintUsage()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.PrintUsage()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.PrintUsage()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.PrintUsage\" text=\"PrintUsage()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.PrintUsage\" text=\"PrintUsage()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void PrintUsage()"
          },
          {
            "lang": "vb",
            "value": "Public Sub PrintUsage()"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintUsage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 876,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.PrintUsage*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintUsage"
          },
          {
            "lang": "vb",
            "value": "PrintUsage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.PrintUsage"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.PrintUsage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.PrintUsage"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.PrintUsage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.PrintUsage*\" text=\"PrintUsage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.PrintUsage*\" text=\"PrintUsage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.Project",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Project"
        },
        {
          "lang": "vb",
          "value": "Project"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.Project"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.Project"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.Project"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.Project"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Project\" text=\"Project\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Project\" text=\"Project\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected XunitProject Project { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property Project As XunitProject"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.XunitProject",
            "name": [
              {
                "lang": "csharp",
                "value": "XunitProject"
              },
              {
                "lang": "vb",
                "value": "XunitProject"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "XunitProject"
              },
              {
                "lang": "vb",
                "value": "XunitProject"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.XunitProject"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.XunitProject"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitProject\" text=\"XunitProject\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitProject\" text=\"XunitProject\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Project",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 244,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.Project*",
        "name": [
          {
            "lang": "csharp",
            "value": "Project"
          },
          {
            "lang": "vb",
            "value": "Project"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.Project"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.Project"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.Project"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.Project"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Project*\" text=\"Project\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.Project*\" text=\"Project\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    },
    {
      "uid": "Xunit.Internal.CommandLineParserBase.RunnerReporters",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Internal.CommandLineParserBase",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "RunnerReporters"
        },
        {
          "lang": "vb",
          "value": "RunnerReporters"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CommandLineParserBase.RunnerReporters"
        },
        {
          "lang": "vb",
          "value": "CommandLineParserBase.RunnerReporters"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Internal.CommandLineParserBase.RunnerReporters"
        },
        {
          "lang": "vb",
          "value": "Xunit.Internal.CommandLineParserBase.RunnerReporters"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.RunnerReporters\" text=\"RunnerReporters\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.RunnerReporters\" text=\"RunnerReporters\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected IReadOnlyList<IRunnerReporter> RunnerReporters { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property RunnerReporters As IReadOnlyList(Of IRunnerReporter)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyList{Xunit.Runner.Common.IRunnerReporter}",
            "definition": "System.Collections.Generic.IReadOnlyList`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of IRunnerReporter)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of IRunnerReporter)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyList<Xunit.Runner.Common.IRunnerReporter>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyList(Of Xunit.Runner.Common.IRunnerReporter)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.IRunnerReporter.html\">IRunnerReporter</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "RunnerReporters",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
        "startLine": 247,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Internal",
      "example": [],
      "overload": {
        "uid": "Xunit.Internal.CommandLineParserBase.RunnerReporters*",
        "name": [
          {
            "lang": "csharp",
            "value": "RunnerReporters"
          },
          {
            "lang": "vb",
            "value": "RunnerReporters"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "CommandLineParserBase.RunnerReporters"
          },
          {
            "lang": "vb",
            "value": "CommandLineParserBase.RunnerReporters"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Internal.CommandLineParserBase.RunnerReporters"
          },
          {
            "lang": "vb",
            "value": "Xunit.Internal.CommandLineParserBase.RunnerReporters"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.RunnerReporters*\" text=\"RunnerReporters\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Internal.CommandLineParserBase.RunnerReporters*\" text=\"RunnerReporters\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "CommandLineParserBase"
    },
    {
      "lang": "vb",
      "value": "CommandLineParserBase"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "CommandLineParserBase"
    },
    {
      "lang": "vb",
      "value": "CommandLineParserBase"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Internal.CommandLineParserBase"
    },
    {
      "lang": "vb",
      "value": "Xunit.Internal.CommandLineParserBase"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "CommandLineParserBase",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Parsers/CommandLineParserBase.cs",
    "startLine": 15,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Internal",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Internal"
      },
      {
        "lang": "vb",
        "value": "Xunit.Internal"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Internal.html\">Internal</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Internal.CommandLineParserBase.yml\" sourcestartlinenumber=\"1\">INTERNAL CLASS. DO NOT USE.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public abstract class CommandLineParserBase"
      },
      {
        "lang": "vb",
        "value": "Public MustInherit Class CommandLineParserBase"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Internal.CommandLineParserBase.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Internal.CommandLineParserBase.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}