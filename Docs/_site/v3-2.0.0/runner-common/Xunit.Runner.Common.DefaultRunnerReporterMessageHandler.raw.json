{
  "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor(Xunit.Runner.Common.IRunnerLogger)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler(IRunnerLogger)"
        },
        {
          "lang": "vb",
          "value": "New(IRunnerLogger)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.DefaultRunnerReporterMessageHandler(IRunnerLogger)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.New(IRunnerLogger)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.DefaultRunnerReporterMessageHandler(Xunit.Runner.Common.IRunnerLogger)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.New(Xunit.Runner.Common.IRunnerLogger)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor(Xunit.Runner.Common.IRunnerLogger)\" text=\"DefaultRunnerReporterMessageHandler(IRunnerLogger)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor(Xunit.Runner.Common.IRunnerLogger)\" text=\"DefaultRunnerReporterMessageHandler(IRunnerLogger)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public DefaultRunnerReporterMessageHandler(IRunnerLogger logger)"
          },
          {
            "lang": "vb",
            "value": "Public Sub New(logger As IRunnerLogger)"
          }
        ],
        "parameters": [
          {
            "id": "logger",
            "type": {
              "uid": "Xunit.Runner.Common.IRunnerLogger",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "IRunnerLogger"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "IRunnerLogger"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.IRunnerLogger"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The logger used to report messages</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": ".ctor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 31,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor*",
        "name": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler"
          },
          {
            "lang": "vb",
            "value": "New"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.DefaultRunnerReporterMessageHandler"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.New"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.DefaultRunnerReporterMessageHandler"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.New"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor*\" text=\"DefaultRunnerReporterMessageHandler\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.#ctor*\" text=\"DefaultRunnerReporterMessageHandler\"/>"
          }
        ]
      },
      "level": 0,
      "type": "constructor",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Initializes a new instance of the <xref href=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "EnvVar_HidePassingOutput"
        },
        {
          "lang": "vb",
          "value": "EnvVar_HidePassingOutput"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput\" text=\"EnvVar_HidePassingOutput\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EnvVar_HidePassingOutput\" text=\"EnvVar_HidePassingOutput\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public const string EnvVar_HidePassingOutput = \"XUNIT_HIDE_PASSING_OUTPUT_DIAGNOSTICS\""
          },
          {
            "lang": "vb",
            "value": "Public Const EnvVar_HidePassingOutput As String = \"XUNIT_HIDE_PASSING_OUTPUT_DIAGNOSTICS\""
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "EnvVar_HidePassingOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 20,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "level": 0,
      "type": "field",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Gets the environment variable that's used to hide passing tests with output\nwhen diagnostics messages are enabled.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Escape(string?)"
        },
        {
          "lang": "vb",
          "value": "Escape(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.Escape(string?)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.Escape(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape(string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape(System.String)\" text=\"Escape(string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape(System.String)\" text=\"Escape(string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual string Escape(string? text)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function Escape(text As String) As String"
          }
        ],
        "parameters": [
          {
            "id": "text",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The text to be escaped</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The escaped text</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Escape",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 102,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape*",
        "name": [
          {
            "lang": "csharp",
            "value": "Escape"
          },
          {
            "lang": "vb",
            "value": "Escape"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.Escape"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.Escape"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape*\" text=\"Escape\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Escape*\" text=\"Escape\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Escapes text for display purposes.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(System.String,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "EscapeMultiLineIndent(string?, string)"
        },
        {
          "lang": "vb",
          "value": "EscapeMultiLineIndent(String, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(string?, string)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(String, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(string?, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(String, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(System.String,System.String)\" text=\"EscapeMultiLineIndent(string?, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent(System.String,System.String)\" text=\"EscapeMultiLineIndent(string?, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual string EscapeMultiLineIndent(string? text, string indent)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function EscapeMultiLineIndent(text As String, indent As String) As String"
          }
        ],
        "parameters": [
          {
            "id": "text",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The text to be escaped</p>\n"
          },
          {
            "id": "indent",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The indent to use for multiple line text</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The escaped text</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "EscapeMultiLineIndent",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 113,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent*",
        "name": [
          {
            "lang": "csharp",
            "value": "EscapeMultiLineIndent"
          },
          {
            "lang": "vb",
            "value": "EscapeMultiLineIndent"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent*\" text=\"EscapeMultiLineIndent\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.EscapeMultiLineIndent*\" text=\"EscapeMultiLineIndent\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Escapes multi-line text for display purposes, indenting on newlines.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(Xunit.Runner.Common.XunitProjectAssembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyDisplayName(XunitProjectAssembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyDisplayName(XunitProjectAssembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(XunitProjectAssembly)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(XunitProjectAssembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(Xunit.Runner.Common.XunitProjectAssembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(Xunit.Runner.Common.XunitProjectAssembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(Xunit.Runner.Common.XunitProjectAssembly)\" text=\"GetAssemblyDisplayName(XunitProjectAssembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName(Xunit.Runner.Common.XunitProjectAssembly)\" text=\"GetAssemblyDisplayName(XunitProjectAssembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual string GetAssemblyDisplayName(XunitProjectAssembly assembly)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function GetAssemblyDisplayName(assembly As XunitProjectAssembly) As String"
          }
        ],
        "parameters": [
          {
            "id": "assembly",
            "type": {
              "uid": "Xunit.Runner.Common.XunitProjectAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The assembly display name</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyDisplayName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 125,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyDisplayName"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyDisplayName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName*\" text=\"GetAssemblyDisplayName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetAssemblyDisplayName*\" text=\"GetAssemblyDisplayName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Gets the display name of a test assembly from a test assembly message.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetExecutionOptions(string?)"
        },
        {
          "lang": "vb",
          "value": "GetExecutionOptions(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.GetExecutionOptions(string?)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.GetExecutionOptions(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions(string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions(System.String)\" text=\"GetExecutionOptions(string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions(System.String)\" text=\"GetExecutionOptions(string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected ITestFrameworkExecutionOptions GetExecutionOptions(string? assemblyFileName)"
          },
          {
            "lang": "vb",
            "value": "Protected Function GetExecutionOptions(assemblyFileName As String) As ITestFrameworkExecutionOptions"
          }
        ],
        "parameters": [
          {
            "id": "assemblyFileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The test assembly filename</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestFrameworkExecutionOptions"
              },
              {
                "lang": "vb",
                "value": "ITestFrameworkExecutionOptions"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestFrameworkExecutionOptions"
              },
              {
                "lang": "vb",
                "value": "ITestFrameworkExecutionOptions"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetExecutionOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 137,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetExecutionOptions"
          },
          {
            "lang": "vb",
            "value": "GetExecutionOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.GetExecutionOptions"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.GetExecutionOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions*\" text=\"GetExecutionOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.GetExecutionOptions*\" text=\"GetExecutionOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Get the test framework options for the given assembly. If it cannot find them, then it\nreturns a default set of options.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.IErrorMessage})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleErrorMessage(MessageHandlerArgs<IErrorMessage>)"
        },
        {
          "lang": "vb",
          "value": "HandleErrorMessage(MessageHandlerArgs(Of IErrorMessage))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleErrorMessage(MessageHandlerArgs<IErrorMessage>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleErrorMessage(MessageHandlerArgs(Of IErrorMessage))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.IErrorMessage>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.IErrorMessage))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.IErrorMessage})\" text=\"HandleErrorMessage(MessageHandlerArgs&lt;IErrorMessage&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.IErrorMessage})\" text=\"HandleErrorMessage(MessageHandlerArgs&lt;IErrorMessage&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleErrorMessage(MessageHandlerArgs<IErrorMessage> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleErrorMessage(args As MessageHandlerArgs(Of IErrorMessage))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.IErrorMessage}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<IErrorMessage>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of IErrorMessage)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<IErrorMessage>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of IErrorMessage)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.IErrorMessage>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.IErrorMessage)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.IErrorMessage\" text=\"IErrorMessage\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.IErrorMessage\" text=\"IErrorMessage\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleErrorMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 252,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleErrorMessage"
          },
          {
            "lang": "vb",
            "value": "HandleErrorMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleErrorMessage"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleErrorMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage*\" text=\"HandleErrorMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleErrorMessage*\" text=\"HandleErrorMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.IErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyCleanupFailure(MessageHandlerArgs<ITestAssemblyCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyCleanupFailure(MessageHandlerArgs(Of ITestAssemblyCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(MessageHandlerArgs<ITestAssemblyCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(MessageHandlerArgs(Of ITestAssemblyCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyCleanupFailure})\" text=\"HandleTestAssemblyCleanupFailure(MessageHandlerArgs&lt;ITestAssemblyCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyCleanupFailure})\" text=\"HandleTestAssemblyCleanupFailure(MessageHandlerArgs&lt;ITestAssemblyCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyCleanupFailure(MessageHandlerArgs<ITestAssemblyCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyCleanupFailure(args As MessageHandlerArgs(Of ITestAssemblyCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestAssemblyCleanupFailure\" text=\"ITestAssemblyCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestAssemblyCleanupFailure\" text=\"ITestAssemblyCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 374,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure*\" text=\"HandleTestAssemblyCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyCleanupFailure*\" text=\"HandleTestAssemblyCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestAssemblyCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs<TestAssemblyDiscoveryFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs(Of TestAssemblyDiscoveryFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs<TestAssemblyDiscoveryFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs(Of TestAssemblyDiscoveryFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyDiscoveryFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyDiscoveryFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryFinished})\" text=\"HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs&lt;TestAssemblyDiscoveryFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryFinished})\" text=\"HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs&lt;TestAssemblyDiscoveryFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyDiscoveryFinished(MessageHandlerArgs<TestAssemblyDiscoveryFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyDiscoveryFinished(args As MessageHandlerArgs(Of TestAssemblyDiscoveryFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyDiscoveryFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyDiscoveryFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyDiscoveryFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyDiscoveryFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyDiscoveryFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyDiscoveryFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyDiscoveryFinished.html\">TestAssemblyDiscoveryFinished</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyDiscoveryFinished.html\">TestAssemblyDiscoveryFinished</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyDiscoveryFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 263,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyDiscoveryFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyDiscoveryFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished*\" text=\"HandleTestAssemblyDiscoveryFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryFinished*\" text=\"HandleTestAssemblyDiscoveryFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Runner.Common.TestAssemblyDiscoveryFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs<TestAssemblyDiscoveryStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs(Of TestAssemblyDiscoveryStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs<TestAssemblyDiscoveryStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs(Of TestAssemblyDiscoveryStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyDiscoveryStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyDiscoveryStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryStarting})\" text=\"HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs&lt;TestAssemblyDiscoveryStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryStarting})\" text=\"HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs&lt;TestAssemblyDiscoveryStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyDiscoveryStarting(MessageHandlerArgs<TestAssemblyDiscoveryStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyDiscoveryStarting(args As MessageHandlerArgs(Of TestAssemblyDiscoveryStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyDiscoveryStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyDiscoveryStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyDiscoveryStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyDiscoveryStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyDiscoveryStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyDiscoveryStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyDiscoveryStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyDiscoveryStarting.html\">TestAssemblyDiscoveryStarting</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyDiscoveryStarting.html\">TestAssemblyDiscoveryStarting</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyDiscoveryStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 280,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyDiscoveryStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyDiscoveryStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting*\" text=\"HandleTestAssemblyDiscoveryStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyDiscoveryStarting*\" text=\"HandleTestAssemblyDiscoveryStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Runner.Common.TestAssemblyDiscoveryStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyExecutionFinished(MessageHandlerArgs<TestAssemblyExecutionFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyExecutionFinished(MessageHandlerArgs(Of TestAssemblyExecutionFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(MessageHandlerArgs<TestAssemblyExecutionFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(MessageHandlerArgs(Of TestAssemblyExecutionFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyExecutionFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyExecutionFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionFinished})\" text=\"HandleTestAssemblyExecutionFinished(MessageHandlerArgs&lt;TestAssemblyExecutionFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionFinished})\" text=\"HandleTestAssemblyExecutionFinished(MessageHandlerArgs&lt;TestAssemblyExecutionFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyExecutionFinished(MessageHandlerArgs<TestAssemblyExecutionFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyExecutionFinished(args As MessageHandlerArgs(Of TestAssemblyExecutionFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyExecutionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyExecutionFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyExecutionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyExecutionFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyExecutionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyExecutionFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyExecutionFinished.html\">TestAssemblyExecutionFinished</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyExecutionFinished.html\">TestAssemblyExecutionFinished</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyExecutionFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 312,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyExecutionFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyExecutionFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished*\" text=\"HandleTestAssemblyExecutionFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionFinished*\" text=\"HandleTestAssemblyExecutionFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Runner.Common.TestAssemblyExecutionFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyExecutionStarting(MessageHandlerArgs<TestAssemblyExecutionStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyExecutionStarting(MessageHandlerArgs(Of TestAssemblyExecutionStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(MessageHandlerArgs<TestAssemblyExecutionStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(MessageHandlerArgs(Of TestAssemblyExecutionStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyExecutionStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyExecutionStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionStarting})\" text=\"HandleTestAssemblyExecutionStarting(MessageHandlerArgs&lt;TestAssemblyExecutionStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionStarting})\" text=\"HandleTestAssemblyExecutionStarting(MessageHandlerArgs&lt;TestAssemblyExecutionStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyExecutionStarting(MessageHandlerArgs<TestAssemblyExecutionStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyExecutionStarting(args As MessageHandlerArgs(Of TestAssemblyExecutionStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestAssemblyExecutionStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyExecutionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyExecutionStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestAssemblyExecutionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestAssemblyExecutionStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestAssemblyExecutionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestAssemblyExecutionStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyExecutionStarting.html\">TestAssemblyExecutionStarting</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.TestAssemblyExecutionStarting.html\">TestAssemblyExecutionStarting</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyExecutionStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 326,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyExecutionStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyExecutionStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting*\" text=\"HandleTestAssemblyExecutionStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyExecutionStarting*\" text=\"HandleTestAssemblyExecutionStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Runner.Common.TestAssemblyExecutionStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyFinished(MessageHandlerArgs<ITestAssemblyFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyFinished(MessageHandlerArgs(Of ITestAssemblyFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(MessageHandlerArgs<ITestAssemblyFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(MessageHandlerArgs(Of ITestAssemblyFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyFinished})\" text=\"HandleTestAssemblyFinished(MessageHandlerArgs&lt;ITestAssemblyFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyFinished})\" text=\"HandleTestAssemblyFinished(MessageHandlerArgs&lt;ITestAssemblyFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyFinished(MessageHandlerArgs<ITestAssemblyFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyFinished(args As MessageHandlerArgs(Of ITestAssemblyFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestAssemblyFinished\" text=\"ITestAssemblyFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestAssemblyFinished\" text=\"ITestAssemblyFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 387,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished*\" text=\"HandleTestAssemblyFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyFinished*\" text=\"HandleTestAssemblyFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestAssemblyFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestAssemblyStarting(MessageHandlerArgs<ITestAssemblyStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestAssemblyStarting(MessageHandlerArgs(Of ITestAssemblyStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(MessageHandlerArgs<ITestAssemblyStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(MessageHandlerArgs(Of ITestAssemblyStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyStarting})\" text=\"HandleTestAssemblyStarting(MessageHandlerArgs&lt;ITestAssemblyStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyStarting})\" text=\"HandleTestAssemblyStarting(MessageHandlerArgs&lt;ITestAssemblyStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestAssemblyStarting(MessageHandlerArgs<ITestAssemblyStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestAssemblyStarting(args As MessageHandlerArgs(Of ITestAssemblyStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestAssemblyStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestAssemblyStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestAssemblyStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestAssemblyStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestAssemblyStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestAssemblyStarting\" text=\"ITestAssemblyStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestAssemblyStarting\" text=\"ITestAssemblyStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestAssemblyStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 397,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestAssemblyStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestAssemblyStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting*\" text=\"HandleTestAssemblyStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestAssemblyStarting*\" text=\"HandleTestAssemblyStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestAssemblyStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCaseCleanupFailure(MessageHandlerArgs<ITestCaseCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCaseCleanupFailure(MessageHandlerArgs(Of ITestCaseCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(MessageHandlerArgs<ITestCaseCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(MessageHandlerArgs(Of ITestCaseCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseCleanupFailure})\" text=\"HandleTestCaseCleanupFailure(MessageHandlerArgs&lt;ITestCaseCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseCleanupFailure})\" text=\"HandleTestCaseCleanupFailure(MessageHandlerArgs&lt;ITestCaseCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCaseCleanupFailure(MessageHandlerArgs<ITestCaseCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCaseCleanupFailure(args As MessageHandlerArgs(Of ITestCaseCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCaseCleanupFailure\" text=\"ITestCaseCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCaseCleanupFailure\" text=\"ITestCaseCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCaseCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 408,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCaseCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestCaseCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure*\" text=\"HandleTestCaseCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseCleanupFailure*\" text=\"HandleTestCaseCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCaseCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCaseFinished(MessageHandlerArgs<ITestCaseFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCaseFinished(MessageHandlerArgs(Of ITestCaseFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(MessageHandlerArgs<ITestCaseFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(MessageHandlerArgs(Of ITestCaseFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseFinished})\" text=\"HandleTestCaseFinished(MessageHandlerArgs&lt;ITestCaseFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseFinished})\" text=\"HandleTestCaseFinished(MessageHandlerArgs&lt;ITestCaseFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCaseFinished(MessageHandlerArgs<ITestCaseFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCaseFinished(args As MessageHandlerArgs(Of ITestCaseFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCaseFinished\" text=\"ITestCaseFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCaseFinished\" text=\"ITestCaseFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCaseFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 421,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCaseFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestCaseFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished*\" text=\"HandleTestCaseFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseFinished*\" text=\"HandleTestCaseFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCaseFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCaseStarting(MessageHandlerArgs<ITestCaseStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCaseStarting(MessageHandlerArgs(Of ITestCaseStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(MessageHandlerArgs<ITestCaseStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(MessageHandlerArgs(Of ITestCaseStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseStarting})\" text=\"HandleTestCaseStarting(MessageHandlerArgs&lt;ITestCaseStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseStarting})\" text=\"HandleTestCaseStarting(MessageHandlerArgs&lt;ITestCaseStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCaseStarting(MessageHandlerArgs<ITestCaseStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCaseStarting(args As MessageHandlerArgs(Of ITestCaseStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCaseStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCaseStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCaseStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCaseStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCaseStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCaseStarting\" text=\"ITestCaseStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCaseStarting\" text=\"ITestCaseStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCaseStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 432,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCaseStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestCaseStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCaseStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting*\" text=\"HandleTestCaseStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCaseStarting*\" text=\"HandleTestCaseStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCaseStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestClassCleanupFailure(MessageHandlerArgs<ITestClassCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestClassCleanupFailure(MessageHandlerArgs(Of ITestClassCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(MessageHandlerArgs<ITestClassCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(MessageHandlerArgs(Of ITestClassCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassCleanupFailure})\" text=\"HandleTestClassCleanupFailure(MessageHandlerArgs&lt;ITestClassCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassCleanupFailure})\" text=\"HandleTestClassCleanupFailure(MessageHandlerArgs&lt;ITestClassCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestClassCleanupFailure(MessageHandlerArgs<ITestClassCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestClassCleanupFailure(args As MessageHandlerArgs(Of ITestClassCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestClassCleanupFailure\" text=\"ITestClassCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestClassCleanupFailure\" text=\"ITestClassCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestClassCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 443,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestClassCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestClassCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure*\" text=\"HandleTestClassCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassCleanupFailure*\" text=\"HandleTestClassCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestClassCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestClassFinished(MessageHandlerArgs<ITestClassFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestClassFinished(MessageHandlerArgs(Of ITestClassFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassFinished(MessageHandlerArgs<ITestClassFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassFinished(MessageHandlerArgs(Of ITestClassFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassFinished})\" text=\"HandleTestClassFinished(MessageHandlerArgs&lt;ITestClassFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassFinished})\" text=\"HandleTestClassFinished(MessageHandlerArgs&lt;ITestClassFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestClassFinished(MessageHandlerArgs<ITestClassFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestClassFinished(args As MessageHandlerArgs(Of ITestClassFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestClassFinished\" text=\"ITestClassFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestClassFinished\" text=\"ITestClassFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestClassFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 456,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestClassFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestClassFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished*\" text=\"HandleTestClassFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassFinished*\" text=\"HandleTestClassFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestClassFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestClassStarting(MessageHandlerArgs<ITestClassStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestClassStarting(MessageHandlerArgs(Of ITestClassStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassStarting(MessageHandlerArgs<ITestClassStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestClassStarting(MessageHandlerArgs(Of ITestClassStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassStarting})\" text=\"HandleTestClassStarting(MessageHandlerArgs&lt;ITestClassStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassStarting})\" text=\"HandleTestClassStarting(MessageHandlerArgs&lt;ITestClassStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestClassStarting(MessageHandlerArgs<ITestClassStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestClassStarting(args As MessageHandlerArgs(Of ITestClassStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestClassStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestClassStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestClassStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestClassStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestClassStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestClassStarting\" text=\"ITestClassStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestClassStarting\" text=\"ITestClassStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestClassStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 467,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestClassStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestClassStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestClassStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting*\" text=\"HandleTestClassStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestClassStarting*\" text=\"HandleTestClassStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestClassStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCleanupFailure(MessageHandlerArgs<ITestCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCleanupFailure(MessageHandlerArgs(Of ITestCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(MessageHandlerArgs<ITestCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(MessageHandlerArgs(Of ITestCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCleanupFailure})\" text=\"HandleTestCleanupFailure(MessageHandlerArgs&lt;ITestCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCleanupFailure})\" text=\"HandleTestCleanupFailure(MessageHandlerArgs&lt;ITestCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCleanupFailure(MessageHandlerArgs<ITestCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCleanupFailure(args As MessageHandlerArgs(Of ITestCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCleanupFailure\" text=\"ITestCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCleanupFailure\" text=\"ITestCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 478,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure*\" text=\"HandleTestCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCleanupFailure*\" text=\"HandleTestCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCollectionCleanupFailure(MessageHandlerArgs<ITestCollectionCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCollectionCleanupFailure(MessageHandlerArgs(Of ITestCollectionCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(MessageHandlerArgs<ITestCollectionCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(MessageHandlerArgs(Of ITestCollectionCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionCleanupFailure})\" text=\"HandleTestCollectionCleanupFailure(MessageHandlerArgs&lt;ITestCollectionCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionCleanupFailure})\" text=\"HandleTestCollectionCleanupFailure(MessageHandlerArgs&lt;ITestCollectionCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCollectionCleanupFailure(MessageHandlerArgs<ITestCollectionCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCollectionCleanupFailure(args As MessageHandlerArgs(Of ITestCollectionCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCollectionCleanupFailure\" text=\"ITestCollectionCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCollectionCleanupFailure\" text=\"ITestCollectionCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCollectionCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 491,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCollectionCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestCollectionCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure*\" text=\"HandleTestCollectionCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionCleanupFailure*\" text=\"HandleTestCollectionCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCollectionCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCollectionFinished(MessageHandlerArgs<ITestCollectionFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCollectionFinished(MessageHandlerArgs(Of ITestCollectionFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(MessageHandlerArgs<ITestCollectionFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(MessageHandlerArgs(Of ITestCollectionFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionFinished})\" text=\"HandleTestCollectionFinished(MessageHandlerArgs&lt;ITestCollectionFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionFinished})\" text=\"HandleTestCollectionFinished(MessageHandlerArgs&lt;ITestCollectionFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCollectionFinished(MessageHandlerArgs<ITestCollectionFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCollectionFinished(args As MessageHandlerArgs(Of ITestCollectionFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCollectionFinished\" text=\"ITestCollectionFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCollectionFinished\" text=\"ITestCollectionFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCollectionFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 504,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCollectionFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestCollectionFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished*\" text=\"HandleTestCollectionFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionFinished*\" text=\"HandleTestCollectionFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCollectionFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestCollectionStarting(MessageHandlerArgs<ITestCollectionStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestCollectionStarting(MessageHandlerArgs(Of ITestCollectionStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(MessageHandlerArgs<ITestCollectionStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(MessageHandlerArgs(Of ITestCollectionStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionStarting})\" text=\"HandleTestCollectionStarting(MessageHandlerArgs&lt;ITestCollectionStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionStarting})\" text=\"HandleTestCollectionStarting(MessageHandlerArgs&lt;ITestCollectionStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestCollectionStarting(MessageHandlerArgs<ITestCollectionStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestCollectionStarting(args As MessageHandlerArgs(Of ITestCollectionStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestCollectionStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestCollectionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestCollectionStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestCollectionStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestCollectionStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestCollectionStarting\" text=\"ITestCollectionStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestCollectionStarting\" text=\"ITestCollectionStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestCollectionStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 515,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestCollectionStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestCollectionStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting*\" text=\"HandleTestCollectionStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestCollectionStarting*\" text=\"HandleTestCollectionStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestCollectionStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestExecutionSummaries})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestExecutionSummaries(MessageHandlerArgs<TestExecutionSummaries>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestExecutionSummaries(MessageHandlerArgs(Of TestExecutionSummaries))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(MessageHandlerArgs<TestExecutionSummaries>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(MessageHandlerArgs(Of TestExecutionSummaries))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestExecutionSummaries>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestExecutionSummaries))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestExecutionSummaries})\" text=\"HandleTestExecutionSummaries(MessageHandlerArgs&lt;TestExecutionSummaries&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestExecutionSummaries})\" text=\"HandleTestExecutionSummaries(MessageHandlerArgs&lt;TestExecutionSummaries&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestExecutionSummaries(MessageHandlerArgs<TestExecutionSummaries> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestExecutionSummaries(args As MessageHandlerArgs(Of TestExecutionSummaries))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Runner.Common.TestExecutionSummaries}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestExecutionSummaries>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestExecutionSummaries)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<TestExecutionSummaries>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of TestExecutionSummaries)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Runner.Common.TestExecutionSummaries>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Runner.Common.TestExecutionSummaries)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.Common.TestExecutionSummaries.html\">TestExecutionSummaries</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <a class=\"xref\" href=\"Xunit.Runner.Common.TestExecutionSummaries.html\">TestExecutionSummaries</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestExecutionSummaries",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 526,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestExecutionSummaries"
          },
          {
            "lang": "vb",
            "value": "HandleTestExecutionSummaries"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries*\" text=\"HandleTestExecutionSummaries\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestExecutionSummaries*\" text=\"HandleTestExecutionSummaries\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Runner.Common.TestExecutionSummaries\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFailed})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestFailed(MessageHandlerArgs<ITestFailed>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestFailed(MessageHandlerArgs(Of ITestFailed))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestFailed(MessageHandlerArgs<ITestFailed>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestFailed(MessageHandlerArgs(Of ITestFailed))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestFailed>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestFailed))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFailed})\" text=\"HandleTestFailed(MessageHandlerArgs&lt;ITestFailed&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFailed})\" text=\"HandleTestFailed(MessageHandlerArgs&lt;ITestFailed&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestFailed(MessageHandlerArgs<ITestFailed> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestFailed(args As MessageHandlerArgs(Of ITestFailed))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFailed}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestFailed>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestFailed)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestFailed>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestFailed)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestFailed>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestFailed)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestFailed\" text=\"ITestFailed\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestFailed\" text=\"ITestFailed\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestFailed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 537,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestFailed"
          },
          {
            "lang": "vb",
            "value": "HandleTestFailed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestFailed"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestFailed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed*\" text=\"HandleTestFailed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFailed*\" text=\"HandleTestFailed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestFailed\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestFinished(MessageHandlerArgs<ITestFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestFinished(MessageHandlerArgs(Of ITestFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestFinished(MessageHandlerArgs<ITestFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestFinished(MessageHandlerArgs(Of ITestFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFinished})\" text=\"HandleTestFinished(MessageHandlerArgs&lt;ITestFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFinished})\" text=\"HandleTestFinished(MessageHandlerArgs&lt;ITestFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestFinished(MessageHandlerArgs<ITestFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestFinished(args As MessageHandlerArgs(Of ITestFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestFinished\" text=\"ITestFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestFinished\" text=\"ITestFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 562,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished*\" text=\"HandleTestFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestFinished*\" text=\"HandleTestFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodCleanupFailure})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestMethodCleanupFailure(MessageHandlerArgs<ITestMethodCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestMethodCleanupFailure(MessageHandlerArgs(Of ITestMethodCleanupFailure))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(MessageHandlerArgs<ITestMethodCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(MessageHandlerArgs(Of ITestMethodCleanupFailure))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodCleanupFailure>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodCleanupFailure))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodCleanupFailure})\" text=\"HandleTestMethodCleanupFailure(MessageHandlerArgs&lt;ITestMethodCleanupFailure&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodCleanupFailure})\" text=\"HandleTestMethodCleanupFailure(MessageHandlerArgs&lt;ITestMethodCleanupFailure&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestMethodCleanupFailure(MessageHandlerArgs<ITestMethodCleanupFailure> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestMethodCleanupFailure(args As MessageHandlerArgs(Of ITestMethodCleanupFailure))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodCleanupFailure}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodCleanupFailure)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodCleanupFailure)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodCleanupFailure>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodCleanupFailure)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestMethodCleanupFailure\" text=\"ITestMethodCleanupFailure\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestMethodCleanupFailure\" text=\"ITestMethodCleanupFailure\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestMethodCleanupFailure",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 573,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestMethodCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "HandleTestMethodCleanupFailure"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure*\" text=\"HandleTestMethodCleanupFailure\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodCleanupFailure*\" text=\"HandleTestMethodCleanupFailure\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestMethodCleanupFailure\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodFinished})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestMethodFinished(MessageHandlerArgs<ITestMethodFinished>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestMethodFinished(MessageHandlerArgs(Of ITestMethodFinished))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(MessageHandlerArgs<ITestMethodFinished>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(MessageHandlerArgs(Of ITestMethodFinished))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodFinished>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodFinished))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodFinished})\" text=\"HandleTestMethodFinished(MessageHandlerArgs&lt;ITestMethodFinished&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodFinished})\" text=\"HandleTestMethodFinished(MessageHandlerArgs&lt;ITestMethodFinished&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestMethodFinished(MessageHandlerArgs<ITestMethodFinished> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestMethodFinished(args As MessageHandlerArgs(Of ITestMethodFinished))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodFinished}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodFinished)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodFinished>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodFinished)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodFinished>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodFinished)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestMethodFinished\" text=\"ITestMethodFinished\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestMethodFinished\" text=\"ITestMethodFinished\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestMethodFinished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 587,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestMethodFinished"
          },
          {
            "lang": "vb",
            "value": "HandleTestMethodFinished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodFinished"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodFinished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished*\" text=\"HandleTestMethodFinished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodFinished*\" text=\"HandleTestMethodFinished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestMethodFinished\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestMethodStarting(MessageHandlerArgs<ITestMethodStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestMethodStarting(MessageHandlerArgs(Of ITestMethodStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(MessageHandlerArgs<ITestMethodStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(MessageHandlerArgs(Of ITestMethodStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodStarting})\" text=\"HandleTestMethodStarting(MessageHandlerArgs&lt;ITestMethodStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodStarting})\" text=\"HandleTestMethodStarting(MessageHandlerArgs&lt;ITestMethodStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestMethodStarting(MessageHandlerArgs<ITestMethodStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestMethodStarting(args As MessageHandlerArgs(Of ITestMethodStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestMethodStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestMethodStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestMethodStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestMethodStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestMethodStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestMethodStarting\" text=\"ITestMethodStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestMethodStarting\" text=\"ITestMethodStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestMethodStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 598,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestMethodStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestMethodStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestMethodStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting*\" text=\"HandleTestMethodStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestMethodStarting*\" text=\"HandleTestMethodStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestMethodStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestOutput})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestOutput(MessageHandlerArgs<ITestOutput>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestOutput(MessageHandlerArgs(Of ITestOutput))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestOutput(MessageHandlerArgs<ITestOutput>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestOutput(MessageHandlerArgs(Of ITestOutput))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestOutput>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestOutput))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestOutput})\" text=\"HandleTestOutput(MessageHandlerArgs&lt;ITestOutput&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestOutput})\" text=\"HandleTestOutput(MessageHandlerArgs&lt;ITestOutput&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestOutput(MessageHandlerArgs<ITestOutput> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestOutput(args As MessageHandlerArgs(Of ITestOutput))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestOutput}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestOutput>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestOutput)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestOutput>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestOutput)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestOutput>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestOutput)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestOutput\" text=\"ITestOutput\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestOutput\" text=\"ITestOutput\"/>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 606,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestOutput"
          },
          {
            "lang": "vb",
            "value": "HandleTestOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestOutput"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput*\" text=\"HandleTestOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestOutput*\" text=\"HandleTestOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": null,
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestPassed})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestPassed(MessageHandlerArgs<ITestPassed>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestPassed(MessageHandlerArgs(Of ITestPassed))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestPassed(MessageHandlerArgs<ITestPassed>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestPassed(MessageHandlerArgs(Of ITestPassed))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestPassed>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestPassed))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestPassed})\" text=\"HandleTestPassed(MessageHandlerArgs&lt;ITestPassed&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestPassed})\" text=\"HandleTestPassed(MessageHandlerArgs&lt;ITestPassed&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestPassed(MessageHandlerArgs<ITestPassed> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestPassed(args As MessageHandlerArgs(Of ITestPassed))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestPassed}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestPassed>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestPassed)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestPassed>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestPassed)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestPassed>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestPassed)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestPassed\" text=\"ITestPassed\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestPassed\" text=\"ITestPassed\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestPassed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 627,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestPassed"
          },
          {
            "lang": "vb",
            "value": "HandleTestPassed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestPassed"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestPassed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed*\" text=\"HandleTestPassed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestPassed*\" text=\"HandleTestPassed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestPassed\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestSkipped})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestSkipped(MessageHandlerArgs<ITestSkipped>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestSkipped(MessageHandlerArgs(Of ITestSkipped))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestSkipped(MessageHandlerArgs<ITestSkipped>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestSkipped(MessageHandlerArgs(Of ITestSkipped))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestSkipped>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestSkipped))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestSkipped})\" text=\"HandleTestSkipped(MessageHandlerArgs&lt;ITestSkipped&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestSkipped})\" text=\"HandleTestSkipped(MessageHandlerArgs&lt;ITestSkipped&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestSkipped(MessageHandlerArgs<ITestSkipped> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestSkipped(args As MessageHandlerArgs(Of ITestSkipped))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestSkipped}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestSkipped>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestSkipped)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestSkipped>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestSkipped)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestSkipped>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestSkipped)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestSkipped\" text=\"ITestSkipped\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestSkipped\" text=\"ITestSkipped\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestSkipped",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 653,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestSkipped"
          },
          {
            "lang": "vb",
            "value": "HandleTestSkipped"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestSkipped"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestSkipped"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped*\" text=\"HandleTestSkipped\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestSkipped*\" text=\"HandleTestSkipped\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestSkipped\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestStarting})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "HandleTestStarting(MessageHandlerArgs<ITestStarting>)"
        },
        {
          "lang": "vb",
          "value": "HandleTestStarting(MessageHandlerArgs(Of ITestStarting))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestStarting(MessageHandlerArgs<ITestStarting>)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.HandleTestStarting(MessageHandlerArgs(Of ITestStarting))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting(Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestStarting>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting(Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestStarting))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestStarting})\" text=\"HandleTestStarting(MessageHandlerArgs&lt;ITestStarting&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting(Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestStarting})\" text=\"HandleTestStarting(MessageHandlerArgs&lt;ITestStarting&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void HandleTestStarting(MessageHandlerArgs<ITestStarting> args)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub HandleTestStarting(args As MessageHandlerArgs(Of ITestStarting))"
          }
        ],
        "parameters": [
          {
            "id": "args",
            "type": {
              "uid": "Xunit.Runner.Common.MessageHandlerArgs{Xunit.Sdk.ITestStarting}",
              "definition": "Xunit.Runner.Common.MessageHandlerArgs`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestStarting)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MessageHandlerArgs<ITestStarting>"
                },
                {
                  "lang": "vb",
                  "value": "MessageHandlerArgs(Of ITestStarting)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs<Xunit.Sdk.ITestStarting>"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.MessageHandlerArgs(Of Xunit.Sdk.ITestStarting)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>&lt;<xref uid=\"Xunit.Sdk.ITestStarting\" text=\"ITestStarting\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.MessageHandlerArgs-1.html\">MessageHandlerArgs</a>(Of <xref uid=\"Xunit.Sdk.ITestStarting\" text=\"ITestStarting\"/>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An object that contains the event data.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "HandleTestStarting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 674,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting*",
        "name": [
          {
            "lang": "csharp",
            "value": "HandleTestStarting"
          },
          {
            "lang": "vb",
            "value": "HandleTestStarting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestStarting"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.HandleTestStarting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting*\" text=\"HandleTestStarting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.HandleTestStarting*\" text=\"HandleTestStarting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Called when <xref href=\"Xunit.Sdk.ITestStarting\" data-throw-if-not-resolved=\"false\"></xref> is raised.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LogError(IErrorMetadata, string)"
        },
        {
          "lang": "vb",
          "value": "LogError(IErrorMetadata, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.LogError(IErrorMetadata, string)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.LogError(IErrorMetadata, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String)\" text=\"LogError(IErrorMetadata, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String)\" text=\"LogError(IErrorMetadata, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void LogError(IErrorMetadata errorMetadata, string failureType)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub LogError(errorMetadata As IErrorMetadata, failureType As String)"
          }
        ],
        "parameters": [
          {
            "id": "errorMetadata",
            "type": {
              "uid": "Xunit.Sdk.IErrorMetadata",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "IErrorMetadata"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "IErrorMetadata"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IErrorMetadata"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IErrorMetadata\" text=\"IErrorMetadata\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IErrorMetadata\" text=\"IErrorMetadata\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The failure information</p>\n"
          },
          {
            "id": "failureType",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The type of the failure</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LogError",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 152,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*",
        "name": [
          {
            "lang": "csharp",
            "value": "LogError"
          },
          {
            "lang": "vb",
            "value": "LogError"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.LogError"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.LogError"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*\" text=\"LogError\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*\" text=\"LogError\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Logs an error message to the logger.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String,System.Object[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LogError(IErrorMetadata, string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "LogError(IErrorMetadata, String, ParamArray Object())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.LogError(IErrorMetadata, string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.LogError(IErrorMetadata, String, ParamArray Object())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata, string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata, String, ParamArray Object())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String,System.Object[])\" text=\"LogError(IErrorMetadata, string, params object?[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError(Xunit.Sdk.IErrorMetadata,System.String,System.Object[])\" text=\"LogError(IErrorMetadata, string, params object?[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void LogError(IErrorMetadata errorMetadata, string failureTypeFormat, params object?[] args)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub LogError(errorMetadata As IErrorMetadata, failureTypeFormat As String, ParamArray args As Object())"
          }
        ],
        "parameters": [
          {
            "id": "errorMetadata",
            "type": {
              "uid": "Xunit.Sdk.IErrorMetadata",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "IErrorMetadata"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "IErrorMetadata"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IErrorMetadata"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IErrorMetadata"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IErrorMetadata\" text=\"IErrorMetadata\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IErrorMetadata\" text=\"IErrorMetadata\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The failure information</p>\n"
          },
          {
            "id": "failureTypeFormat",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The type of the failure, in message format</p>\n"
          },
          {
            "id": "args",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The arguments to format <code class=\"paramref\">failureTypeFormat</code> with</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LogError",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 178,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*",
        "name": [
          {
            "lang": "csharp",
            "value": "LogError"
          },
          {
            "lang": "vb",
            "value": "LogError"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.LogError"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.LogError"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*\" text=\"LogError\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogError*\" text=\"LogError\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Logs an error message to the logger.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput(Xunit.Runner.Common.StackFrameInfo,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LogOutput(StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "LogOutput(StackFrameInfo, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.LogOutput(StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.LogOutput(StackFrameInfo, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput(Xunit.Runner.Common.StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput(Xunit.Runner.Common.StackFrameInfo, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput(Xunit.Runner.Common.StackFrameInfo,System.String)\" text=\"LogOutput(StackFrameInfo, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput(Xunit.Runner.Common.StackFrameInfo,System.String)\" text=\"LogOutput(StackFrameInfo, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void LogOutput(StackFrameInfo frameInfo, string? output)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub LogOutput(frameInfo As StackFrameInfo, output As String)"
          }
        ],
        "parameters": [
          {
            "id": "frameInfo",
            "type": {
              "uid": "Xunit.Runner.Common.StackFrameInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                }
              ]
            }
          },
          {
            "id": "output",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LogOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 204,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "LogOutput"
          },
          {
            "lang": "vb",
            "value": "LogOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.LogOutput"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.LogOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput*\" text=\"LogOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogOutput*\" text=\"LogOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Logs test output to the logger.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace(Xunit.Runner.Common.StackFrameInfo,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LogStackTrace(StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "LogStackTrace(StackFrameInfo, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.LogStackTrace(StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.LogStackTrace(StackFrameInfo, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace(Xunit.Runner.Common.StackFrameInfo, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace(Xunit.Runner.Common.StackFrameInfo, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace(Xunit.Runner.Common.StackFrameInfo,System.String)\" text=\"LogStackTrace(StackFrameInfo, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace(Xunit.Runner.Common.StackFrameInfo,System.String)\" text=\"LogStackTrace(StackFrameInfo, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void LogStackTrace(StackFrameInfo frameInfo, string? stackTrace)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub LogStackTrace(frameInfo As StackFrameInfo, stackTrace As String)"
          }
        ],
        "parameters": [
          {
            "id": "frameInfo",
            "type": {
              "uid": "Xunit.Runner.Common.StackFrameInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                }
              ]
            }
          },
          {
            "id": "stackTrace",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LogStackTrace",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 188,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace*",
        "name": [
          {
            "lang": "csharp",
            "value": "LogStackTrace"
          },
          {
            "lang": "vb",
            "value": "LogStackTrace"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.LogStackTrace"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.LogStackTrace"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace*\" text=\"LogStackTrace\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogStackTrace*\" text=\"LogStackTrace\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Logs a stack trace to the logger.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings(Xunit.Runner.Common.StackFrameInfo,System.String[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LogWarnings(StackFrameInfo, string[]?)"
        },
        {
          "lang": "vb",
          "value": "LogWarnings(StackFrameInfo, String())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.LogWarnings(StackFrameInfo, string[]?)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.LogWarnings(StackFrameInfo, String())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings(Xunit.Runner.Common.StackFrameInfo, string[]?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings(Xunit.Runner.Common.StackFrameInfo, String())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings(Xunit.Runner.Common.StackFrameInfo,System.String[])\" text=\"LogWarnings(StackFrameInfo, string[]?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings(Xunit.Runner.Common.StackFrameInfo,System.String[])\" text=\"LogWarnings(StackFrameInfo, string[]?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual void LogWarnings(StackFrameInfo frameInfo, string[]? warnings)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Sub LogWarnings(frameInfo As StackFrameInfo, warnings As String())"
          }
        ],
        "parameters": [
          {
            "id": "frameInfo",
            "type": {
              "uid": "Xunit.Runner.Common.StackFrameInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "StackFrameInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.StackFrameInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.StackFrameInfo\" text=\"StackFrameInfo\"/>"
                }
              ]
            }
          },
          {
            "id": "warnings",
            "type": {
              "uid": "System.String[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string[]"
                },
                {
                  "lang": "vb",
                  "value": "String()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>()"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LogWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 225,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "LogWarnings"
          },
          {
            "lang": "vb",
            "value": "LogWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.LogWarnings"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.LogWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings*\" text=\"LogWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.LogWarnings*\" text=\"LogWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Logs warnings to the logger.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Logger"
        },
        {
          "lang": "vb",
          "value": "Logger"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.Logger"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.Logger"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger\" text=\"Logger\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger\" text=\"Logger\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected IRunnerLogger Logger { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property Logger As IRunnerLogger"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.IRunnerLogger",
            "name": [
              {
                "lang": "csharp",
                "value": "IRunnerLogger"
              },
              {
                "lang": "vb",
                "value": "IRunnerLogger"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IRunnerLogger"
              },
              {
                "lang": "vb",
                "value": "IRunnerLogger"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.IRunnerLogger"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.IRunnerLogger"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Logger",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 81,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger*",
        "name": [
          {
            "lang": "csharp",
            "value": "Logger"
          },
          {
            "lang": "vb",
            "value": "Logger"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.Logger"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.Logger"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger*\" text=\"Logger\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.Logger*\" text=\"Logger\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Get the logger used to report messages.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MetadataCache"
        },
        {
          "lang": "vb",
          "value": "MetadataCache"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.MetadataCache"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.MetadataCache"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache\" text=\"MetadataCache\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache\" text=\"MetadataCache\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected MessageMetadataCache MetadataCache { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property MetadataCache As MessageMetadataCache"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.MessageMetadataCache",
            "name": [
              {
                "lang": "csharp",
                "value": "MessageMetadataCache"
              },
              {
                "lang": "vb",
                "value": "MessageMetadataCache"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "MessageMetadataCache"
              },
              {
                "lang": "vb",
                "value": "MessageMetadataCache"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.MessageMetadataCache"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.MessageMetadataCache"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.MessageMetadataCache\" text=\"MessageMetadataCache\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.MessageMetadataCache\" text=\"MessageMetadataCache\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MetadataCache",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 86,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache*",
        "name": [
          {
            "lang": "csharp",
            "value": "MetadataCache"
          },
          {
            "lang": "vb",
            "value": "MetadataCache"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.MetadataCache"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.MetadataCache"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache*\" text=\"MetadataCache\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.MetadataCache*\" text=\"MetadataCache\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Gets the metadata cache.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary(Xunit.Runner.Common.IRunnerLogger,Xunit.Runner.Common.TestExecutionSummaries)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)"
        },
        {
          "lang": "vb",
          "value": "WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DefaultRunnerReporterMessageHandler.WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)"
        },
        {
          "lang": "vb",
          "value": "DefaultRunnerReporterMessageHandler.WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary(Xunit.Runner.Common.IRunnerLogger, Xunit.Runner.Common.TestExecutionSummaries)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary(Xunit.Runner.Common.IRunnerLogger, Xunit.Runner.Common.TestExecutionSummaries)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary(Xunit.Runner.Common.IRunnerLogger,Xunit.Runner.Common.TestExecutionSummaries)\" text=\"WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary(Xunit.Runner.Common.IRunnerLogger,Xunit.Runner.Common.TestExecutionSummaries)\" text=\"WriteDefaultSummary(IRunnerLogger, TestExecutionSummaries)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void WriteDefaultSummary(IRunnerLogger logger, TestExecutionSummaries summaries)"
          },
          {
            "lang": "vb",
            "value": "Public Sub WriteDefaultSummary(logger As IRunnerLogger, summaries As TestExecutionSummaries)"
          }
        ],
        "parameters": [
          {
            "id": "logger",
            "type": {
              "uid": "Xunit.Runner.Common.IRunnerLogger",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "IRunnerLogger"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "IRunnerLogger"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.IRunnerLogger"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.IRunnerLogger"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.IRunnerLogger\" text=\"IRunnerLogger\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The logger used to send result messages to.</p>\n"
          },
          {
            "id": "summaries",
            "type": {
              "uid": "Xunit.Runner.Common.TestExecutionSummaries",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TestExecutionSummaries"
                },
                {
                  "lang": "vb",
                  "value": "TestExecutionSummaries"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TestExecutionSummaries"
                },
                {
                  "lang": "vb",
                  "value": "TestExecutionSummaries"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.TestExecutionSummaries"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.TestExecutionSummaries"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.TestExecutionSummaries\" text=\"TestExecutionSummaries\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.TestExecutionSummaries\" text=\"TestExecutionSummaries\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">The execution summary to display.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "WriteDefaultSummary",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
        "startLine": 687,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary*",
        "name": [
          {
            "lang": "csharp",
            "value": "WriteDefaultSummary"
          },
          {
            "lang": "vb",
            "value": "WriteDefaultSummary"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "DefaultRunnerReporterMessageHandler.WriteDefaultSummary"
          },
          {
            "lang": "vb",
            "value": "DefaultRunnerReporterMessageHandler.WriteDefaultSummary"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary*\" text=\"WriteDefaultSummary\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.WriteDefaultSummary*\" text=\"WriteDefaultSummary\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">Writes the default summary to the given logger. Can be used by other reporters who also wish to write the\nstandard summary information.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "DefaultRunnerReporterMessageHandler"
    },
    {
      "lang": "vb",
      "value": "DefaultRunnerReporterMessageHandler"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "DefaultRunnerReporterMessageHandler"
    },
    {
      "lang": "vb",
      "value": "DefaultRunnerReporterMessageHandler"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.Common.DefaultRunnerReporterMessageHandler"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "DefaultRunnerReporterMessageHandler",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Reporters/Builtin/DefaultRunnerReporterMessageHandler.cs",
    "startLine": 14,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml\" sourcestartlinenumber=\"1\">An implementation of <xref href=\"Xunit.Runner.Common.IRunnerReporterMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> that supports <xref href=\"Xunit.Runner.Common.DefaultRunnerReporter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class DefaultRunnerReporterMessageHandler : TestMessageSink, IRunnerReporterMessageHandler, IMessageSink, IAsyncDisposable"
      },
      {
        "lang": "vb",
        "value": "Public Class DefaultRunnerReporterMessageHandler Inherits TestMessageSink Implements IRunnerReporterMessageHandler, IMessageSink, IAsyncDisposable"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    },
    {
      "uid": "Xunit.Runner.Common.AggregateMessageSink",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common",
      "href": "Xunit.Runner.Common.AggregateMessageSink.html",
      "name": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.AggregateMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.AggregateMessageSink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.AggregateMessageSink\" text=\"AggregateMessageSink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.AggregateMessageSink\" text=\"AggregateMessageSink\"/>"
        }
      ],
      "level": 0,
      "index": 1
    },
    {
      "uid": "Xunit.Runner.Common.TestMessageSink",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common",
      "href": "Xunit.Runner.Common.TestMessageSink.html",
      "name": [
        {
          "lang": "csharp",
          "value": "TestMessageSink"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestMessageSink"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestMessageSink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink\" text=\"TestMessageSink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink\" text=\"TestMessageSink\"/>"
        }
      ],
      "level": 0,
      "index": 2
    }
  ],
  "derivedClasses": [
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.AppVeyorReporterMessageHandler\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.AppVeyorReporterMessageHandler\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 4
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.QuietReporterMessageHandler\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.QuietReporterMessageHandler\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 4
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TeamCityReporterMessageHandler\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TeamCityReporterMessageHandler\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 4
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.VerboseReporterMessageHandler\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.VerboseReporterMessageHandler\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 4
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.VstsReporterMessageHandler\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.VstsReporterMessageHandler\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 4
    }
  ],
  "level": 3,
  "implements": [
    {
      "uid": "Xunit.Runner.Common.IRunnerReporterMessageHandler",
      "name": [
        {
          "lang": "csharp",
          "value": "IRunnerReporterMessageHandler"
        },
        {
          "lang": "vb",
          "value": "IRunnerReporterMessageHandler"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IRunnerReporterMessageHandler"
        },
        {
          "lang": "vb",
          "value": "IRunnerReporterMessageHandler"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.IRunnerReporterMessageHandler"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.IRunnerReporterMessageHandler"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.IRunnerReporterMessageHandler\" text=\"IRunnerReporterMessageHandler\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.IRunnerReporterMessageHandler\" text=\"IRunnerReporterMessageHandler\"/>"
        }
      ]
    },
    {
      "uid": "Xunit.Sdk.IMessageSink",
      "name": [
        {
          "lang": "csharp",
          "value": "IMessageSink"
        },
        {
          "lang": "vb",
          "value": "IMessageSink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IMessageSink"
        },
        {
          "lang": "vb",
          "value": "IMessageSink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IMessageSink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
        }
      ]
    },
    {
      "uid": "System.IAsyncDisposable",
      "name": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "System.IAsyncDisposable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "Xunit.Runner.Common.TestMessageSink.Diagnostics",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestMessageSink",
      "href": "Xunit.Runner.Common.TestMessageSink.html#Xunit_Runner_Common_TestMessageSink_Diagnostics",
      "name": [
        {
          "lang": "csharp",
          "value": "Diagnostics"
        },
        {
          "lang": "vb",
          "value": "Diagnostics"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestMessageSink.Diagnostics"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink.Diagnostics"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestMessageSink.Diagnostics"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestMessageSink.Diagnostics"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Diagnostics\" text=\"Diagnostics\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Diagnostics\" text=\"Diagnostics\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestMessageSink.yml\" sourcestartlinenumber=\"1\">Gets a list of diagnostics events that can be subscribed to.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.TestMessageSink.Discovery",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestMessageSink",
      "href": "Xunit.Runner.Common.TestMessageSink.html#Xunit_Runner_Common_TestMessageSink_Discovery",
      "name": [
        {
          "lang": "csharp",
          "value": "Discovery"
        },
        {
          "lang": "vb",
          "value": "Discovery"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestMessageSink.Discovery"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink.Discovery"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestMessageSink.Discovery"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestMessageSink.Discovery"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Discovery\" text=\"Discovery\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Discovery\" text=\"Discovery\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestMessageSink.yml\" sourcestartlinenumber=\"1\">Gets a list of discovery events that can be subscribed to.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.TestMessageSink.Execution",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestMessageSink",
      "href": "Xunit.Runner.Common.TestMessageSink.html#Xunit_Runner_Common_TestMessageSink_Execution",
      "name": [
        {
          "lang": "csharp",
          "value": "Execution"
        },
        {
          "lang": "vb",
          "value": "Execution"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestMessageSink.Execution"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink.Execution"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestMessageSink.Execution"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestMessageSink.Execution"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Execution\" text=\"Execution\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Execution\" text=\"Execution\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestMessageSink.yml\" sourcestartlinenumber=\"1\">Gets a list of execution events that can be subscribed to.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.TestMessageSink.Runner",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestMessageSink",
      "href": "Xunit.Runner.Common.TestMessageSink.html#Xunit_Runner_Common_TestMessageSink_Runner",
      "name": [
        {
          "lang": "csharp",
          "value": "Runner"
        },
        {
          "lang": "vb",
          "value": "Runner"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestMessageSink.Runner"
        },
        {
          "lang": "vb",
          "value": "TestMessageSink.Runner"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestMessageSink.Runner"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestMessageSink.Runner"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Runner\" text=\"Runner\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestMessageSink.Runner\" text=\"Runner\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestMessageSink.yml\" sourcestartlinenumber=\"1\">Gets a list of runner events that can be subscribed to.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.AggregateMessageSink.AggregatedSinks",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.AggregateMessageSink",
      "href": "Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_AggregatedSinks",
      "name": [
        {
          "lang": "csharp",
          "value": "AggregatedSinks"
        },
        {
          "lang": "vb",
          "value": "AggregatedSinks"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink.AggregatedSinks"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink.AggregatedSinks"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.AggregateMessageSink.AggregatedSinks"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.AggregateMessageSink.AggregatedSinks"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.AggregateMessageSink.AggregatedSinks\" text=\"AggregatedSinks\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.AggregateMessageSink.AggregatedSinks\" text=\"AggregatedSinks\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.AggregateMessageSink.yml\" sourcestartlinenumber=\"1\">The list of event dispatchers that are registered with the system.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.AggregateMessageSink.DisposeAsync",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.AggregateMessageSink",
      "href": "Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_DisposeAsync",
      "name": [
        {
          "lang": "csharp",
          "value": "DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "DisposeAsync()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink.DisposeAsync()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.AggregateMessageSink.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.AggregateMessageSink.DisposeAsync()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_DisposeAsync\">DisposeAsync</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_DisposeAsync\">DisposeAsync</a>()"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.AggregateMessageSink.yml\" sourcestartlinenumber=\"1\">Performs application-defined tasks associated with freeing, releasing, or\nresetting unmanaged resources asynchronously.</p>\n",
      "type": "method",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Runner.Common.AggregateMessageSink.GetOrCreateAggregatedSink``1({TDispatcher}@)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.AggregateMessageSink",
      "definition": "Xunit.Runner.Common.AggregateMessageSink.GetOrCreateAggregatedSink``1(``0@)",
      "href": "Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_GetOrCreateAggregatedSink__1___0__",
      "name": [
        {
          "lang": "csharp",
          "value": "GetOrCreateAggregatedSink<TDispatcher>(ref TDispatcher)"
        },
        {
          "lang": "vb",
          "value": "GetOrCreateAggregatedSink(Of TDispatcher)(TDispatcher)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink.GetOrCreateAggregatedSink<TDispatcher>(ref TDispatcher)"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink.GetOrCreateAggregatedSink(Of TDispatcher)(TDispatcher)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.AggregateMessageSink.GetOrCreateAggregatedSink<TDispatcher>(ref TDispatcher)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.AggregateMessageSink.GetOrCreateAggregatedSink(Of TDispatcher)(TDispatcher)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_GetOrCreateAggregatedSink__1___0__\">GetOrCreateAggregatedSink</a>&lt;TDispatcher&gt;(ref TDispatcher)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_GetOrCreateAggregatedSink__1___0__\">GetOrCreateAggregatedSink</a>(Of TDispatcher)(TDispatcher)"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.Runner.Common.AggregateMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)",
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.AggregateMessageSink",
      "href": "Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_OnMessage_Xunit_Sdk_IMessageSinkMessage_",
      "name": [
        {
          "lang": "csharp",
          "value": "OnMessage(IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "OnMessage(IMessageSinkMessage)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AggregateMessageSink.OnMessage(IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "AggregateMessageSink.OnMessage(IMessageSinkMessage)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.AggregateMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.AggregateMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_OnMessage_Xunit_Sdk_IMessageSinkMessage_\">OnMessage</a>(<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AggregateMessageSink.html#Xunit_Runner_Common_AggregateMessageSink_OnMessage_Xunit_Sdk_IMessageSinkMessage_\">OnMessage</a>(<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>)"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.AggregateMessageSink.yml\" sourcestartlinenumber=\"1\">Reports the presence of a message on the message bus. This method should\nnever throw exceptions.</p>\n",
      "type": "method",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Runner.Common.DefaultRunnerReporterMessageHandler.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}