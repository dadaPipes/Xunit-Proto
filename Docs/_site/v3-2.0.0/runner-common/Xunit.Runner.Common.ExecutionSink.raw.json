{
  "uid": "Xunit.Runner.Common.ExecutionSink",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.#ctor(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Sdk.ITestFrameworkDiscoveryOptions,Xunit.Sdk.ITestFrameworkExecutionOptions,Xunit.Runner.Common.AppDomainOption,System.Boolean,Xunit.Sdk.IMessageSink,Xunit.Runner.Common.ExecutionSinkOptions)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExecutionSink(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, bool, IMessageSink, ExecutionSinkOptions)"
        },
        {
          "lang": "vb",
          "value": "New(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, Boolean, IMessageSink, ExecutionSinkOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.ExecutionSink(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, bool, IMessageSink, ExecutionSinkOptions)"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.New(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, Boolean, IMessageSink, ExecutionSinkOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSink(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Runner.Common.AppDomainOption, bool, Xunit.Sdk.IMessageSink, Xunit.Runner.Common.ExecutionSinkOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.New(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Runner.Common.AppDomainOption, Boolean, Xunit.Sdk.IMessageSink, Xunit.Runner.Common.ExecutionSinkOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.#ctor(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Sdk.ITestFrameworkDiscoveryOptions,Xunit.Sdk.ITestFrameworkExecutionOptions,Xunit.Runner.Common.AppDomainOption,System.Boolean,Xunit.Sdk.IMessageSink,Xunit.Runner.Common.ExecutionSinkOptions)\" text=\"ExecutionSink(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, bool, IMessageSink, ExecutionSinkOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.#ctor(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Sdk.ITestFrameworkDiscoveryOptions,Xunit.Sdk.ITestFrameworkExecutionOptions,Xunit.Runner.Common.AppDomainOption,System.Boolean,Xunit.Sdk.IMessageSink,Xunit.Runner.Common.ExecutionSinkOptions)\" text=\"ExecutionSink(XunitProjectAssembly, ITestFrameworkDiscoveryOptions, ITestFrameworkExecutionOptions, AppDomainOption, bool, IMessageSink, ExecutionSinkOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ExecutionSink(XunitProjectAssembly assembly, ITestFrameworkDiscoveryOptions discoveryOptions, ITestFrameworkExecutionOptions executionOptions, AppDomainOption appDomainOption, bool shadowCopy, IMessageSink innerSink, ExecutionSinkOptions options)"
          },
          {
            "lang": "vb",
            "value": "Public Sub New(assembly As XunitProjectAssembly, discoveryOptions As ITestFrameworkDiscoveryOptions, executionOptions As ITestFrameworkExecutionOptions, appDomainOption As AppDomainOption, shadowCopy As Boolean, innerSink As IMessageSink, options As ExecutionSinkOptions)"
          }
        ],
        "parameters": [
          {
            "id": "assembly",
            "type": {
              "uid": "Xunit.Runner.Common.XunitProjectAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The assembly under test.</p>\n"
          },
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The options used during test discovery.</p>\n"
          },
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The options used during test execution.</p>\n"
          },
          {
            "id": "appDomainOption",
            "type": {
              "uid": "Xunit.Runner.Common.AppDomainOption",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AppDomainOption"
                },
                {
                  "lang": "vb",
                  "value": "AppDomainOption"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AppDomainOption"
                },
                {
                  "lang": "vb",
                  "value": "AppDomainOption"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.AppDomainOption"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.AppDomainOption"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.AppDomainOption\" text=\"AppDomainOption\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.AppDomainOption\" text=\"AppDomainOption\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">A flag to indicate whether app domains are in use.</p>\n"
          },
          {
            "id": "shadowCopy",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">A flag to indicate whether shadow copying is in use.</p>\n"
          },
          {
            "id": "innerSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The inner sink to forward messages to (typically the reporter\nmessage handler, retrieved by calling <xref href=\"Xunit.Runner.Common.IRunnerReporter.CreateMessageHandler(Xunit.Runner.Common.IRunnerLogger%2cXunit.Sdk.IMessageSink)\" data-throw-if-not-resolved=\"false\"></xref>\non the runner reporter)</p>\n"
          },
          {
            "id": "options",
            "type": {
              "uid": "Xunit.Runner.Common.ExecutionSinkOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ExecutionSinkOptions"
                },
                {
                  "lang": "vb",
                  "value": "ExecutionSinkOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ExecutionSinkOptions"
                },
                {
                  "lang": "vb",
                  "value": "ExecutionSinkOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ExecutionSinkOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ExecutionSinkOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSinkOptions\" text=\"ExecutionSinkOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSinkOptions\" text=\"ExecutionSinkOptions\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The options to use for the execution sink</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": ".ctor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 52,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.#ctor*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExecutionSink"
          },
          {
            "lang": "vb",
            "value": "New"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.ExecutionSink"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.New"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSink"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.New"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.#ctor*\" text=\"ExecutionSink\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.#ctor*\" text=\"ExecutionSink\"/>"
          }
        ]
      },
      "level": 0,
      "type": "constructor",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">Initializes a new instance of the <xref href=\"Xunit.Runner.Common.ExecutionSink\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.Dispose",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Dispose()"
        },
        {
          "lang": "vb",
          "value": "Dispose()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.Dispose()"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.Dispose()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.Dispose()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.Dispose()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Dispose\" text=\"Dispose()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Dispose\" text=\"Dispose()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public virtual void Dispose()"
          },
          {
            "lang": "vb",
            "value": "Public Overridable Sub Dispose()"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Dispose",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 239,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.Dispose*",
        "name": [
          {
            "lang": "csharp",
            "value": "Dispose"
          },
          {
            "lang": "vb",
            "value": "Dispose"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.Dispose"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.Dispose"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.Dispose"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.Dispose"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Dispose*\" text=\"Dispose\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Dispose*\" text=\"Dispose\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.IDisposable.Dispose",
          "name": [
            {
              "lang": "csharp",
              "value": "Dispose()"
            },
            {
              "lang": "vb",
              "value": "Dispose()"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IDisposable.Dispose()"
            },
            {
              "lang": "vb",
              "value": "IDisposable.Dispose()"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.IDisposable.Dispose()"
            },
            {
              "lang": "vb",
              "value": "System.IDisposable.Dispose()"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.idisposable.dispose\">Dispose</a>()"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.idisposable.dispose\">Dispose</a>()"
            }
          ]
        }
      ],
      "type": "method",
      "summary": null,
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExecutionSummary"
        },
        {
          "lang": "vb",
          "value": "ExecutionSummary"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.ExecutionSummary"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.ExecutionSummary"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.ExecutionSummary\" text=\"ExecutionSummary\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.ExecutionSummary\" text=\"ExecutionSummary\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ExecutionSummary ExecutionSummary { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ExecutionSummary As ExecutionSummary"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.ExecutionSummary",
            "name": [
              {
                "lang": "csharp",
                "value": "ExecutionSummary"
              },
              {
                "lang": "vb",
                "value": "ExecutionSummary"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExecutionSummary"
              },
              {
                "lang": "vb",
                "value": "ExecutionSummary"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.ExecutionSummary"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.ExecutionSummary"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSummary\" text=\"ExecutionSummary\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSummary\" text=\"ExecutionSummary\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ExecutionSummary",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 84,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExecutionSummary"
          },
          {
            "lang": "vb",
            "value": "ExecutionSummary"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.ExecutionSummary"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.ExecutionSummary"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.ExecutionSummary"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.ExecutionSummary*\" text=\"ExecutionSummary\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.ExecutionSummary*\" text=\"ExecutionSummary\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": null,
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.Finished",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Finished"
        },
        {
          "lang": "vb",
          "value": "Finished"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.Finished"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.Finished"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.Finished"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.Finished"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Finished\" text=\"Finished\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Finished\" text=\"Finished\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ManualResetEvent Finished { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Finished As ManualResetEvent"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Threading.ManualResetEvent",
            "name": [
              {
                "lang": "csharp",
                "value": "ManualResetEvent"
              },
              {
                "lang": "vb",
                "value": "ManualResetEvent"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ManualResetEvent"
              },
              {
                "lang": "vb",
                "value": "ManualResetEvent"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.ManualResetEvent"
              },
              {
                "lang": "vb",
                "value": "System.Threading.ManualResetEvent"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Threading.ManualResetEvent\" text=\"ManualResetEvent\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Threading.ManualResetEvent\" text=\"ManualResetEvent\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Finished",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 87,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.Finished*",
        "name": [
          {
            "lang": "csharp",
            "value": "Finished"
          },
          {
            "lang": "vb",
            "value": "Finished"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.Finished"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.Finished"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.Finished"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.Finished"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Finished*\" text=\"Finished\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.Finished*\" text=\"Finished\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": null,
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "OnMessage(IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "OnMessage(IMessageSinkMessage)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.OnMessage(IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.OnMessage(IMessageSinkMessage)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)\" text=\"OnMessage(IMessageSinkMessage)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)\" text=\"OnMessage(IMessageSinkMessage)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool OnMessage(IMessageSinkMessage message)"
          },
          {
            "lang": "vb",
            "value": "Public Function OnMessage(message As IMessageSinkMessage) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "Xunit.Sdk.IMessageSinkMessage",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSinkMessage"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSinkMessage"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSinkMessage"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSinkMessage"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSinkMessage"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSinkMessage"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">The message from the message bus</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">Return <code>true</code> to continue running tests, or <code>false</code> to stop.</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "OnMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 761,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.OnMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "OnMessage"
          },
          {
            "lang": "vb",
            "value": "OnMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.OnMessage"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.OnMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.OnMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.OnMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.OnMessage*\" text=\"OnMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.OnMessage*\" text=\"OnMessage\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.Sdk.IMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)",
          "name": [
            {
              "lang": "csharp",
              "value": "OnMessage(IMessageSinkMessage)"
            },
            {
              "lang": "vb",
              "value": "OnMessage(IMessageSinkMessage)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IMessageSink.OnMessage(IMessageSinkMessage)"
            },
            {
              "lang": "vb",
              "value": "IMessageSink.OnMessage(IMessageSinkMessage)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.Sdk.IMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
            },
            {
              "lang": "vb",
              "value": "Xunit.Sdk.IMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.Sdk.IMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)\" text=\"OnMessage\"/>(<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>)"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.Sdk.IMessageSink.OnMessage(Xunit.Sdk.IMessageSinkMessage)\" text=\"OnMessage\"/>(<xref uid=\"Xunit.Sdk.IMessageSinkMessage\" text=\"IMessageSinkMessage\"/>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">Reports the presence of a message on the message bus. This method should\nnever throw exceptions.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.UtcNow",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "UtcNow"
        },
        {
          "lang": "vb",
          "value": "UtcNow"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.UtcNow"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.UtcNow"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.UtcNow"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.UtcNow"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.UtcNow\" text=\"UtcNow\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.UtcNow\" text=\"UtcNow\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual DateTimeOffset UtcNow { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable ReadOnly Property UtcNow As DateTimeOffset"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.DateTimeOffset",
            "name": [
              {
                "lang": "csharp",
                "value": "DateTimeOffset"
              },
              {
                "lang": "vb",
                "value": "DateTimeOffset"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "DateTimeOffset"
              },
              {
                "lang": "vb",
                "value": "DateTimeOffset"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.DateTimeOffset"
              },
              {
                "lang": "vb",
                "value": "System.DateTimeOffset"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.DateTimeOffset\" text=\"DateTimeOffset\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.DateTimeOffset\" text=\"DateTimeOffset\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "UtcNow",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 92,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.UtcNow*",
        "name": [
          {
            "lang": "csharp",
            "value": "UtcNow"
          },
          {
            "lang": "vb",
            "value": "UtcNow"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.UtcNow"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.UtcNow"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.UtcNow"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.UtcNow"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.UtcNow*\" text=\"UtcNow\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.UtcNow*\" text=\"UtcNow\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">Returns the current time in UTC. Overrideable for testing purposes.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent(System.Int32)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.ExecutionSink",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "WaitForStopEvent(int)"
        },
        {
          "lang": "vb",
          "value": "WaitForStopEvent(Integer)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExecutionSink.WaitForStopEvent(int)"
        },
        {
          "lang": "vb",
          "value": "ExecutionSink.WaitForStopEvent(Integer)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent(int)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent(Integer)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.WaitForStopEvent(System.Int32)\" text=\"WaitForStopEvent(int)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.WaitForStopEvent(System.Int32)\" text=\"WaitForStopEvent(int)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual bool WaitForStopEvent(int millionsecondsDelay)"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function WaitForStopEvent(millionsecondsDelay As Integer) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "millionsecondsDelay",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "WaitForStopEvent",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
        "startLine": 880,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent*",
        "name": [
          {
            "lang": "csharp",
            "value": "WaitForStopEvent"
          },
          {
            "lang": "vb",
            "value": "WaitForStopEvent"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExecutionSink.WaitForStopEvent"
          },
          {
            "lang": "vb",
            "value": "ExecutionSink.WaitForStopEvent"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.ExecutionSink.WaitForStopEvent"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.WaitForStopEvent*\" text=\"WaitForStopEvent\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.ExecutionSink.WaitForStopEvent*\" text=\"WaitForStopEvent\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">Performs a Task-safe delay. Overrideable for testing purposes.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ExecutionSink"
    },
    {
      "lang": "vb",
      "value": "ExecutionSink"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ExecutionSink"
    },
    {
      "lang": "vb",
      "value": "ExecutionSink"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.Common.ExecutionSink"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.Common.ExecutionSink"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "ExecutionSink",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Sinks/ExecutionSink.cs",
    "startLine": 19,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml\" sourcestartlinenumber=\"1\">This is the execution sink which most runners will use, which can perform several operations\n(including recording XML results, detecting long running tests, failing skipped tests,\nfailing tests with warnings, and converting the top-level discovery and execution messages\ninto their runner counterparts).</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class ExecutionSink : IMessageSink, IDisposable"
      },
      {
        "lang": "vb",
        "value": "Public Class ExecutionSink Implements IMessageSink, IDisposable"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "implements": [
    {
      "uid": "Xunit.Sdk.IMessageSink",
      "name": [
        {
          "lang": "csharp",
          "value": "IMessageSink"
        },
        {
          "lang": "vb",
          "value": "IMessageSink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IMessageSink"
        },
        {
          "lang": "vb",
          "value": "IMessageSink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IMessageSink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
        }
      ]
    },
    {
      "uid": "System.IDisposable",
      "name": [
        {
          "lang": "csharp",
          "value": "IDisposable"
        },
        {
          "lang": "vb",
          "value": "IDisposable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDisposable"
        },
        {
          "lang": "vb",
          "value": "IDisposable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.IDisposable"
        },
        {
          "lang": "vb",
          "value": "System.IDisposable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.IDisposable\" text=\"IDisposable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.IDisposable\" text=\"IDisposable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Runner.Common.ExecutionSink.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}