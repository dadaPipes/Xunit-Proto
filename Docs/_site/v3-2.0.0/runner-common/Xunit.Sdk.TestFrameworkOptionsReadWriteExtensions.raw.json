{
  "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetAssertEquivalentMaxDepth(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssertEquivalentMaxDepth(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssertEquivalentMaxDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 362,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "GetAssertEquivalentMaxDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth*\" text=\"GetAssertEquivalentMaxDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetAssertEquivalentMaxDepth*\" text=\"GetAssertEquivalentMaxDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a max recursive object depth for comparisons done with <code>Assert.Equivalent</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCulture(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetCulture(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetCulture(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetCulture(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string? GetCulture(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCulture(discoveryOptions As ITestFrameworkDiscoveryOptions) As String"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCulture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 23,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCulture"
          },
          {
            "lang": "vb",
            "value": "GetCulture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*\" text=\"GetCulture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*\" text=\"GetCulture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the culture to use for discovering tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCulture(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetCulture(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetCulture(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetCulture(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string? GetCulture(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCulture(executionOptions As ITestFrameworkExecutionOptions) As String"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCulture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 376,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCulture"
          },
          {
            "lang": "vb",
            "value": "GetCulture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetCulture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*\" text=\"GetCulture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetCulture*\" text=\"GetCulture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the culture to use for running tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetDiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetDiagnosticMessages(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDiagnosticMessages(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 33,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "GetDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*\" text=\"GetDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*\" text=\"GetDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetDiagnosticMessages(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDiagnosticMessages(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 386,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "GetDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*\" text=\"GetDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessages*\" text=\"GetDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetDiagnosticMessagesOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDiagnosticMessagesOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 44,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetDiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*\" text=\"GetDiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*\" text=\"GetDiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted. If the flag is not\nset, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetDiagnosticMessagesOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDiagnosticMessagesOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 397,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetDiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*\" text=\"GetDiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDiagnosticMessagesOrDefault*\" text=\"GetDiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted. If the flag is not\npresent, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDisableParallelization(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDisableParallelization(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDisableParallelization(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDisableParallelization(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetDisableParallelization(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDisableParallelization(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDisableParallelization",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 403,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "GetDisableParallelization"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization*\" text=\"GetDisableParallelization\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelization*\" text=\"GetDisableParallelization\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to disable parallelization.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetDisableParallelizationOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetDisableParallelizationOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetDisableParallelizationOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetDisableParallelizationOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 414,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetDisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetDisableParallelizationOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault*\" text=\"GetDisableParallelizationOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetDisableParallelizationOrDefault*\" text=\"GetDisableParallelizationOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to disable parallelization. If the flag is not present, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetExplicitOption(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetExplicitOption(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetExplicitOption(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetExplicitOption(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ExplicitOption? GetExplicitOption(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetExplicitOption(executionOptions As ITestFrameworkExecutionOptions) As ExplicitOption?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ExplicitOption}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetExplicitOption",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 420,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "GetExplicitOption"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOption"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption*\" text=\"GetExplicitOption\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOption*\" text=\"GetExplicitOption\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that indicates how explicit tests should be handled.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetExplicitOptionOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ExplicitOption GetExplicitOptionOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetExplicitOptionOrDefault(executionOptions As ITestFrameworkExecutionOptions) As ExplicitOption"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ExplicitOption",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetExplicitOptionOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 432,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetExplicitOptionOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault*\" text=\"GetExplicitOptionOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetExplicitOptionOrDefault*\" text=\"GetExplicitOptionOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that indicates how explicit tests should be handled. If the flag is not present,\nreturns the default value (<xref href=\"Xunit.Sdk.ExplicitOption.Off\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFailSkips(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetFailSkips(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkips(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkips(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailSkips(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailSkips(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetFailSkips(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetFailSkips(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFailSkips",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 438,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFailSkips"
          },
          {
            "lang": "vb",
            "value": "GetFailSkips"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkips"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkips"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips*\" text=\"GetFailSkips\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkips*\" text=\"GetFailSkips\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail skipped tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailSkipsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetFailSkipsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetFailSkipsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFailSkipsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 449,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetFailSkipsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault*\" text=\"GetFailSkipsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailSkipsOrDefault*\" text=\"GetFailSkipsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail skipped tests. If the flag is not present, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailTestsWithWarnings(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetFailTestsWithWarnings(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetFailTestsWithWarnings(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFailTestsWithWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 455,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "GetFailTestsWithWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings*\" text=\"GetFailTestsWithWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarnings*\" text=\"GetFailTestsWithWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail passing tests with warnings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetFailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetFailTestsWithWarningsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetFailTestsWithWarningsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFailTestsWithWarningsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 466,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetFailTestsWithWarningsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault*\" text=\"GetFailTestsWithWarningsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetFailTestsWithWarningsOrDefault*\" text=\"GetFailTestsWithWarningsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail passing tests with warning. If the flag is not present, returns\nthe default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetIncludeSourceInformation(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetIncludeSourceInformation(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetIncludeSourceInformation(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetIncludeSourceInformation",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 52,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "GetIncludeSourceInformation"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation*\" text=\"GetIncludeSourceInformation\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformation*\" text=\"GetIncludeSourceInformation\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether discovered test cases should include source information.\nNote that not all runners have access to source information, so this flag does not guarantee\nthat source information will be provided.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetIncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetIncludeSourceInformationOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetIncludeSourceInformationOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetIncludeSourceInformationOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 65,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetIncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetIncludeSourceInformationOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault*\" text=\"GetIncludeSourceInformationOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetIncludeSourceInformationOrDefault*\" text=\"GetIncludeSourceInformationOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether discovered test cases should include source information.\nNote that not all runners have access to source information, so this flag does not guarantee\nthat source information will be provided. If the flag is not present, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetInternalDiagnosticMessages(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetInternalDiagnosticMessages(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetInternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 71,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "GetInternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*\" text=\"GetInternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*\" text=\"GetInternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether internal diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetInternalDiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetInternalDiagnosticMessages(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetInternalDiagnosticMessages(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetInternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 472,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "GetInternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*\" text=\"GetInternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessages*\" text=\"GetInternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether internal diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetInternalDiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetInternalDiagnosticMessagesOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetInternalDiagnosticMessagesOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetInternalDiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 82,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*\" text=\"GetInternalDiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*\" text=\"GetInternalDiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether internal diagnostic messages will be emitted. If the flag is not\nset, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetInternalDiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetInternalDiagnosticMessagesOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetInternalDiagnosticMessagesOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetInternalDiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 483,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*\" text=\"GetInternalDiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetInternalDiagnosticMessagesOrDefault*\" text=\"GetInternalDiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether internal diagnostic messages will be emitted. If the flag is not\npresent, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMaxParallelThreads(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMaxParallelThreads(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetMaxParallelThreads(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetMaxParallelThreads(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetMaxParallelThreads(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMaxParallelThreads(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMaxParallelThreads",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 489,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "GetMaxParallelThreads"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads*\" text=\"GetMaxParallelThreads\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreads*\" text=\"GetMaxParallelThreads\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of threads to use when running tests in parallel.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetMaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int GetMaxParallelThreadsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMaxParallelThreadsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Integer"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMaxParallelThreadsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 501,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetMaxParallelThreadsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault*\" text=\"GetMaxParallelThreadsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMaxParallelThreadsOrDefault*\" text=\"GetMaxParallelThreadsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of threads to use when running tests in parallel. If set to 0 (or not set),\nthe value of <xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref> is used; if set to a value less\nthan 0, does not limit the number of threads.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodDisplay(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMethodDisplay(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplay(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplay(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplay? GetMethodDisplay(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodDisplay(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplay?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplay}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodDisplay",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 88,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "GetMethodDisplay"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay*\" text=\"GetMethodDisplay\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplay*\" text=\"GetMethodDisplay\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOptions(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplayOptions? GetMethodDisplayOptions(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodDisplayOptions(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplayOptions?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodDisplayOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 106,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "GetMethodDisplayOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions*\" text=\"GetMethodDisplayOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptions*\" text=\"GetMethodDisplayOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format options for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplayOptions GetMethodDisplayOptionsOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodDisplayOptionsOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplayOptions"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplayOptions",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodDisplayOptionsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 118,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetMethodDisplayOptionsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault*\" text=\"GetMethodDisplayOptionsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOptionsOrDefault*\" text=\"GetMethodDisplayOptionsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format options for test methods. If the flag is not present,\nreturns the default value (<xref href=\"Xunit.Sdk.TestMethodDisplayOptions.None\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetMethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplay GetMethodDisplayOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodDisplayOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplay"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplay",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodDisplayOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 100,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetMethodDisplayOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault*\" text=\"GetMethodDisplayOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetMethodDisplayOrDefault*\" text=\"GetMethodDisplayOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format for test methods. If the flag is not present,\nreturns the default value (<xref href=\"Xunit.Sdk.TestMethodDisplay.ClassAndMethod\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetParallelAlgorithm(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetParallelAlgorithm(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetParallelAlgorithm(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetParallelAlgorithm(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ParallelAlgorithm? GetParallelAlgorithm(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetParallelAlgorithm(executionOptions As ITestFrameworkExecutionOptions) As ParallelAlgorithm?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ParallelAlgorithm}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetParallelAlgorithm",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 516,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "GetParallelAlgorithm"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm*\" text=\"GetParallelAlgorithm\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithm*\" text=\"GetParallelAlgorithm\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the parallel algorithm to be used.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ParallelAlgorithm GetParallelAlgorithmOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetParallelAlgorithmOrDefault(executionOptions As ITestFrameworkExecutionOptions) As ParallelAlgorithm"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ParallelAlgorithm",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetParallelAlgorithmOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 528,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetParallelAlgorithmOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault*\" text=\"GetParallelAlgorithmOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetParallelAlgorithmOrDefault*\" text=\"GetParallelAlgorithmOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the parallel algorithm to be used. If the flag is not present, return the default\nvalue (<xref href=\"Xunit.Sdk.ParallelAlgorithm.Conservative\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPreEnumerateTheories(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetPreEnumerateTheories(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPreEnumerateTheories(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPreEnumerateTheories",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 126,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "GetPreEnumerateTheories"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories*\" text=\"GetPreEnumerateTheories\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheories*\" text=\"GetPreEnumerateTheories\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether theories are pre-enumerated. If they enabled, then the\ndiscovery system will return a test case for each row of test data; they are disabled, then the\ndiscovery system will return a single test case for the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetPreEnumerateTheoriesOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPreEnumerateTheoriesOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPreEnumerateTheoriesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 139,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetPreEnumerateTheoriesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault*\" text=\"GetPreEnumerateTheoriesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPreEnumerateTheoriesOrDefault*\" text=\"GetPreEnumerateTheoriesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether theories are pre-enumerated. If they enabled, then the\ndiscovery system will return a test case for each row of test data; they are disabled, then the\ndiscovery system will return a single test case for the theory. If the flag is not present,\nreturns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxEnumerableLength(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxEnumerableLength(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 145,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*\" text=\"GetPrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*\" text=\"GetPrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxEnumerableLength(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxEnumerableLength(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 534,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*\" text=\"GetPrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxEnumerableLength*\" text=\"GetPrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxObjectDepth(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxObjectDepth(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 155,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*\" text=\"GetPrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*\" text=\"GetPrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxObjectDepth(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxObjectDepth(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxObjectDepth(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 544,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*\" text=\"GetPrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectDepth*\" text=\"GetPrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxObjectMemberCount(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxObjectMemberCount(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 165,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*\" text=\"GetPrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*\" text=\"GetPrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxObjectMemberCount(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxObjectMemberCount(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 554,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*\" text=\"GetPrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxObjectMemberCount*\" text=\"GetPrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetPrintMaxStringLength(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxStringLength(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxStringLength(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 175,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*\" text=\"GetPrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*\" text=\"GetPrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetPrintMaxStringLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetPrintMaxStringLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxStringLength(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetPrintMaxStringLength(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetPrintMaxStringLength(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetPrintMaxStringLength(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetPrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 564,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "GetPrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*\" text=\"GetPrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetPrintMaxStringLength*\" text=\"GetPrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetSeed(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetSeed(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSeed(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSeed(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSeed(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSeed(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? GetSeed(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetSeed(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetSeed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 574,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetSeed"
          },
          {
            "lang": "vb",
            "value": "GetSeed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSeed"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSeed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed*\" text=\"GetSeed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSeed*\" text=\"GetSeed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets the value that should be used to seed randomness.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetShowLiveOutput(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetShowLiveOutput(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetShowLiveOutput(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetShowLiveOutput(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetShowLiveOutput(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetShowLiveOutput(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetShowLiveOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 585,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "GetShowLiveOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput*\" text=\"GetShowLiveOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutput*\" text=\"GetShowLiveOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates if the developer wishes to see output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref>\nlive while it's being reported (in addition to seeing it collected together when the test is finished).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetShowLiveOutputOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetShowLiveOutputOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetShowLiveOutputOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 597,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetShowLiveOutputOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault*\" text=\"GetShowLiveOutputOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetShowLiveOutputOrDefault*\" text=\"GetShowLiveOutputOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates if the developer wishes to see output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref>\nlive while it's being reported (in addition to seeing it collected together when the test is finished).\nIf the flag is not present, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetStopOnTestFail(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetStopOnTestFail(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetStopOnTestFail(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetStopOnTestFail(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetStopOnTestFail(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetStopOnTestFail(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetStopOnTestFail",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 603,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "GetStopOnTestFail"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail*\" text=\"GetStopOnTestFail\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFail*\" text=\"GetStopOnTestFail\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net stop testing when a test fails.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetStopOnTestFailOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetStopOnTestFailOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetStopOnTestFailOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetStopOnTestFailOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 614,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetStopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetStopOnTestFailOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault*\" text=\"GetStopOnTestFailOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetStopOnTestFailOrDefault*\" text=\"GetStopOnTestFailOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net stop testing when a test fails. If the flag\nis not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetSynchronousMessageReporting(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetSynchronousMessageReporting(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetSynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 185,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "GetSynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*\" text=\"GetSynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*\" text=\"GetSynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSynchronousMessageReporting(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? GetSynchronousMessageReporting(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetSynchronousMessageReporting(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetSynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 620,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "GetSynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*\" text=\"GetSynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReporting*\" text=\"GetSynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"GetSynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetSynchronousMessageReportingOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetSynchronousMessageReportingOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetSynchronousMessageReportingOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 196,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetSynchronousMessageReportingOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*\" text=\"GetSynchronousMessageReportingOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*\" text=\"GetSynchronousMessageReportingOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"GetSynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool GetSynchronousMessageReportingOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetSynchronousMessageReportingOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetSynchronousMessageReportingOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 631,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "GetSynchronousMessageReportingOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*\" text=\"GetSynchronousMessageReportingOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.GetSynchronousMessageReportingOrDefault*\" text=\"GetSynchronousMessageReportingOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetAssertEquivalentMaxDepth(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetAssertEquivalentMaxDepth(this ITestFrameworkExecutionOptions executionOptions, int? maxDepth)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetAssertEquivalentMaxDepth(executionOptions As ITestFrameworkExecutionOptions, maxDepth As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "maxDepth",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetAssertEquivalentMaxDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 641,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "SetAssertEquivalentMaxDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth*\" text=\"SetAssertEquivalentMaxDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetAssertEquivalentMaxDepth*\" text=\"SetAssertEquivalentMaxDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Gets a max recursive object depth for comparisons done with <code>Assert.Equivalent</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetCulture(ITestFrameworkDiscoveryOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "SetCulture(ITestFrameworkDiscoveryOptions, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture(ITestFrameworkDiscoveryOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture(ITestFrameworkDiscoveryOptions, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.String)\" text=\"SetCulture(ITestFrameworkDiscoveryOptions, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.String)\" text=\"SetCulture(ITestFrameworkDiscoveryOptions, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetCulture(this ITestFrameworkDiscoveryOptions discoveryOptions, string? culture)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetCulture(discoveryOptions As ITestFrameworkDiscoveryOptions, culture As String)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "culture",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetCulture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 210,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetCulture"
          },
          {
            "lang": "vb",
            "value": "SetCulture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*\" text=\"SetCulture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*\" text=\"SetCulture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the culture to use for discovering tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions,System.String)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetCulture(ITestFrameworkExecutionOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "SetCulture(ITestFrameworkExecutionOptions, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture(ITestFrameworkExecutionOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture(ITestFrameworkExecutionOptions, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions,System.String)\" text=\"SetCulture(ITestFrameworkExecutionOptions, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture(Xunit.Sdk.ITestFrameworkExecutionOptions,System.String)\" text=\"SetCulture(ITestFrameworkExecutionOptions, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetCulture(this ITestFrameworkExecutionOptions executionOptions, string? culture)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetCulture(executionOptions As ITestFrameworkExecutionOptions, culture As String)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "culture",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetCulture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 657,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetCulture"
          },
          {
            "lang": "vb",
            "value": "SetCulture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetCulture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*\" text=\"SetCulture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetCulture*\" text=\"SetCulture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the culture to use for running tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetDiagnosticMessages(this ITestFrameworkDiscoveryOptions discoveryOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetDiagnosticMessages(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 222,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "SetDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*\" text=\"SetDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*\" text=\"SetDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetDiagnosticMessages(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetDiagnosticMessages(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetDiagnosticMessages(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 669,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "SetDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*\" text=\"SetDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDiagnosticMessages*\" text=\"SetDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetDisableParallelization(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetDisableParallelization(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetDisableParallelization(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetDisableParallelization(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetDisableParallelization(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetDisableParallelization(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetDisableParallelization",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 681,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "SetDisableParallelization"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization*\" text=\"SetDisableParallelization\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetDisableParallelization*\" text=\"SetDisableParallelization\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag to disable parallelization.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ExplicitOption})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)"
        },
        {
          "lang": "vb",
          "value": "SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Sdk.ExplicitOption?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Sdk.ExplicitOption?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ExplicitOption})\" text=\"SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ExplicitOption})\" text=\"SetExplicitOption(ITestFrameworkExecutionOptions, ExplicitOption?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetExplicitOption(this ITestFrameworkExecutionOptions executionOptions, ExplicitOption? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetExplicitOption(executionOptions As ITestFrameworkExecutionOptions, value As ExplicitOption?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{Xunit.Sdk.ExplicitOption}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ExplicitOption?"
                },
                {
                  "lang": "vb",
                  "value": "ExplicitOption?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ExplicitOption?"
                },
                {
                  "lang": "vb",
                  "value": "ExplicitOption?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ExplicitOption?"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ExplicitOption?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetExplicitOption",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 693,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "SetExplicitOption"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetExplicitOption"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption*\" text=\"SetExplicitOption\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetExplicitOption*\" text=\"SetExplicitOption\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag to describe how explicit tests should be handled.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetFailSkips(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetFailSkips(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetFailSkips(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetFailSkips(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetFailSkips(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetFailSkips(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetFailSkips(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetFailSkips(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetFailSkips",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 705,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetFailSkips"
          },
          {
            "lang": "vb",
            "value": "SetFailSkips"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetFailSkips"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetFailSkips"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips*\" text=\"SetFailSkips\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailSkips*\" text=\"SetFailSkips\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag to fail skipped tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetFailTestsWithWarnings(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetFailTestsWithWarnings(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetFailTestsWithWarnings(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetFailTestsWithWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 717,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "SetFailTestsWithWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings*\" text=\"SetFailTestsWithWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetFailTestsWithWarnings*\" text=\"SetFailTestsWithWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag to fail passing tests with warnings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetIncludeSourceInformation(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetIncludeSourceInformation(this ITestFrameworkDiscoveryOptions discoveryOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetIncludeSourceInformation(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetIncludeSourceInformation",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 236,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "SetIncludeSourceInformation"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation*\" text=\"SetIncludeSourceInformation\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetIncludeSourceInformation*\" text=\"SetIncludeSourceInformation\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether discovered test cases should include source information.\nNote that not all runners have access to source information, so this flag does not guarantee\nthat source information will be provided.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetInternalDiagnosticMessages(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetInternalDiagnosticMessages(this ITestFrameworkDiscoveryOptions discoveryOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetInternalDiagnosticMessages(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetInternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 248,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "SetInternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*\" text=\"SetInternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*\" text=\"SetInternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether internal diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetInternalDiagnosticMessages(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetInternalDiagnosticMessages(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetInternalDiagnosticMessages(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetInternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 729,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "SetInternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*\" text=\"SetInternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetInternalDiagnosticMessages*\" text=\"SetInternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether internal diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetMaxParallelThreads(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetMaxParallelThreads(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetMaxParallelThreads(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetMaxParallelThreads(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetMaxParallelThreads(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetMaxParallelThreads(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetMaxParallelThreads",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 742,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "SetMaxParallelThreads"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads*\" text=\"SetMaxParallelThreads\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMaxParallelThreads*\" text=\"SetMaxParallelThreads\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum number of threads to use when running tests in parallel.\nIf set to 0 (the default value), does not limit the number of threads.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplay})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)"
        },
        {
          "lang": "vb",
          "value": "SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.TestMethodDisplay?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.TestMethodDisplay?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplay})\" text=\"SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplay})\" text=\"SetMethodDisplay(ITestFrameworkDiscoveryOptions, TestMethodDisplay?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetMethodDisplay(this ITestFrameworkDiscoveryOptions discoveryOptions, TestMethodDisplay? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetMethodDisplay(discoveryOptions As ITestFrameworkDiscoveryOptions, value As TestMethodDisplay?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplay}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TestMethodDisplay?"
                },
                {
                  "lang": "vb",
                  "value": "TestMethodDisplay?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TestMethodDisplay?"
                },
                {
                  "lang": "vb",
                  "value": "TestMethodDisplay?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.TestMethodDisplay?"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.TestMethodDisplay?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetMethodDisplay",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 260,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "SetMethodDisplay"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay*\" text=\"SetMethodDisplay\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplay*\" text=\"SetMethodDisplay\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines the default display name format for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplayOptions})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)"
        },
        {
          "lang": "vb",
          "value": "SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.TestMethodDisplayOptions?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Xunit.Sdk.TestMethodDisplayOptions?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplayOptions})\" text=\"SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{Xunit.Sdk.TestMethodDisplayOptions})\" text=\"SetMethodDisplayOptions(ITestFrameworkDiscoveryOptions, TestMethodDisplayOptions?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetMethodDisplayOptions(this ITestFrameworkDiscoveryOptions discoveryOptions, TestMethodDisplayOptions? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetMethodDisplayOptions(discoveryOptions As ITestFrameworkDiscoveryOptions, value As TestMethodDisplayOptions?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TestMethodDisplayOptions?"
                },
                {
                  "lang": "vb",
                  "value": "TestMethodDisplayOptions?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TestMethodDisplayOptions?"
                },
                {
                  "lang": "vb",
                  "value": "TestMethodDisplayOptions?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.TestMethodDisplayOptions?"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.TestMethodDisplayOptions?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetMethodDisplayOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 272,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "SetMethodDisplayOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions*\" text=\"SetMethodDisplayOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetMethodDisplayOptions*\" text=\"SetMethodDisplayOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the flags that determine the default display options for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ParallelAlgorithm})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)"
        },
        {
          "lang": "vb",
          "value": "SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Sdk.ParallelAlgorithm?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions, Xunit.Sdk.ParallelAlgorithm?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ParallelAlgorithm})\" text=\"SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{Xunit.Sdk.ParallelAlgorithm})\" text=\"SetParallelAlgorithm(ITestFrameworkExecutionOptions, ParallelAlgorithm?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetParallelAlgorithm(this ITestFrameworkExecutionOptions executionOptions, ParallelAlgorithm? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetParallelAlgorithm(executionOptions As ITestFrameworkExecutionOptions, value As ParallelAlgorithm?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{Xunit.Sdk.ParallelAlgorithm}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ParallelAlgorithm?"
                },
                {
                  "lang": "vb",
                  "value": "ParallelAlgorithm?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ParallelAlgorithm?"
                },
                {
                  "lang": "vb",
                  "value": "ParallelAlgorithm?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ParallelAlgorithm?"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ParallelAlgorithm?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetParallelAlgorithm",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 754,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "SetParallelAlgorithm"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm*\" text=\"SetParallelAlgorithm\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetParallelAlgorithm*\" text=\"SetParallelAlgorithm\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the parallel algorithm to be used.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetPreEnumerateTheories(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPreEnumerateTheories(this ITestFrameworkDiscoveryOptions discoveryOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPreEnumerateTheories(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPreEnumerateTheories",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 286,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "SetPreEnumerateTheories"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories*\" text=\"SetPreEnumerateTheories\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPreEnumerateTheories*\" text=\"SetPreEnumerateTheories\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether theories are pre-enumerated. If they enabled, then the\ndiscovery system will return a test case for each row of test data; they are disabled, then the\ndiscovery system will return a single test case for the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxEnumerableLength(this ITestFrameworkDiscoveryOptions discoveryOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxEnumerableLength(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 298,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*\" text=\"SetPrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*\" text=\"SetPrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxEnumerableLength(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxEnumerableLength(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxEnumerableLength(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 766,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*\" text=\"SetPrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxEnumerableLength*\" text=\"SetPrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectDepth(ITestFrameworkDiscoveryOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxObjectDepth(this ITestFrameworkDiscoveryOptions discoveryOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxObjectDepth(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 310,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*\" text=\"SetPrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*\" text=\"SetPrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectDepth(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxObjectDepth(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxObjectDepth(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 778,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*\" text=\"SetPrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectDepth*\" text=\"SetPrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxObjectMemberCount(this ITestFrameworkDiscoveryOptions discoveryOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxObjectMemberCount(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 322,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*\" text=\"SetPrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*\" text=\"SetPrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxObjectMemberCount(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxObjectMemberCount(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxObjectMemberCount(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 790,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*\" text=\"SetPrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxObjectMemberCount*\" text=\"SetPrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxStringLength(ITestFrameworkDiscoveryOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxStringLength(this ITestFrameworkDiscoveryOptions discoveryOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxStringLength(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 334,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*\" text=\"SetPrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*\" text=\"SetPrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetPrintMaxStringLength(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetPrintMaxStringLength(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxStringLength(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetPrintMaxStringLength(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetPrintMaxStringLength(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetPrintMaxStringLength(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetPrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 802,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "SetPrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*\" text=\"SetPrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetPrintMaxStringLength*\" text=\"SetPrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetSeed(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "SetSeed(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSeed(ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSeed(ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions, int?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions, Integer?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetSeed(ITestFrameworkExecutionOptions, int?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Int32})\" text=\"SetSeed(ITestFrameworkExecutionOptions, int?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetSeed(this ITestFrameworkExecutionOptions executionOptions, int? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetSeed(executionOptions As ITestFrameworkExecutionOptions, value As Integer?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetSeed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 814,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetSeed"
          },
          {
            "lang": "vb",
            "value": "SetSeed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSeed"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSeed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed*\" text=\"SetSeed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSeed*\" text=\"SetSeed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets the value that should be used to seed randomness.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetShowLiveOutput(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetShowLiveOutput(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetShowLiveOutput(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetShowLiveOutput(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetShowLiveOutput(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetShowLiveOutput(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetShowLiveOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 827,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "SetShowLiveOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput*\" text=\"SetShowLiveOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetShowLiveOutput*\" text=\"SetShowLiveOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag which indicates if the developer wishes to see output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref>\nlive while it's being reported (in addition to seeing it collected together when the test is finished).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetStopOnTestFail(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetStopOnTestFail(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetStopOnTestFail(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetStopOnTestFail(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetStopOnTestFail(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetStopOnTestFail(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetStopOnTestFail",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 839,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "SetStopOnTestFail"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail*\" text=\"SetStopOnTestFail\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetStopOnTestFail*\" text=\"SetStopOnTestFail\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether xUnit.net stop testing when a test fails.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions,System.Nullable{System.Boolean})\" text=\"SetSynchronousMessageReporting(ITestFrameworkDiscoveryOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetSynchronousMessageReporting(this ITestFrameworkDiscoveryOptions discoveryOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetSynchronousMessageReporting(discoveryOptions As ITestFrameworkDiscoveryOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetSynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 346,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "SetSynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*\" text=\"SetSynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*\" text=\"SetSynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions, bool?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions, Boolean?)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, bool?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions,System.Nullable{System.Boolean})\" text=\"SetSynchronousMessageReporting(ITestFrameworkExecutionOptions, bool?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static void SetSynchronousMessageReporting(this ITestFrameworkExecutionOptions executionOptions, bool? value)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Sub SetSynchronousMessageReporting(executionOptions As ITestFrameworkExecutionOptions, value As Boolean?)"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Nullable{System.Boolean}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool?"
                },
                {
                  "lang": "vb",
                  "value": "Boolean?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SetSynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
        "startLine": 851,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "SetSynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*\" text=\"SetSynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.SetSynchronousMessageReporting*\" text=\"SetSynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Sets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "TestFrameworkOptionsReadWriteExtensions"
    },
    {
      "lang": "vb",
      "value": "TestFrameworkOptionsReadWriteExtensions"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "TestFrameworkOptionsReadWriteExtensions"
    },
    {
      "lang": "vb",
      "value": "TestFrameworkOptionsReadWriteExtensions"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "TestFrameworkOptionsReadWriteExtensions",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Extensions/TestFrameworkOptionsReadWriteExtensions.cs",
    "startLine": 10,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods for reading and writing <xref href=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class TestFrameworkOptionsReadWriteExtensions"
      },
      {
        "lang": "vb",
        "value": "Public Module TestFrameworkOptionsReadWriteExtensions"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Sdk.TestFrameworkOptionsReadWriteExtensions.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}