{
  "uid": "Xunit.Runner.Common.TestAssemblyConfiguration",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AppDomain"
        },
        {
          "lang": "vb",
          "value": "AppDomain"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.AppDomain"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.AppDomain"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain\" text=\"AppDomain\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain\" text=\"AppDomain\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public AppDomainSupport? AppDomain { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property AppDomain As AppDomainSupport?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Runner.Common.AppDomainSupport}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "AppDomainSupport?"
              },
              {
                "lang": "vb",
                "value": "AppDomainSupport?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AppDomainSupport?"
              },
              {
                "lang": "vb",
                "value": "AppDomainSupport?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.AppDomainSupport?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.AppDomainSupport?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AppDomainSupport.html\">AppDomainSupport</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.Runner.Common.AppDomainSupport.html\">AppDomainSupport</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AppDomain",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 15,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain*",
        "name": [
          {
            "lang": "csharp",
            "value": "AppDomain"
          },
          {
            "lang": "vb",
            "value": "AppDomain"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.AppDomain"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.AppDomain"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain*\" text=\"AppDomain\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomain*\" text=\"AppDomain\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether an app domain should be used to discover and run tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AppDomainOrDefault"
        },
        {
          "lang": "vb",
          "value": "AppDomainOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.AppDomainOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.AppDomainOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault\" text=\"AppDomainOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault\" text=\"AppDomainOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public AppDomainSupport AppDomainOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property AppDomainOrDefault As AppDomainSupport"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.AppDomainSupport",
            "name": [
              {
                "lang": "csharp",
                "value": "AppDomainSupport"
              },
              {
                "lang": "vb",
                "value": "AppDomainSupport"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AppDomainSupport"
              },
              {
                "lang": "vb",
                "value": "AppDomainSupport"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.AppDomainSupport"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.AppDomainSupport"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.AppDomainSupport\" text=\"AppDomainSupport\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.AppDomainSupport\" text=\"AppDomainSupport\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AppDomainOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 21,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "AppDomainOrDefault"
          },
          {
            "lang": "vb",
            "value": "AppDomainOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.AppDomainOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.AppDomainOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault*\" text=\"AppDomainOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AppDomainOrDefault*\" text=\"AppDomainOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether an app domain should be used to discover and run tests.\nIf the flag is not set, returns the default value (<xref href=\"Xunit.Runner.Common.AppDomainSupport.IfAvailable\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AssertEquivalentMaxDepth"
        },
        {
          "lang": "vb",
          "value": "AssertEquivalentMaxDepth"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.AssertEquivalentMaxDepth"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.AssertEquivalentMaxDepth"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth\" text=\"AssertEquivalentMaxDepth\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth\" text=\"AssertEquivalentMaxDepth\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? AssertEquivalentMaxDepth { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property AssertEquivalentMaxDepth As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AssertEquivalentMaxDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 26,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "AssertEquivalentMaxDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.AssertEquivalentMaxDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth*\" text=\"AssertEquivalentMaxDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.AssertEquivalentMaxDepth*\" text=\"AssertEquivalentMaxDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a value which indicates the maximum object depth to compare when using <code>Assert.Equivalent</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Culture"
        },
        {
          "lang": "vb",
          "value": "Culture"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.Culture"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.Culture"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Culture\" text=\"Culture\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Culture\" text=\"Culture\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string? Culture { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Culture As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Culture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 34,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture*",
        "name": [
          {
            "lang": "csharp",
            "value": "Culture"
          },
          {
            "lang": "vb",
            "value": "Culture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.Culture"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.Culture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Culture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Culture*\" text=\"Culture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Culture*\" text=\"Culture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the desired culture to run the tests under. Use <code>null</code> (default) to\nindicate that we should use the default OS culture; use an empty string to indicate that\nwe should use the invariant culture; or use any culture value that is valid for\ncalling <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessages"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.DiagnosticMessages"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages\" text=\"DiagnosticMessages\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages\" text=\"DiagnosticMessages\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? DiagnosticMessages { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property DiagnosticMessages As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 40,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.DiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the end user wants diagnostic messages\nfrom the test framework.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessagesOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault\" text=\"DiagnosticMessagesOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault\" text=\"DiagnosticMessagesOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool DiagnosticMessagesOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property DiagnosticMessagesOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 47,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the end user wants diagnostic messages\nfrom the test framework. If the flag is not set, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExplicitOption"
        },
        {
          "lang": "vb",
          "value": "ExplicitOption"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ExplicitOption"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ExplicitOption"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption\" text=\"ExplicitOption\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption\" text=\"ExplicitOption\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ExplicitOption? ExplicitOption { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ExplicitOption As ExplicitOption?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ExplicitOption}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ExplicitOption",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 52,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "ExplicitOption"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ExplicitOption"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption*\" text=\"ExplicitOption\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOption*\" text=\"ExplicitOption\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating how explicit tests should be handled.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExplicitOptionOrDefault"
        },
        {
          "lang": "vb",
          "value": "ExplicitOptionOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ExplicitOptionOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ExplicitOptionOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault\" text=\"ExplicitOptionOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault\" text=\"ExplicitOptionOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ExplicitOption ExplicitOptionOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ExplicitOptionOrDefault As ExplicitOption"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ExplicitOption",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ExplicitOptionOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 58,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "ExplicitOptionOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ExplicitOptionOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault*\" text=\"ExplicitOptionOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ExplicitOptionOrDefault*\" text=\"ExplicitOptionOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating how explicit tests should be handled. If the flag\nisn't set, returns the default value (<xref href=\"Xunit.Sdk.ExplicitOption.Off\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailSkips"
        },
        {
          "lang": "vb",
          "value": "FailSkips"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.FailSkips"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.FailSkips"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips\" text=\"FailSkips\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips\" text=\"FailSkips\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? FailSkips { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property FailSkips As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailSkips",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 64,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailSkips"
          },
          {
            "lang": "vb",
            "value": "FailSkips"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.FailSkips"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.FailSkips"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips*\" text=\"FailSkips\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkips*\" text=\"FailSkips\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that skipped tests should be converted into\nfailed tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailSkipsOrDefault"
        },
        {
          "lang": "vb",
          "value": "FailSkipsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.FailSkipsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.FailSkipsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault\" text=\"FailSkipsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault\" text=\"FailSkipsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool FailSkipsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property FailSkipsOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailSkipsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 70,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "FailSkipsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.FailSkipsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault*\" text=\"FailSkipsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailSkipsOrDefault*\" text=\"FailSkipsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that skipped tests should be converted into failed\ntests. If the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailTestsWithWarnings"
        },
        {
          "lang": "vb",
          "value": "FailTestsWithWarnings"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.FailTestsWithWarnings"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.FailTestsWithWarnings"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings\" text=\"FailTestsWithWarnings\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings\" text=\"FailTestsWithWarnings\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? FailTestsWithWarnings { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property FailTestsWithWarnings As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailTestsWithWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 76,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "FailTestsWithWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.FailTestsWithWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings*\" text=\"FailTestsWithWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarnings*\" text=\"FailTestsWithWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that passing tests with warnings should be\nconverted into failed tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailTestsWithWarningsOrDefault"
        },
        {
          "lang": "vb",
          "value": "FailTestsWithWarningsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault\" text=\"FailTestsWithWarningsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault\" text=\"FailTestsWithWarningsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool FailTestsWithWarningsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property FailTestsWithWarningsOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailTestsWithWarningsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 83,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "FailTestsWithWarningsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault*\" text=\"FailTestsWithWarningsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.FailTestsWithWarningsOrDefault*\" text=\"FailTestsWithWarningsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that passing tests with warnings should be\nconverted into failed tests. If the flag is not set, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Filters"
        },
        {
          "lang": "vb",
          "value": "Filters"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.Filters"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.Filters"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Filters\" text=\"Filters\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Filters\" text=\"Filters\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public XunitFilters Filters { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Filters As XunitFilters"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runner.Common.XunitFilters",
            "name": [
              {
                "lang": "csharp",
                "value": "XunitFilters"
              },
              {
                "lang": "vb",
                "value": "XunitFilters"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "XunitFilters"
              },
              {
                "lang": "vb",
                "value": "XunitFilters"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.Common.XunitFilters"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.Common.XunitFilters"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitFilters\" text=\"XunitFilters\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.Common.XunitFilters\" text=\"XunitFilters\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Filters",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 88,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters*",
        "name": [
          {
            "lang": "csharp",
            "value": "Filters"
          },
          {
            "lang": "vb",
            "value": "Filters"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.Filters"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.Filters"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Filters"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Filters*\" text=\"Filters\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Filters*\" text=\"Filters\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the list of filters used during test discovery.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IncludeSourceInformation"
        },
        {
          "lang": "vb",
          "value": "IncludeSourceInformation"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.IncludeSourceInformation"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.IncludeSourceInformation"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation\" text=\"IncludeSourceInformation\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation\" text=\"IncludeSourceInformation\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? IncludeSourceInformation { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property IncludeSourceInformation As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IncludeSourceInformation",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 94,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation*",
        "name": [
          {
            "lang": "csharp",
            "value": "IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "IncludeSourceInformation"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.IncludeSourceInformation"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation*\" text=\"IncludeSourceInformation\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformation*\" text=\"IncludeSourceInformation\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that discovery should include source information\nfor the test cases.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IncludeSourceInformationOrDefault"
        },
        {
          "lang": "vb",
          "value": "IncludeSourceInformationOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault\" text=\"IncludeSourceInformationOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault\" text=\"IncludeSourceInformationOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool IncludeSourceInformationOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property IncludeSourceInformationOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IncludeSourceInformationOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 100,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "IncludeSourceInformationOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault*\" text=\"IncludeSourceInformationOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.IncludeSourceInformationOrDefault*\" text=\"IncludeSourceInformationOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that discovery should include source information for the\ntest cases. If the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "InternalDiagnosticMessages"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.InternalDiagnosticMessages"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages\" text=\"InternalDiagnosticMessages\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages\" text=\"InternalDiagnosticMessages\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? InternalDiagnosticMessages { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property InternalDiagnosticMessages As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "InternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 106,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "InternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.InternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages*\" text=\"InternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessages*\" text=\"InternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the end user wants internal diagnostic messages\nfrom the test framework.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "InternalDiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "InternalDiagnosticMessagesOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault\" text=\"InternalDiagnosticMessagesOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault\" text=\"InternalDiagnosticMessagesOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool InternalDiagnosticMessagesOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property InternalDiagnosticMessagesOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "InternalDiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 113,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "InternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "InternalDiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault*\" text=\"InternalDiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.InternalDiagnosticMessagesOrDefault*\" text=\"InternalDiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the end user wants internal diagnostic messages\nfrom the test framework. If the flag is not set, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LongRunningTestSeconds"
        },
        {
          "lang": "vb",
          "value": "LongRunningTestSeconds"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.LongRunningTestSeconds"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.LongRunningTestSeconds"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds\" text=\"LongRunningTestSeconds\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds\" text=\"LongRunningTestSeconds\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? LongRunningTestSeconds { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property LongRunningTestSeconds As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LongRunningTestSeconds",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 119,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds*",
        "name": [
          {
            "lang": "csharp",
            "value": "LongRunningTestSeconds"
          },
          {
            "lang": "vb",
            "value": "LongRunningTestSeconds"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.LongRunningTestSeconds"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.LongRunningTestSeconds"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds*\" text=\"LongRunningTestSeconds\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSeconds*\" text=\"LongRunningTestSeconds\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the number of seconds that a test can run before being considered &quot;long running&quot;. Set to a positive\nvalue to enable the feature.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "LongRunningTestSecondsOrDefault"
        },
        {
          "lang": "vb",
          "value": "LongRunningTestSecondsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault\" text=\"LongRunningTestSecondsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault\" text=\"LongRunningTestSecondsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int LongRunningTestSecondsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property LongRunningTestSecondsOrDefault As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "LongRunningTestSecondsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 125,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "LongRunningTestSecondsOrDefault"
          },
          {
            "lang": "vb",
            "value": "LongRunningTestSecondsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault*\" text=\"LongRunningTestSecondsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.LongRunningTestSecondsOrDefault*\" text=\"LongRunningTestSecondsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the number of seconds that a test can run before being considered &quot;long running&quot;. If the value is not\nset, returns the default value (-1).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "MaxParallelThreads"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MaxParallelThreads"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads\" text=\"MaxParallelThreads\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads\" text=\"MaxParallelThreads\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? MaxParallelThreads { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MaxParallelThreads As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MaxParallelThreads",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 132,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "MaxParallelThreads"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MaxParallelThreads"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the maximum number of thread to use when parallelizing this assembly. A value of <code>null</code>\nor 0 indicates that the default should be used (<xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref>); a value of\n-1 indicates that tests should run with an unlimited-sized thread pool.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxParallelThreadsOrDefault"
        },
        {
          "lang": "vb",
          "value": "MaxParallelThreadsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault\" text=\"MaxParallelThreadsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault\" text=\"MaxParallelThreadsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int MaxParallelThreadsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property MaxParallelThreadsOrDefault As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MaxParallelThreadsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 138,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "MaxParallelThreadsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault*\" text=\"MaxParallelThreadsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MaxParallelThreadsOrDefault*\" text=\"MaxParallelThreadsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of thread to use when parallelizing this assembly.\nIf the value is not set, returns the default value (<xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "MethodDisplay"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MethodDisplay"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay\" text=\"MethodDisplay\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay\" text=\"MethodDisplay\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplay? MethodDisplay { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MethodDisplay As TestMethodDisplay?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplay}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplay",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 146,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "MethodDisplay"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MethodDisplay"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay*\" text=\"MethodDisplay\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplay*\" text=\"MethodDisplay\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the default display name for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOptions"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MethodDisplayOptions"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions\" text=\"MethodDisplayOptions\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions\" text=\"MethodDisplayOptions\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplayOptions? MethodDisplayOptions { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MethodDisplayOptions As TestMethodDisplayOptions?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 157,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MethodDisplayOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the default display options for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOptionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOptionsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault\" text=\"MethodDisplayOptionsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault\" text=\"MethodDisplayOptionsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplayOptions MethodDisplayOptionsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property MethodDisplayOptionsOrDefault As TestMethodDisplayOptions"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplayOptions",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOptionsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 163,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOptionsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault*\" text=\"MethodDisplayOptionsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOptionsOrDefault*\" text=\"MethodDisplayOptionsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the default display options for test methods. If the value is not set, returns\nthe default value (<xref href=\"Xunit.Sdk.TestMethodDisplayOptions.None\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOrDefault"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.MethodDisplayOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.MethodDisplayOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault\" text=\"MethodDisplayOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault\" text=\"MethodDisplayOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplay MethodDisplayOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property MethodDisplayOrDefault As TestMethodDisplay"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplay",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 152,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.MethodDisplayOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault*\" text=\"MethodDisplayOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.MethodDisplayOrDefault*\" text=\"MethodDisplayOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the default display name for test methods. If the value is not set, returns\nthe default value (<xref href=\"Xunit.Sdk.TestMethodDisplay.ClassAndMethod\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "ParallelAlgorithm"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelAlgorithm"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ParallelAlgorithm? ParallelAlgorithm { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ParallelAlgorithm As ParallelAlgorithm?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ParallelAlgorithm}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelAlgorithm",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 168,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "ParallelAlgorithm"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelAlgorithm"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the algorithm to be used for parallelization.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelAlgorithmOrDefault"
        },
        {
          "lang": "vb",
          "value": "ParallelAlgorithmOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault\" text=\"ParallelAlgorithmOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault\" text=\"ParallelAlgorithmOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ParallelAlgorithm ParallelAlgorithmOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ParallelAlgorithmOrDefault As ParallelAlgorithm"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ParallelAlgorithm",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelAlgorithmOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 173,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "ParallelAlgorithmOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault*\" text=\"ParallelAlgorithmOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelAlgorithmOrDefault*\" text=\"ParallelAlgorithmOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the algorithm to be used for parallelization.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelizeAssembly"
        },
        {
          "lang": "vb",
          "value": "ParallelizeAssembly"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelizeAssembly"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelizeAssembly"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly\" text=\"ParallelizeAssembly\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly\" text=\"ParallelizeAssembly\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? ParallelizeAssembly { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ParallelizeAssembly As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelizeAssembly",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 179,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelizeAssembly"
          },
          {
            "lang": "vb",
            "value": "ParallelizeAssembly"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelizeAssembly"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelizeAssembly"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly*\" text=\"ParallelizeAssembly\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssembly*\" text=\"ParallelizeAssembly\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that this assembly is safe to parallelize against\nother assemblies.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelizeAssemblyOrDefault"
        },
        {
          "lang": "vb",
          "value": "ParallelizeAssemblyOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault\" text=\"ParallelizeAssemblyOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault\" text=\"ParallelizeAssemblyOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool ParallelizeAssemblyOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ParallelizeAssemblyOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelizeAssemblyOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 185,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelizeAssemblyOrDefault"
          },
          {
            "lang": "vb",
            "value": "ParallelizeAssemblyOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault*\" text=\"ParallelizeAssemblyOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeAssemblyOrDefault*\" text=\"ParallelizeAssemblyOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that this assembly is safe to parallelize against\nother assemblies. If the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelizeTestCollections"
        },
        {
          "lang": "vb",
          "value": "ParallelizeTestCollections"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelizeTestCollections"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelizeTestCollections"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections\" text=\"ParallelizeTestCollections\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections\" text=\"ParallelizeTestCollections\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? ParallelizeTestCollections { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ParallelizeTestCollections As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelizeTestCollections",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 191,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelizeTestCollections"
          },
          {
            "lang": "vb",
            "value": "ParallelizeTestCollections"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelizeTestCollections"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelizeTestCollections"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections*\" text=\"ParallelizeTestCollections\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollections*\" text=\"ParallelizeTestCollections\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that this test assembly wants to run test collections\nin parallel against one another.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelizeTestCollectionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "ParallelizeTestCollectionsOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault\" text=\"ParallelizeTestCollectionsOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault\" text=\"ParallelizeTestCollectionsOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool ParallelizeTestCollectionsOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ParallelizeTestCollectionsOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelizeTestCollectionsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 198,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelizeTestCollectionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "ParallelizeTestCollectionsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault*\" text=\"ParallelizeTestCollectionsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ParallelizeTestCollectionsOrDefault*\" text=\"ParallelizeTestCollectionsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that this test assembly wants to run test collections\nin parallel against one another. If the flag is not set, returns the default\nvalue (<code>true</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "PreEnumerateTheories"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.PreEnumerateTheories"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories\" text=\"PreEnumerateTheories\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories\" text=\"PreEnumerateTheories\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? PreEnumerateTheories { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PreEnumerateTheories As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PreEnumerateTheories",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 204,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories*",
        "name": [
          {
            "lang": "csharp",
            "value": "PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "PreEnumerateTheories"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.PreEnumerateTheories"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether theory data should be pre-enumerated during\ntest discovery.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "PrintMaxEnumerableLength"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.PrintMaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.PrintMaxEnumerableLength"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength\" text=\"PrintMaxEnumerableLength\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength\" text=\"PrintMaxEnumerableLength\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? PrintMaxEnumerableLength { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PrintMaxEnumerableLength As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 209,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.PrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a value indicating the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectDepth"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.PrintMaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.PrintMaxObjectDepth"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth\" text=\"PrintMaxObjectDepth\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth\" text=\"PrintMaxObjectDepth\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? PrintMaxObjectDepth { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PrintMaxObjectDepth As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 214,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.PrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a value indicating the maximum recursive depth when printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectMemberCount"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.PrintMaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.PrintMaxObjectMemberCount"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount\" text=\"PrintMaxObjectMemberCount\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount\" text=\"PrintMaxObjectMemberCount\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? PrintMaxObjectMemberCount { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PrintMaxObjectMemberCount As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 219,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.PrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a value indicating the maximum members to show when printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxStringLength"
        },
        {
          "lang": "vb",
          "value": "PrintMaxStringLength"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.PrintMaxStringLength"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.PrintMaxStringLength"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength\" text=\"PrintMaxStringLength\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength\" text=\"PrintMaxStringLength\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? PrintMaxStringLength { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PrintMaxStringLength As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 224,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.PrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a value indicating the maximum length for printing string values.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Seed"
        },
        {
          "lang": "vb",
          "value": "Seed"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.Seed"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.Seed"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Seed\" text=\"Seed\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Seed\" text=\"Seed\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? Seed { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Seed As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Seed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 229,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed*",
        "name": [
          {
            "lang": "csharp",
            "value": "Seed"
          },
          {
            "lang": "vb",
            "value": "Seed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.Seed"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.Seed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.Seed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Seed*\" text=\"Seed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.Seed*\" text=\"Seed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the seed value used for randomization. Only supported for v3 or later test assemblies.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShadowCopy"
        },
        {
          "lang": "vb",
          "value": "ShadowCopy"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ShadowCopy"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ShadowCopy"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy\" text=\"ShadowCopy\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy\" text=\"ShadowCopy\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? ShadowCopy { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ShadowCopy As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShadowCopy",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 234,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShadowCopy"
          },
          {
            "lang": "vb",
            "value": "ShadowCopy"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ShadowCopy"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ShadowCopy"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy*\" text=\"ShadowCopy\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopy*\" text=\"ShadowCopy\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether shadow copies should be used.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShadowCopyFolder"
        },
        {
          "lang": "vb",
          "value": "ShadowCopyFolder"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ShadowCopyFolder"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ShadowCopyFolder"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder\" text=\"ShadowCopyFolder\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder\" text=\"ShadowCopyFolder\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string? ShadowCopyFolder { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ShadowCopyFolder As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShadowCopyFolder",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 246,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShadowCopyFolder"
          },
          {
            "lang": "vb",
            "value": "ShadowCopyFolder"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ShadowCopyFolder"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ShadowCopyFolder"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder*\" text=\"ShadowCopyFolder\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyFolder*\" text=\"ShadowCopyFolder\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets the folder to be used for shadow copy files. If the value is not set,\nthe system defaults for shadow copying are used.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShadowCopyOrDefault"
        },
        {
          "lang": "vb",
          "value": "ShadowCopyOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ShadowCopyOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ShadowCopyOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault\" text=\"ShadowCopyOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault\" text=\"ShadowCopyOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool ShadowCopyOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ShadowCopyOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShadowCopyOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 240,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShadowCopyOrDefault"
          },
          {
            "lang": "vb",
            "value": "ShadowCopyOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ShadowCopyOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ShadowCopyOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault*\" text=\"ShadowCopyOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShadowCopyOrDefault*\" text=\"ShadowCopyOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating whether shadow copies should be used. If the flag is not set,\nreturns the default value (<code>true</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShowLiveOutput"
        },
        {
          "lang": "vb",
          "value": "ShowLiveOutput"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ShowLiveOutput"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ShowLiveOutput"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput\" text=\"ShowLiveOutput\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput\" text=\"ShowLiveOutput\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? ShowLiveOutput { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ShowLiveOutput As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShowLiveOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 252,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "ShowLiveOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ShowLiveOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput*\" text=\"ShowLiveOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutput*\" text=\"ShowLiveOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref> should be\nshown live as they're logged (in addition to being collected together after the test finishes).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShowLiveOutputOrDefault"
        },
        {
          "lang": "vb",
          "value": "ShowLiveOutputOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.ShowLiveOutputOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.ShowLiveOutputOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault\" text=\"ShowLiveOutputOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault\" text=\"ShowLiveOutputOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool ShowLiveOutputOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property ShowLiveOutputOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShowLiveOutputOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 259,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "ShowLiveOutputOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.ShowLiveOutputOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault*\" text=\"ShowLiveOutputOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.ShowLiveOutputOrDefault*\" text=\"ShowLiveOutputOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating whether output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref> should be\nshown live as they're logged (in addition to being collected together after the test finishes).\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "StopOnFail"
        },
        {
          "lang": "vb",
          "value": "StopOnFail"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.StopOnFail"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.StopOnFail"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail\" text=\"StopOnFail\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail\" text=\"StopOnFail\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? StopOnFail { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property StopOnFail As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "StopOnFail",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 264,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail*",
        "name": [
          {
            "lang": "csharp",
            "value": "StopOnFail"
          },
          {
            "lang": "vb",
            "value": "StopOnFail"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.StopOnFail"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.StopOnFail"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail*\" text=\"StopOnFail\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFail*\" text=\"StopOnFail\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating whether testing should stop on a failure.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "StopOnFailOrDefault"
        },
        {
          "lang": "vb",
          "value": "StopOnFailOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.StopOnFailOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.StopOnFailOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault\" text=\"StopOnFailOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault\" text=\"StopOnFailOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool StopOnFailOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property StopOnFailOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "StopOnFailOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 270,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "StopOnFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "StopOnFailOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.StopOnFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.StopOnFailOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault*\" text=\"StopOnFailOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.StopOnFailOrDefault*\" text=\"StopOnFailOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating whether testing should stop on a test failure. If the flag is not set,\nreturns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReporting"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReporting"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.SynchronousMessageReporting"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.SynchronousMessageReporting"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting\" text=\"SynchronousMessageReporting\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting\" text=\"SynchronousMessageReporting\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? SynchronousMessageReporting { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property SynchronousMessageReporting As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 275,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.SynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that synchronous message reporting is desired.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestAssemblyConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReportingOrDefault"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReportingOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault\" text=\"SynchronousMessageReportingOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault\" text=\"SynchronousMessageReportingOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool SynchronousMessageReportingOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property SynchronousMessageReportingOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReportingOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
        "startLine": 281,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReportingOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestAssemblyConfiguration.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that synchronous message reporting is desired. If the flag is not set,\nreturns the default value (<code>false</code>).</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "TestAssemblyConfiguration"
    },
    {
      "lang": "vb",
      "value": "TestAssemblyConfiguration"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "TestAssemblyConfiguration"
    },
    {
      "lang": "vb",
      "value": "TestAssemblyConfiguration"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.Common.TestAssemblyConfiguration"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.Common.TestAssemblyConfiguration"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "TestAssemblyConfiguration",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestAssemblyConfiguration.cs",
    "startLine": 10,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml\" sourcestartlinenumber=\"1\">Represents the configuration items set in the configuration file of a test assembly.\nShould be read with the <xref href=\"Xunit.Runner.Common.ConfigReader\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class TestAssemblyConfiguration"
      },
      {
        "lang": "vb",
        "value": "Public Class TestAssemblyConfiguration"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Runner.Common.TestAssemblyConfiguration.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}