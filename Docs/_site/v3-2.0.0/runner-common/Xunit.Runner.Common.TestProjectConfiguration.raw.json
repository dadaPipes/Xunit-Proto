{
  "uid": "Xunit.Runner.Common.TestProjectConfiguration",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AssemblyInfo"
        },
        {
          "lang": "vb",
          "value": "AssemblyInfo"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.AssemblyInfo"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.AssemblyInfo"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo\" text=\"AssemblyInfo\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo\" text=\"AssemblyInfo\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? AssemblyInfo { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property AssemblyInfo As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AssemblyInfo",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 16,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo*",
        "name": [
          {
            "lang": "csharp",
            "value": "AssemblyInfo"
          },
          {
            "lang": "vb",
            "value": "AssemblyInfo"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.AssemblyInfo"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.AssemblyInfo"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo*\" text=\"AssemblyInfo\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfo*\" text=\"AssemblyInfo\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag which indicates whether the runner should return assembly\ninformation rather than listing or executing tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AssemblyInfoOrDefault"
        },
        {
          "lang": "vb",
          "value": "AssemblyInfoOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.AssemblyInfoOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.AssemblyInfoOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault\" text=\"AssemblyInfoOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault\" text=\"AssemblyInfoOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool AssemblyInfoOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property AssemblyInfoOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AssemblyInfoOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 23,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "AssemblyInfoOrDefault"
          },
          {
            "lang": "vb",
            "value": "AssemblyInfoOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.AssemblyInfoOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.AssemblyInfoOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault*\" text=\"AssemblyInfoOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.AssemblyInfoOrDefault*\" text=\"AssemblyInfoOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the runner should return assembly information\nrather than listing or executing tests. If the flag is not specified, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.Debug",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Debug"
        },
        {
          "lang": "vb",
          "value": "Debug"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.Debug"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.Debug"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Debug"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Debug"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Debug\" text=\"Debug\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Debug\" text=\"Debug\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? Debug { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Debug As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Debug",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 34,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.Debug*",
        "name": [
          {
            "lang": "csharp",
            "value": "Debug"
          },
          {
            "lang": "vb",
            "value": "Debug"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.Debug"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.Debug"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Debug"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Debug"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Debug*\" text=\"Debug\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Debug*\" text=\"Debug\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag which indicates whether the runner should attempt to attach the debugger\nbefore running any tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DebugOrDefault"
        },
        {
          "lang": "vb",
          "value": "DebugOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.DebugOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.DebugOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault\" text=\"DebugOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault\" text=\"DebugOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool DebugOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property DebugOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DebugOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 41,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "DebugOrDefault"
          },
          {
            "lang": "vb",
            "value": "DebugOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.DebugOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.DebugOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault*\" text=\"DebugOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.DebugOrDefault*\" text=\"DebugOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the runner should attempt to attach the debugger\nbefore running any tests. If the flag is not specified, returns the default value\n(<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.EnvNameNoColor",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "EnvNameNoColor"
        },
        {
          "lang": "vb",
          "value": "EnvNameNoColor"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.EnvNameNoColor"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.EnvNameNoColor"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.EnvNameNoColor"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.EnvNameNoColor"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.EnvNameNoColor\" text=\"EnvNameNoColor\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.EnvNameNoColor\" text=\"EnvNameNoColor\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public const string EnvNameNoColor = \"NO_COLOR\""
          },
          {
            "lang": "vb",
            "value": "Public Const EnvNameNoColor As String = \"NO_COLOR\""
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "EnvNameNoColor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 28,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "level": 0,
      "type": "field",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets the environment variable name used to test for the user requesting no color output.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IgnoreFailures"
        },
        {
          "lang": "vb",
          "value": "IgnoreFailures"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.IgnoreFailures"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.IgnoreFailures"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures\" text=\"IgnoreFailures\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures\" text=\"IgnoreFailures\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? IgnoreFailures { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property IgnoreFailures As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IgnoreFailures",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 46,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures*",
        "name": [
          {
            "lang": "csharp",
            "value": "IgnoreFailures"
          },
          {
            "lang": "vb",
            "value": "IgnoreFailures"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.IgnoreFailures"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.IgnoreFailures"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures*\" text=\"IgnoreFailures\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailures*\" text=\"IgnoreFailures\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag which indicates whether the runner should ignore test failures.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IgnoreFailuresOrDefault"
        },
        {
          "lang": "vb",
          "value": "IgnoreFailuresOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.IgnoreFailuresOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.IgnoreFailuresOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault\" text=\"IgnoreFailuresOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault\" text=\"IgnoreFailuresOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool IgnoreFailuresOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property IgnoreFailuresOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IgnoreFailuresOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 52,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "IgnoreFailuresOrDefault"
          },
          {
            "lang": "vb",
            "value": "IgnoreFailuresOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.IgnoreFailuresOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.IgnoreFailuresOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault*\" text=\"IgnoreFailuresOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.IgnoreFailuresOrDefault*\" text=\"IgnoreFailuresOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the runner should ignore test failures. If the\nflag is not specified, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.List",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "List"
        },
        {
          "lang": "vb",
          "value": "List"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.List"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.List"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.List"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.List"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.List\" text=\"List\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.List\" text=\"List\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public (ListOption Option, ListFormat Format)? List { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property List As ([Option] As ListOption, Format As ListFormat)?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.ValueTuple{Xunit.Runner.Common.ListOption,Xunit.Runner.Common.ListFormat}}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "(ListOption Option, ListFormat Format)?"
              },
              {
                "lang": "vb",
                "value": "(Option As ListOption, Format As ListFormat)?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "(ListOption Option, ListFormat Format)?"
              },
              {
                "lang": "vb",
                "value": "(Option As ListOption, Format As ListFormat)?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "(Xunit.Runner.Common.ListOption Option, Xunit.Runner.Common.ListFormat Format)?"
              },
              {
                "lang": "vb",
                "value": "(Option As Xunit.Runner.Common.ListOption, Format As Xunit.Runner.Common.ListFormat)?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "(<a class=\"xref\" href=\"Xunit.Runner.Common.ListOption.html\">ListOption</a> <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-xunit.runner.common.listoption,xunit.runner.common.listformat-.option\">Option</a>, <a class=\"xref\" href=\"Xunit.Runner.Common.ListFormat.html\">ListFormat</a> <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-xunit.runner.common.listoption,xunit.runner.common.listformat-.format\">Format</a>)?"
              },
              {
                "lang": "vb",
                "value": "(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-xunit.runner.common.listoption,xunit.runner.common.listformat-.option\">Option</a> As <a class=\"xref\" href=\"Xunit.Runner.Common.ListOption.html\">ListOption</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-xunit.runner.common.listoption,xunit.runner.common.listformat-.format\">Format</a> As <a class=\"xref\" href=\"Xunit.Runner.Common.ListFormat.html\">ListFormat</a>)?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "List",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 58,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.List*",
        "name": [
          {
            "lang": "csharp",
            "value": "List"
          },
          {
            "lang": "vb",
            "value": "List"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.List"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.List"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.List"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.List"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.List*\" text=\"List\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.List*\" text=\"List\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag to indicate that we should list things instead of run them\n(and what we're listing, and in what format).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoAutoReporters"
        },
        {
          "lang": "vb",
          "value": "NoAutoReporters"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoAutoReporters"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoAutoReporters"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters\" text=\"NoAutoReporters\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters\" text=\"NoAutoReporters\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? NoAutoReporters { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property NoAutoReporters As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoAutoReporters",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 72,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoAutoReporters"
          },
          {
            "lang": "vb",
            "value": "NoAutoReporters"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoAutoReporters"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoAutoReporters"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters*\" text=\"NoAutoReporters\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReporters*\" text=\"NoAutoReporters\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should not attempt to use any\nautomatically (aka environmentally) enabled reporters.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoAutoReportersOrDefault"
        },
        {
          "lang": "vb",
          "value": "NoAutoReportersOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoAutoReportersOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoAutoReportersOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault\" text=\"NoAutoReportersOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault\" text=\"NoAutoReportersOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool NoAutoReportersOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property NoAutoReportersOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoAutoReportersOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 79,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoAutoReportersOrDefault"
          },
          {
            "lang": "vb",
            "value": "NoAutoReportersOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoAutoReportersOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoAutoReportersOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault*\" text=\"NoAutoReportersOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoAutoReportersOrDefault*\" text=\"NoAutoReportersOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner should not attempt to use any automatically\n(aka environmentally) enabled reporters. If the flag is not set, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoColor",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoColor"
        },
        {
          "lang": "vb",
          "value": "NoColor"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoColor"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoColor"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColor"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColor"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColor\" text=\"NoColor\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColor\" text=\"NoColor\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? NoColor { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property NoColor As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoColor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 85,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoColor*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoColor"
          },
          {
            "lang": "vb",
            "value": "NoColor"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoColor"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoColor"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColor"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColor"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColor*\" text=\"NoColor\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColor*\" text=\"NoColor\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should not output any color codes\nwhen writing text to the console.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "NoColorOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoColorOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault\" text=\"NoColorOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault\" text=\"NoColorOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool NoColorOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property NoColorOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoColorOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 92,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "NoColorOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoColorOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault*\" text=\"NoColorOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoColorOrDefault*\" text=\"NoColorOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner should not output any color codes when writing\ntext to the console. If the flag is not set, returns <code>true</code> if the user has defined\nthe NO_COLOR environment variable, or <code>false</code> otherwise.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoLogo"
        },
        {
          "lang": "vb",
          "value": "NoLogo"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoLogo"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoLogo"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogo\" text=\"NoLogo\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogo\" text=\"NoLogo\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? NoLogo { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property NoLogo As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoLogo",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 98,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoLogo"
          },
          {
            "lang": "vb",
            "value": "NoLogo"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoLogo"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoLogo"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogo"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogo*\" text=\"NoLogo\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogo*\" text=\"NoLogo\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should not output the copyright\ninformation.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "NoLogoOrDefault"
        },
        {
          "lang": "vb",
          "value": "NoLogoOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.NoLogoOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.NoLogoOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault\" text=\"NoLogoOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault\" text=\"NoLogoOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool NoLogoOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property NoLogoOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "NoLogoOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 104,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "NoLogoOrDefault"
          },
          {
            "lang": "vb",
            "value": "NoLogoOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.NoLogoOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.NoLogoOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault*\" text=\"NoLogoOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.NoLogoOrDefault*\" text=\"NoLogoOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner hsould not output the copyright information.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.Output",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Output"
        },
        {
          "lang": "vb",
          "value": "Output"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.Output"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.Output"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Output"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Output"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Output\" text=\"Output\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Output\" text=\"Output\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public Dictionary<string, string> Output { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Output As Dictionary(Of String, String)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.Dictionary{System.String,System.String}",
            "definition": "System.Collections.Generic.Dictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "Dictionary<string, string>"
              },
              {
                "lang": "vb",
                "value": "Dictionary(Of String, String)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Dictionary<string, string>"
              },
              {
                "lang": "vb",
                "value": "Dictionary(Of String, String)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.Dictionary<string, string>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.Dictionary(Of String, String)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2\">Dictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2\">Dictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Output",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 66,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.Output*",
        "name": [
          {
            "lang": "csharp",
            "value": "Output"
          },
          {
            "lang": "vb",
            "value": "Output"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.Output"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.Output"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Output"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Output"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Output*\" text=\"Output\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Output*\" text=\"Output\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">The output files that should be generated from the test run. The key is\nthe output type, and the value is the output filename. The output type matches\nthe <xref href=\"Xunit.Runner.Common.Transform.ID\" data-throw-if-not-resolved=\"false\"></xref> property on the transforms available in\n<xref href=\"Xunit.Runner.Common.TransformFactory\" data-throw-if-not-resolved=\"false\"></xref>.<xref href=\"Xunit.Runner.Common.TransformFactory.AvailableTransforms\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.Pause",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Pause"
        },
        {
          "lang": "vb",
          "value": "Pause"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.Pause"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.Pause"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Pause"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Pause"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Pause\" text=\"Pause\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Pause\" text=\"Pause\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? Pause { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Pause As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Pause",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 110,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.Pause*",
        "name": [
          {
            "lang": "csharp",
            "value": "Pause"
          },
          {
            "lang": "vb",
            "value": "Pause"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.Pause"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.Pause"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Pause"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Pause"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Pause*\" text=\"Pause\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Pause*\" text=\"Pause\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should pause before running any\ntests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PauseOrDefault"
        },
        {
          "lang": "vb",
          "value": "PauseOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.PauseOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.PauseOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault\" text=\"PauseOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault\" text=\"PauseOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool PauseOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property PauseOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PauseOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 116,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "PauseOrDefault"
          },
          {
            "lang": "vb",
            "value": "PauseOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.PauseOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.PauseOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault*\" text=\"PauseOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.PauseOrDefault*\" text=\"PauseOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner should pause before running any tests.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "UseAnsiColor"
        },
        {
          "lang": "vb",
          "value": "UseAnsiColor"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.UseAnsiColor"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.UseAnsiColor"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor\" text=\"UseAnsiColor\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor\" text=\"UseAnsiColor\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? UseAnsiColor { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property UseAnsiColor As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "UseAnsiColor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 122,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor*",
        "name": [
          {
            "lang": "csharp",
            "value": "UseAnsiColor"
          },
          {
            "lang": "vb",
            "value": "UseAnsiColor"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.UseAnsiColor"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.UseAnsiColor"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor*\" text=\"UseAnsiColor\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColor*\" text=\"UseAnsiColor\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that ANSI color usage should be forced on Windows.\nANSI color is always used for non-Windows.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "UseAnsiColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "UseAnsiColorOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.UseAnsiColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.UseAnsiColorOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault\" text=\"UseAnsiColorOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault\" text=\"UseAnsiColorOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool UseAnsiColorOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property UseAnsiColorOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "UseAnsiColorOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 128,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "UseAnsiColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "UseAnsiColorOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.UseAnsiColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.UseAnsiColorOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault*\" text=\"UseAnsiColorOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.UseAnsiColorOrDefault*\" text=\"UseAnsiColorOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that ANSI color usage should be forced on Windows. ANSI color is\nalways used for non-Windows. If the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.Wait",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Wait"
        },
        {
          "lang": "vb",
          "value": "Wait"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.Wait"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.Wait"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Wait"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.Wait"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Wait\" text=\"Wait\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Wait\" text=\"Wait\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? Wait { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Wait As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Wait",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 134,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.Wait*",
        "name": [
          {
            "lang": "csharp",
            "value": "Wait"
          },
          {
            "lang": "vb",
            "value": "Wait"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.Wait"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.Wait"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Wait"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.Wait"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Wait*\" text=\"Wait\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.Wait*\" text=\"Wait\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should pause after all tests\nhave run.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "WaitForDebugger"
        },
        {
          "lang": "vb",
          "value": "WaitForDebugger"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.WaitForDebugger"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.WaitForDebugger"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger\" text=\"WaitForDebugger\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger\" text=\"WaitForDebugger\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? WaitForDebugger { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property WaitForDebugger As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "WaitForDebugger",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 146,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger*",
        "name": [
          {
            "lang": "csharp",
            "value": "WaitForDebugger"
          },
          {
            "lang": "vb",
            "value": "WaitForDebugger"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.WaitForDebugger"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.WaitForDebugger"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger*\" text=\"WaitForDebugger\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebugger*\" text=\"WaitForDebugger\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets or sets a flag indicating that the test runner should wait for a debugger to be\nattached before performing any actions.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "WaitForDebuggerOrDefault"
        },
        {
          "lang": "vb",
          "value": "WaitForDebuggerOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.WaitForDebuggerOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.WaitForDebuggerOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault\" text=\"WaitForDebuggerOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault\" text=\"WaitForDebuggerOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool WaitForDebuggerOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property WaitForDebuggerOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "WaitForDebuggerOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 152,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "WaitForDebuggerOrDefault"
          },
          {
            "lang": "vb",
            "value": "WaitForDebuggerOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.WaitForDebuggerOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.WaitForDebuggerOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault*\" text=\"WaitForDebuggerOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitForDebuggerOrDefault*\" text=\"WaitForDebuggerOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner should wait for a debugger to be attached\nbefore performing any actions. If the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.Common.TestProjectConfiguration",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "WaitOrDefault"
        },
        {
          "lang": "vb",
          "value": "WaitOrDefault"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestProjectConfiguration.WaitOrDefault"
        },
        {
          "lang": "vb",
          "value": "TestProjectConfiguration.WaitOrDefault"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault\" text=\"WaitOrDefault\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault\" text=\"WaitOrDefault\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool WaitOrDefault { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property WaitOrDefault As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "WaitOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
        "startLine": 140,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.common"
      ],
      "namespace": "Xunit.Runner.Common",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "WaitOrDefault"
          },
          {
            "lang": "vb",
            "value": "WaitOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestProjectConfiguration.WaitOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestProjectConfiguration.WaitOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault*\" text=\"WaitOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.Common.TestProjectConfiguration.WaitOrDefault*\" text=\"WaitOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating that the test runner should pause after all tests have run.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "TestProjectConfiguration"
    },
    {
      "lang": "vb",
      "value": "TestProjectConfiguration"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "TestProjectConfiguration"
    },
    {
      "lang": "vb",
      "value": "TestProjectConfiguration"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.Common.TestProjectConfiguration"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.Common.TestProjectConfiguration"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "TestProjectConfiguration",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.common/Frameworks/TestProjectConfiguration.cs",
    "startLine": 10,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.common"
  ],
  "namespace": {
    "uid": "Xunit.Runner.Common",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.Common"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.Common"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.Common.html\">Common</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml\" sourcestartlinenumber=\"1\">Represents the configuration settings for a test runner which are independent of the test\nassembly. Are usually passed via command line or some other equivalent mechanism. Accessed\nvia <xref href=\"Xunit.Runner.Common.XunitProject\" data-throw-if-not-resolved=\"false\"></xref>.<xref href=\"Xunit.Runner.Common.XunitProject.Configuration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class TestProjectConfiguration"
      },
      {
        "lang": "vb",
        "value": "Public Class TestProjectConfiguration"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-common/Xunit.Runner.Common.TestProjectConfiguration.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-common/toc.yml",
  "_tocPath": "v3-2.0.0/runner-common/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}