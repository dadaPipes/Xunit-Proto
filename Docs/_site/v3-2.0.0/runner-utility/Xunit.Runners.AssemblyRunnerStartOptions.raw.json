{
  "uid": "Xunit.Runners.AssemblyRunnerStartOptions",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runners",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runners.html\">Runners</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runners.html\">Runners</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessages"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.DiagnosticMessages"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages\" text=\"DiagnosticMessages\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages\" text=\"DiagnosticMessages\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? DiagnosticMessages { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property DiagnosticMessages As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 17,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.DiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates whether diagnostic messages should be generated. If unset (or set\nto <code>null</code>), will use the value from the configuration file (and if that\nisn't set, will use the default value of <code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.Empty",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Empty"
        },
        {
          "lang": "vb",
          "value": "Empty"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.Empty"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.Empty"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.Empty"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.Empty"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Empty\" text=\"Empty\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Empty\" text=\"Empty\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static AssemblyRunnerStartOptions Empty { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property Empty As AssemblyRunnerStartOptions"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Runners.AssemblyRunnerStartOptions",
            "name": [
              {
                "lang": "csharp",
                "value": "AssemblyRunnerStartOptions"
              },
              {
                "lang": "vb",
                "value": "AssemblyRunnerStartOptions"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AssemblyRunnerStartOptions"
              },
              {
                "lang": "vb",
                "value": "AssemblyRunnerStartOptions"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runners.AssemblyRunnerStartOptions"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runners.AssemblyRunnerStartOptions"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions\" text=\"AssemblyRunnerStartOptions\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions\" text=\"AssemblyRunnerStartOptions\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Empty",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 22,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.Empty*",
        "name": [
          {
            "lang": "csharp",
            "value": "Empty"
          },
          {
            "lang": "vb",
            "value": "Empty"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.Empty"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.Empty"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.Empty"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.Empty"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Empty*\" text=\"Empty\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Empty*\" text=\"Empty\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Gets an empty set of options (representing all default behavior).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "InternalDiagnosticMessages"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.InternalDiagnosticMessages"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages\" text=\"InternalDiagnosticMessages\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages\" text=\"InternalDiagnosticMessages\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? InternalDiagnosticMessages { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property InternalDiagnosticMessages As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "InternalDiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 32,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "InternalDiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.InternalDiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages*\" text=\"InternalDiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.InternalDiagnosticMessages*\" text=\"InternalDiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates whether internal diagnostic messages should be generated (these are\ntypically low level diagnostic messages from the test engine itself that may\nbe requested by xUnit.net developers when debugging issues inside xUnit.net\nitself). If unset (or set to <code>null</code>), will use the value from the\nconfiguraiton file (and if that isn't set, will use the default value\nof <code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "MaxParallelThreads"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.MaxParallelThreads"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads\" text=\"MaxParallelThreads\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads\" text=\"MaxParallelThreads\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? MaxParallelThreads { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MaxParallelThreads As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MaxParallelThreads",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 43,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "MaxParallelThreads"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.MaxParallelThreads"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates how many threads to use to run parallel tests (will have no affect\nif parallelism is turned off). A value of <code>-1</code> indicates a desire for\nno thread limit; a value of <code>0</code> indicates a desire for the default\nlimit (which is <xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref>); a value greater\nthan 0 indicates an exact thread count is desired. If unset (or set to\n<code>null</code>), will use the value from the configuration file (and if that\nisn't set, will use the default value of <xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "MethodDisplay"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.MethodDisplay"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay\" text=\"MethodDisplay\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay\" text=\"MethodDisplay\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplay? MethodDisplay { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MethodDisplay As TestMethodDisplay?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplay}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplay",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 50,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "MethodDisplay"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.MethodDisplay"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay*\" text=\"MethodDisplay\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplay*\" text=\"MethodDisplay\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates how to display test methods. If unset (or set to <code>null</code>),\nwill use the value from the configuration file (and if that isn't set,\nwill use the default value of <xref href=\"Xunit.Sdk.TestMethodDisplay.ClassAndMethod\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOptions"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.MethodDisplayOptions"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions\" text=\"MethodDisplayOptions\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions\" text=\"MethodDisplayOptions\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public TestMethodDisplayOptions? MethodDisplayOptions { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property MethodDisplayOptions As TestMethodDisplayOptions?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 57,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.MethodDisplayOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates how to interpret test method names for display. If unset (or set\nto <code>null</code>), will use the value from the configuration file (and if that\nisn't set, will use the default value of <xref href=\"Xunit.Sdk.TestMethodDisplayOptions.None\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Parallel"
        },
        {
          "lang": "vb",
          "value": "Parallel"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.Parallel"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.Parallel"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Parallel\" text=\"Parallel\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Parallel\" text=\"Parallel\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? Parallel { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property Parallel As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Parallel",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 65,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel*",
        "name": [
          {
            "lang": "csharp",
            "value": "Parallel"
          },
          {
            "lang": "vb",
            "value": "Parallel"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.Parallel"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.Parallel"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.Parallel"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Parallel*\" text=\"Parallel\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.Parallel*\" text=\"Parallel\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates whether to run test collections in parallel. If unset (or set to\n<code>null</code>), will use the value from the configuration file (and if that\nisn't set, will use the default value of <code>true</code>). Note that test\ncollection parallelization is only available in v2 test projects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "ParallelAlgorithm"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.ParallelAlgorithm"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ParallelAlgorithm? ParallelAlgorithm { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property ParallelAlgorithm As ParallelAlgorithm?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ParallelAlgorithm}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelAlgorithm",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 76,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "ParallelAlgorithm"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.ParallelAlgorithm"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates which algorithm to use when parallelizing tests (will have no effect\nif parallelism is turned off or if the max parallel threads is set to <code>-1</code>).\nIf unset (or set to <code>null</code>), will use the value from the configuration\nfile (and if that isn't set, will use the default value of\n<xref href=\"Xunit.Sdk.ParallelAlgorithm.Conservative\" data-throw-if-not-resolved=\"false\"></xref>. For more information on the\nparallelism algorithms, see\n<a href=\"https://xunit.net/docs/running-tests-in-parallel#algorithms\">https://xunit.net/docs/running-tests-in-parallel#algorithms</a>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "PreEnumerateTheories"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.PreEnumerateTheories"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories\" text=\"PreEnumerateTheories\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories\" text=\"PreEnumerateTheories\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool? PreEnumerateTheories { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property PreEnumerateTheories As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PreEnumerateTheories",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 84,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories*",
        "name": [
          {
            "lang": "csharp",
            "value": "PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "PreEnumerateTheories"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.PreEnumerateTheories"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates whether theories should be pre-enumerated (that is, enumerated during\ndiscovery rather than during execution). If unset (or set to <code>null</code>),\nwill use the value from the configuration file (and if that isn't set,\nwill use the default value of <code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runners.AssemblyRunnerStartOptions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TypesToRun"
        },
        {
          "lang": "vb",
          "value": "TypesToRun"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssemblyRunnerStartOptions.TypesToRun"
        },
        {
          "lang": "vb",
          "value": "AssemblyRunnerStartOptions.TypesToRun"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun\" text=\"TypesToRun\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun\" text=\"TypesToRun\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string[] TypesToRun { get; set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property TypesToRun As String()"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String[]",
            "name": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>[]"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>()"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TypesToRun",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
        "startLine": 89,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runners",
      "example": [],
      "overload": {
        "uid": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun*",
        "name": [
          {
            "lang": "csharp",
            "value": "TypesToRun"
          },
          {
            "lang": "vb",
            "value": "TypesToRun"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssemblyRunnerStartOptions.TypesToRun"
          },
          {
            "lang": "vb",
            "value": "AssemblyRunnerStartOptions.TypesToRun"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun*\" text=\"TypesToRun\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runners.AssemblyRunnerStartOptions.TypesToRun*\" text=\"TypesToRun\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Indicates the types to be run. If empty, will run all types in the assembly.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "AssemblyRunnerStartOptions"
    },
    {
      "lang": "vb",
      "value": "AssemblyRunnerStartOptions"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "AssemblyRunnerStartOptions"
    },
    {
      "lang": "vb",
      "value": "AssemblyRunnerStartOptions"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runners.AssemblyRunnerStartOptions"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runners.AssemblyRunnerStartOptions"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "AssemblyRunnerStartOptions",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Runners/AssemblyRunnerStartOptions.cs",
    "startLine": 8,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.utility.netfx"
  ],
  "namespace": {
    "uid": "Xunit.Runners",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runners"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runners"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runners.html\">Runners</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runners.html\">Runners</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml\" sourcestartlinenumber=\"1\">Represents options to be used when calling <xref href=\"Xunit.Runners.AssemblyRunner.Start(Xunit.Runners.AssemblyRunnerStartOptions)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class AssemblyRunnerStartOptions"
      },
      {
        "lang": "vb",
        "value": "Public Class AssemblyRunnerStartOptions"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-utility/Xunit.Runners.AssemblyRunnerStartOptions.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-utility/toc.yml",
  "_tocPath": "v3-2.0.0/runner-utility/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}