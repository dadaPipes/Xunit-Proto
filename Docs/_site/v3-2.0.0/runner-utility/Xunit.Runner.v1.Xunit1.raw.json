{
  "uid": "Xunit.Runner.v1.Xunit1",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.v1",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v1.html\">v1</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v1.html\">v1</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.v1.Xunit1.#ctor(Xunit.Sdk.IMessageSink,Xunit.Runner.Common.AppDomainSupport,Xunit.Runner.Common.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Xunit1(IMessageSink, AppDomainSupport, ISourceInformationProvider, string, string?, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "New(IMessageSink, AppDomainSupport, ISourceInformationProvider, String, String, Boolean, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.Xunit1(IMessageSink, AppDomainSupport, ISourceInformationProvider, string, string?, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.New(IMessageSink, AppDomainSupport, ISourceInformationProvider, String, String, Boolean, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.Xunit1(Xunit.Sdk.IMessageSink, Xunit.Runner.Common.AppDomainSupport, Xunit.Runner.Common.ISourceInformationProvider, string, string?, bool, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.New(Xunit.Sdk.IMessageSink, Xunit.Runner.Common.AppDomainSupport, Xunit.Runner.Common.ISourceInformationProvider, String, String, Boolean, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.#ctor(Xunit.Sdk.IMessageSink,Xunit.Runner.Common.AppDomainSupport,Xunit.Runner.Common.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String)\" text=\"Xunit1(IMessageSink, AppDomainSupport, ISourceInformationProvider, string, string?, bool, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.#ctor(Xunit.Sdk.IMessageSink,Xunit.Runner.Common.AppDomainSupport,Xunit.Runner.Common.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String)\" text=\"Xunit1(IMessageSink, AppDomainSupport, ISourceInformationProvider, string, string?, bool, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected Xunit1(IMessageSink diagnosticMessageSink, AppDomainSupport appDomainSupport, ISourceInformationProvider sourceInformationProvider, string assemblyFileName, string? configFileName = null, bool shadowCopy = true, string? shadowCopyFolder = null)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub New(diagnosticMessageSink As IMessageSink, appDomainSupport As AppDomainSupport, sourceInformationProvider As ISourceInformationProvider, assemblyFileName As String, configFileName As String = Nothing, shadowCopy As Boolean = True, shadowCopyFolder As String = Nothing)"
          }
        ],
        "parameters": [
          {
            "id": "diagnosticMessageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            }
          },
          {
            "id": "appDomainSupport",
            "type": {
              "uid": "Xunit.Runner.Common.AppDomainSupport",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AppDomainSupport"
                },
                {
                  "lang": "vb",
                  "value": "AppDomainSupport"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AppDomainSupport"
                },
                {
                  "lang": "vb",
                  "value": "AppDomainSupport"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.AppDomainSupport"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.AppDomainSupport"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.AppDomainSupport\" text=\"AppDomainSupport\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.AppDomainSupport\" text=\"AppDomainSupport\"/>"
                }
              ]
            }
          },
          {
            "id": "sourceInformationProvider",
            "type": {
              "uid": "Xunit.Runner.Common.ISourceInformationProvider",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                }
              ]
            }
          },
          {
            "id": "assemblyFileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "configFileName",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          },
          {
            "id": "shadowCopy",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            }
          },
          {
            "id": "shadowCopyFolder",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": ".ctor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 40,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.#ctor*",
        "name": [
          {
            "lang": "csharp",
            "value": "Xunit1"
          },
          {
            "lang": "vb",
            "value": "New"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.Xunit1"
          },
          {
            "lang": "vb",
            "value": "Xunit1.New"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.Xunit1"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.New"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.#ctor*\" text=\"Xunit1\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.#ctor*\" text=\"Xunit1\"/>"
          }
        ]
      },
      "level": 0,
      "type": "constructor",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">This constructor is used by factory methods and unit tests only.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.CanUseAppDomains",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "CanUseAppDomains"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "Xunit1.CanUseAppDomains"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.CanUseAppDomains"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool CanUseAppDomains { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property CanUseAppDomains As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CanUseAppDomains",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 65,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.CanUseAppDomains*",
        "name": [
          {
            "lang": "csharp",
            "value": "CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "CanUseAppDomains"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "Xunit1.CanUseAppDomains"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.CanUseAppDomains"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CanUseAppDomains*\" text=\"CanUseAppDomains\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CanUseAppDomains*\" text=\"CanUseAppDomains\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains",
          "name": [
            {
              "lang": "csharp",
              "value": "CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "CanUseAppDomains"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.CanUseAppDomains"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Gets a flag indicating whether this discovery/execution can use app domains.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.CreateExecutor",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CreateExecutor()"
        },
        {
          "lang": "vb",
          "value": "CreateExecutor()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.CreateExecutor()"
        },
        {
          "lang": "vb",
          "value": "Xunit1.CreateExecutor()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.CreateExecutor()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.CreateExecutor()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CreateExecutor\" text=\"CreateExecutor()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CreateExecutor\" text=\"CreateExecutor()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected virtual IXunit1Executor CreateExecutor()"
          },
          {
            "lang": "vb",
            "value": "Protected Overridable Function CreateExecutor() As IXunit1Executor"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Runner.v1.IXunit1Executor",
            "name": [
              {
                "lang": "csharp",
                "value": "IXunit1Executor"
              },
              {
                "lang": "vb",
                "value": "IXunit1Executor"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IXunit1Executor"
              },
              {
                "lang": "vb",
                "value": "IXunit1Executor"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Runner.v1.IXunit1Executor"
              },
              {
                "lang": "vb",
                "value": "Xunit.Runner.v1.IXunit1Executor"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Runner.v1.IXunit1Executor\" text=\"IXunit1Executor\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Runner.v1.IXunit1Executor\" text=\"IXunit1Executor\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The executor wrapper.</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CreateExecutor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 85,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.CreateExecutor*",
        "name": [
          {
            "lang": "csharp",
            "value": "CreateExecutor"
          },
          {
            "lang": "vb",
            "value": "CreateExecutor"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.CreateExecutor"
          },
          {
            "lang": "vb",
            "value": "Xunit1.CreateExecutor"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.CreateExecutor"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.CreateExecutor"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CreateExecutor*\" text=\"CreateExecutor\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.CreateExecutor*\" text=\"CreateExecutor\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Creates a wrapper to call the Executor call from xUnit.net v1.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.DisposeAsync",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "DisposeAsync()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "Xunit1.DisposeAsync()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.DisposeAsync()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.DisposeAsync\" text=\"DisposeAsync()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.DisposeAsync\" text=\"DisposeAsync()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public ValueTask DisposeAsync()"
          },
          {
            "lang": "vb",
            "value": "Public Function DisposeAsync() As ValueTask"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Threading.Tasks.ValueTask",
            "name": [
              {
                "lang": "csharp",
                "value": "ValueTask"
              },
              {
                "lang": "vb",
                "value": "ValueTask"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ValueTask"
              },
              {
                "lang": "vb",
                "value": "ValueTask"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.Tasks.ValueTask"
              },
              {
                "lang": "vb",
                "value": "System.Threading.Tasks.ValueTask"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Threading.Tasks.ValueTask\" text=\"ValueTask\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Threading.Tasks.ValueTask\" text=\"ValueTask\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisposeAsync",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 89,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.DisposeAsync*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "DisposeAsync"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "Xunit1.DisposeAsync"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.DisposeAsync"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.DisposeAsync*\" text=\"DisposeAsync\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.DisposeAsync*\" text=\"DisposeAsync\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.IAsyncDisposable.DisposeAsync",
          "name": [
            {
              "lang": "csharp",
              "value": "DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "DisposeAsync()"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IAsyncDisposable.DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "IAsyncDisposable.DisposeAsync()"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.IAsyncDisposable.DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "System.IAsyncDisposable.DisposeAsync()"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync\">DisposeAsync</a>()"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync\">DisposeAsync</a>()"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Performs application-defined tasks associated with freeing, releasing, or\nresetting unmanaged resources asynchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Find(IMessageSink, bool, Predicate<ITestCaseDiscovered>?)"
        },
        {
          "lang": "vb",
          "value": "Find(IMessageSink, Boolean, Predicate(Of ITestCaseDiscovered))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.Find(IMessageSink, bool, Predicate<ITestCaseDiscovered>?)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.Find(IMessageSink, Boolean, Predicate(Of ITestCaseDiscovered))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink, bool, System.Predicate<Xunit.Sdk.ITestCaseDiscovered>?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink, Boolean, System.Predicate(Of Xunit.Sdk.ITestCaseDiscovered))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered})\" text=\"Find(IMessageSink, bool, Predicate&lt;ITestCaseDiscovered&gt;?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered})\" text=\"Find(IMessageSink, bool, Predicate&lt;ITestCaseDiscovered&gt;?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void Find(IMessageSink messageSink, bool includeSourceInformation, Predicate<ITestCaseDiscovered>? filter)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub Find(messageSink As IMessageSink, includeSourceInformation As Boolean, filter As Predicate(Of ITestCaseDiscovered))"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            }
          },
          {
            "id": "includeSourceInformation",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            }
          },
          {
            "id": "filter",
            "type": {
              "uid": "System.Predicate{Xunit.Sdk.ITestCaseDiscovered}",
              "definition": "System.Predicate`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Predicate<ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "Predicate(Of ITestCaseDiscovered)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Predicate<ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "Predicate(Of ITestCaseDiscovered)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Predicate<Xunit.Sdk.ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "System.Predicate(Of Xunit.Sdk.ITestCaseDiscovered)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.predicate-1\">Predicate</a>&lt;<xref uid=\"Xunit.Sdk.ITestCaseDiscovered\" text=\"ITestCaseDiscovered\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.predicate-1\">Predicate</a>(Of <xref uid=\"Xunit.Sdk.ITestCaseDiscovered\" text=\"ITestCaseDiscovered\"/>)"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Find",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 105,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.Find*",
        "name": [
          {
            "lang": "csharp",
            "value": "Find"
          },
          {
            "lang": "vb",
            "value": "Find"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit1.Find"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.Find"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find*\" text=\"Find\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find*\" text=\"Find\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">INTERNAL METHOD, FOR TESTING PURPOSES ONLY. DO NOT CALL.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Find(IMessageSink, FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Find(IMessageSink, FrontControllerFindSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.Find(IMessageSink, FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.Find(IMessageSink, FrontControllerFindSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)\" text=\"Find(IMessageSink, FrontControllerFindSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)\" text=\"Find(IMessageSink, FrontControllerFindSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Find(IMessageSink messageSink, FrontControllerFindSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Find(messageSink As IMessageSink, settings As FrontControllerFindSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerFindSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerFindSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerFindSettings\" text=\"FrontControllerFindSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerFindSettings\" text=\"FrontControllerFindSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The settings used during discovery.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Find",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 140,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.Find*",
        "name": [
          {
            "lang": "csharp",
            "value": "Find"
          },
          {
            "lang": "vb",
            "value": "Find"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit1.Find"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.Find"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find*\" text=\"Find\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Find*\" text=\"Find\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "Find(IMessageSink, FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "Find(IMessageSink, FrontControllerFindSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.Find(IMessageSink, FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.Find(IMessageSink, FrontControllerFindSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontControllerDiscoverer.html#Xunit_IFrontControllerDiscoverer_Find_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindSettings_\">Find</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindSettings.html\">FrontControllerFindSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontControllerDiscoverer.html#Xunit_IFrontControllerDiscoverer_Find_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindSettings_\">Find</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindSettings.html\">FrontControllerFindSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Starts the process of finding tests in an assembly. Typically only used by\nrunners which discover tests and present them into a UI for the user to interactively\nchoose for selective run (via <xref href=\"Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerRunSettings)\" data-throw-if-not-resolved=\"false\"></xref>). For runners which\nsimply wish to discover and immediately run tests, they should instead\nuse <xref href=\"Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindAndRunSettings)\" data-throw-if-not-resolved=\"false\"></xref>, which permits the same filtering logic\nas this method.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered},System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FindAndRun(IMessageSink, bool, Predicate<ITestCaseDiscovered>?, bool)"
        },
        {
          "lang": "vb",
          "value": "FindAndRun(IMessageSink, Boolean, Predicate(Of ITestCaseDiscovered), Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.FindAndRun(IMessageSink, bool, Predicate<ITestCaseDiscovered>?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.FindAndRun(IMessageSink, Boolean, Predicate(Of ITestCaseDiscovered), Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink, bool, System.Predicate<Xunit.Sdk.ITestCaseDiscovered>?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink, Boolean, System.Predicate(Of Xunit.Sdk.ITestCaseDiscovered), Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered},System.Boolean)\" text=\"FindAndRun(IMessageSink, bool, Predicate&lt;ITestCaseDiscovered&gt;?, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,System.Boolean,System.Predicate{Xunit.Sdk.ITestCaseDiscovered},System.Boolean)\" text=\"FindAndRun(IMessageSink, bool, Predicate&lt;ITestCaseDiscovered&gt;?, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void FindAndRun(IMessageSink messageSink, bool includeSourceInformation, Predicate<ITestCaseDiscovered>? filter, bool markAllAsNotRun)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub FindAndRun(messageSink As IMessageSink, includeSourceInformation As Boolean, filter As Predicate(Of ITestCaseDiscovered), markAllAsNotRun As Boolean)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            }
          },
          {
            "id": "includeSourceInformation",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            }
          },
          {
            "id": "filter",
            "type": {
              "uid": "System.Predicate{Xunit.Sdk.ITestCaseDiscovered}",
              "definition": "System.Predicate`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Predicate<ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "Predicate(Of ITestCaseDiscovered)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Predicate<ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "Predicate(Of ITestCaseDiscovered)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Predicate<Xunit.Sdk.ITestCaseDiscovered>"
                },
                {
                  "lang": "vb",
                  "value": "System.Predicate(Of Xunit.Sdk.ITestCaseDiscovered)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.predicate-1\">Predicate</a>&lt;<xref uid=\"Xunit.Sdk.ITestCaseDiscovered\" text=\"ITestCaseDiscovered\"/>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.predicate-1\">Predicate</a>(Of <xref uid=\"Xunit.Sdk.ITestCaseDiscovered\" text=\"ITestCaseDiscovered\"/>)"
                }
              ]
            }
          },
          {
            "id": "markAllAsNotRun",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FindAndRun",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 238,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.FindAndRun*",
        "name": [
          {
            "lang": "csharp",
            "value": "FindAndRun"
          },
          {
            "lang": "vb",
            "value": "FindAndRun"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit1.FindAndRun"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.FindAndRun"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun*\" text=\"FindAndRun\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun*\" text=\"FindAndRun\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">INTERNAL METHOD, FOR TESTING PURPOSES ONLY. DO NOT CALL.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)\" text=\"FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)\" text=\"FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void FindAndRun(IMessageSink messageSink, FrontControllerFindAndRunSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub FindAndRun(messageSink As IMessageSink, settings As FrontControllerFindAndRunSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerFindAndRunSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindAndRunSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindAndRunSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerFindAndRunSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerFindAndRunSettings\" text=\"FrontControllerFindAndRunSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerFindAndRunSettings\" text=\"FrontControllerFindAndRunSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The settings used during discovery and execution.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FindAndRun",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 280,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.FindAndRun*",
        "name": [
          {
            "lang": "csharp",
            "value": "FindAndRun"
          },
          {
            "lang": "vb",
            "value": "FindAndRun"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit1.FindAndRun"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.FindAndRun"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun*\" text=\"FindAndRun\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.FindAndRun*\" text=\"FindAndRun\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontController.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontController.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_FindAndRun_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindAndRunSettings_\">FindAndRun</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindAndRunSettings.html\">FrontControllerFindAndRunSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_FindAndRun_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindAndRunSettings_\">FindAndRun</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindAndRunSettings.html\">FrontControllerFindAndRunSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Starts the process of finding and running tests in an assembly. Typically only used\nby runner which do not present test discovery UIs to users that allow them to run\nselected tests (those should instead use <xref href=\"Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindSettings)\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerRunSettings)\" data-throw-if-not-resolved=\"false\"></xref> as separate operations).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?)"
        },
        {
          "lang": "vb",
          "value": "ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider, IMessageSink)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider, IMessageSink)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider?, Xunit.Sdk.IMessageSink?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider, Xunit.Sdk.IMessageSink)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink)\" text=\"ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink)\" text=\"ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IFrontController ForDiscoveryAndExecution(XunitProjectAssembly projectAssembly, ISourceInformationProvider? sourceInformationProvider = null, IMessageSink? diagnosticMessageSink = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForDiscoveryAndExecution(projectAssembly As XunitProjectAssembly, sourceInformationProvider As ISourceInformationProvider = Nothing, diagnosticMessageSink As IMessageSink = Nothing) As IFrontController"
          }
        ],
        "parameters": [
          {
            "id": "projectAssembly",
            "type": {
              "uid": "Xunit.Runner.Common.XunitProjectAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The test project assembly.</p>\n"
          },
          {
            "id": "sourceInformationProvider",
            "type": {
              "uid": "Xunit.Runner.Common.ISourceInformationProvider",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The optional source information provider.</p>\n"
          },
          {
            "id": "diagnosticMessageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The optional message sink which receives <xref href=\"Xunit.Sdk.IDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.Sdk.IInternalDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref> messages.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.IFrontController",
            "name": [
              {
                "lang": "csharp",
                "value": "IFrontController"
              },
              {
                "lang": "vb",
                "value": "IFrontController"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IFrontController"
              },
              {
                "lang": "vb",
                "value": "IFrontController"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.IFrontController"
              },
              {
                "lang": "vb",
                "value": "Xunit.IFrontController"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ForDiscoveryAndExecution",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 516,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "ForDiscoveryAndExecution"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "Xunit1.ForDiscoveryAndExecution"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution*\" text=\"ForDiscoveryAndExecution\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.ForDiscoveryAndExecution*\" text=\"ForDiscoveryAndExecution\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Returns an implementation of <xref href=\"Xunit.IFrontController\" data-throw-if-not-resolved=\"false\"></xref> which can be used\nfor both discovery and execution of xUnit.net v1 tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.Run(System.Collections.Generic.IReadOnlyCollection{Xunit.Runner.v1.Xunit1TestCase},Xunit.Sdk.IMessageSink,System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Run(IReadOnlyCollection<Xunit1TestCase>, IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "Run(IReadOnlyCollection(Of Xunit1TestCase), IMessageSink, Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.Run(IReadOnlyCollection<Xunit1TestCase>, IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.Run(IReadOnlyCollection(Of Xunit1TestCase), IMessageSink, Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.Run(System.Collections.Generic.IReadOnlyCollection<Xunit.Runner.v1.Xunit1TestCase>, Xunit.Sdk.IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.Run(System.Collections.Generic.IReadOnlyCollection(Of Xunit.Runner.v1.Xunit1TestCase), Xunit.Sdk.IMessageSink, Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run(System.Collections.Generic.IReadOnlyCollection{Xunit.Runner.v1.Xunit1TestCase},Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"Run(IReadOnlyCollection&lt;Xunit1TestCase&gt;, IMessageSink, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run(System.Collections.Generic.IReadOnlyCollection{Xunit.Runner.v1.Xunit1TestCase},Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"Run(IReadOnlyCollection&lt;Xunit1TestCase&gt;, IMessageSink, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected void Run(IReadOnlyCollection<Xunit1TestCase> testCases, IMessageSink messageSink, bool markAllAsNotRun)"
          },
          {
            "lang": "vb",
            "value": "Protected Sub Run(testCases As IReadOnlyCollection(Of Xunit1TestCase), messageSink As IMessageSink, markAllAsNotRun As Boolean)"
          }
        ],
        "parameters": [
          {
            "id": "testCases",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.Runner.v1.Xunit1TestCase}",
              "definition": "System.Collections.Generic.IReadOnlyCollection`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<Xunit1TestCase>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of Xunit1TestCase)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<Xunit1TestCase>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of Xunit1TestCase)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.Runner.v1.Xunit1TestCase>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.Runner.v1.Xunit1TestCase)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.Runner.v1.Xunit1TestCase.html\">Xunit1TestCase</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.Runner.v1.Xunit1TestCase.html\">Xunit1TestCase</a>)"
                }
              ]
            }
          },
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            }
          },
          {
            "id": "markAllAsNotRun",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            }
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Run",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 299,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.Run*",
        "name": [
          {
            "lang": "csharp",
            "value": "Run"
          },
          {
            "lang": "vb",
            "value": "Run"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit1.Run"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.Run"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run*\" text=\"Run\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run*\" text=\"Run\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">INTERNAL METHOD, FOR TESTING PURPOSES ONLY. DO NOT CALL.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Run(IMessageSink, FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Run(IMessageSink, FrontControllerRunSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.Run(IMessageSink, FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit1.Run(IMessageSink, FrontControllerRunSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)\" text=\"Run(IMessageSink, FrontControllerRunSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)\" text=\"Run(IMessageSink, FrontControllerRunSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Run(IMessageSink messageSink, FrontControllerRunSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Run(messageSink As IMessageSink, settings As FrontControllerRunSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerRunSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerRunSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerRunSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerRunSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerRunSettings\" text=\"FrontControllerRunSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerRunSettings\" text=\"FrontControllerRunSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">The settings used during execution.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Run",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 363,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.Run*",
        "name": [
          {
            "lang": "csharp",
            "value": "Run"
          },
          {
            "lang": "vb",
            "value": "Run"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit1.Run"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.Run"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run*\" text=\"Run\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.Run*\" text=\"Run\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "Run(IMessageSink, FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Run(IMessageSink, FrontControllerRunSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontController.Run(IMessageSink, FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontController.Run(IMessageSink, FrontControllerRunSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_Run_Xunit_Sdk_IMessageSink_Xunit_FrontControllerRunSettings_\">Run</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerRunSettings.html\">FrontControllerRunSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_Run_Xunit_Sdk_IMessageSink_Xunit_FrontControllerRunSettings_\">Run</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerRunSettings.html\">FrontControllerRunSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Starts the process of running selected tests in the assembly. The serialized test\ncases to run come from calling <xref href=\"Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindSettings)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.TargetFramework",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TargetFramework"
        },
        {
          "lang": "vb",
          "value": "TargetFramework"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.TargetFramework"
        },
        {
          "lang": "vb",
          "value": "Xunit1.TargetFramework"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.TargetFramework"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.TargetFramework"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TargetFramework\" text=\"TargetFramework\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TargetFramework\" text=\"TargetFramework\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TargetFramework { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property TargetFramework As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TargetFramework",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 73,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.TargetFramework*",
        "name": [
          {
            "lang": "csharp",
            "value": "TargetFramework"
          },
          {
            "lang": "vb",
            "value": "TargetFramework"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.TargetFramework"
          },
          {
            "lang": "vb",
            "value": "Xunit1.TargetFramework"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.TargetFramework"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.TargetFramework"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TargetFramework*\" text=\"TargetFramework\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TargetFramework*\" text=\"TargetFramework\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TargetFramework",
          "name": [
            {
              "lang": "csharp",
              "value": "TargetFramework"
            },
            {
              "lang": "vb",
              "value": "TargetFramework"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TargetFramework"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TargetFramework"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TargetFramework"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TargetFramework"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TargetFramework\" text=\"TargetFramework\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TargetFramework\" text=\"TargetFramework\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Gets the target framework that the test assembly is linked against.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyUniqueID"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "Xunit1.TestAssemblyUniqueID"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TestAssemblyUniqueID { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property TestAssemblyUniqueID As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestAssemblyUniqueID",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 76,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyUniqueID"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "Xunit1.TestAssemblyUniqueID"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID*\" text=\"TestAssemblyUniqueID\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestAssemblyUniqueID*\" text=\"TestAssemblyUniqueID\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID",
          "name": [
            {
              "lang": "csharp",
              "value": "TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "TestAssemblyUniqueID"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TestAssemblyUniqueID"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Gets the unique ID for the test assembly provided to the discoverer.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v1.Xunit1",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkDisplayName"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit1.TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit1.TestFrameworkDisplayName"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TestFrameworkDisplayName { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property TestFrameworkDisplayName As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestFrameworkDisplayName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
        "startLine": 79,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v1",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkDisplayName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit1.TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit1.TestFrameworkDisplayName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName*\" text=\"TestFrameworkDisplayName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v1.Xunit1.TestFrameworkDisplayName*\" text=\"TestFrameworkDisplayName\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName",
          "name": [
            {
              "lang": "csharp",
              "value": "TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "TestFrameworkDisplayName"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TestFrameworkDisplayName"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">Returns the display name of the test framework that this discoverer is running tests for.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "Xunit1"
    },
    {
      "lang": "vb",
      "value": "Xunit1"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "Xunit1"
    },
    {
      "lang": "vb",
      "value": "Xunit1"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.v1.Xunit1"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.v1.Xunit1"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "Xunit1",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v1/Xunit1.cs",
    "startLine": 21,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.utility.netfx"
  ],
  "namespace": {
    "uid": "Xunit.Runner.v1",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v1"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v1"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v1.html\">v1</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v1.html\">v1</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml\" sourcestartlinenumber=\"1\">This class is used to do discovery and execution of xUnit.net v1 tests.\nRunner authors are strongly encouraged to use <xref href=\"Xunit.XunitFrontController\" data-throw-if-not-resolved=\"false\"></xref>\ninstead of using this class directly.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class Xunit1 : IFrontController, IFrontControllerDiscoverer, IAsyncDisposable"
      },
      {
        "lang": "vb",
        "value": "Public Class Xunit1 Implements IFrontController, IFrontControllerDiscoverer, IAsyncDisposable"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "implements": [
    {
      "uid": "Xunit.IFrontController",
      "name": [
        {
          "lang": "csharp",
          "value": "IFrontController"
        },
        {
          "lang": "vb",
          "value": "IFrontController"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFrontController"
        },
        {
          "lang": "vb",
          "value": "IFrontController"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.IFrontController"
        },
        {
          "lang": "vb",
          "value": "Xunit.IFrontController"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
        }
      ]
    },
    {
      "uid": "Xunit.IFrontControllerDiscoverer",
      "name": [
        {
          "lang": "csharp",
          "value": "IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "IFrontControllerDiscoverer"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "IFrontControllerDiscoverer"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "Xunit.IFrontControllerDiscoverer"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
        }
      ]
    },
    {
      "uid": "System.IAsyncDisposable",
      "name": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "System.IAsyncDisposable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-utility/Xunit.Runner.v1.Xunit1.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-utility/toc.yml",
  "_tocPath": "v3-2.0.0/runner-utility/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}