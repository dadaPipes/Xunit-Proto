{
  "uid": "Xunit.Runner.v2.Xunit2",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Runner.v2",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v2.html\">v2</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v2.html\">v2</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Runner.v2.Xunit2.CanUseAppDomains",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "CanUseAppDomains"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "Xunit2.CanUseAppDomains"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.CanUseAppDomains"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.CanUseAppDomains"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool CanUseAppDomains { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property CanUseAppDomains As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CanUseAppDomains",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 134,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.CanUseAppDomains*",
        "name": [
          {
            "lang": "csharp",
            "value": "CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "CanUseAppDomains"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "Xunit2.CanUseAppDomains"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.CanUseAppDomains"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.CanUseAppDomains"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CanUseAppDomains*\" text=\"CanUseAppDomains\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CanUseAppDomains*\" text=\"CanUseAppDomains\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains",
          "name": [
            {
              "lang": "csharp",
              "value": "CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "CanUseAppDomains"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.CanUseAppDomains"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.CanUseAppDomains"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.CanUseAppDomains\" text=\"CanUseAppDomains\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Gets a value indicating whether the tests can use app domains (must be linked against desktop execution library).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink(Xunit.Sdk.IMessageSink,System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CreateOptimizedRemoteMessageSink(IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "CreateOptimizedRemoteMessageSink(IMessageSink, Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.CreateOptimizedRemoteMessageSink(IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.CreateOptimizedRemoteMessageSink(IMessageSink, Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink(Xunit.Sdk.IMessageSink, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink(Xunit.Sdk.IMessageSink, Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink(Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"CreateOptimizedRemoteMessageSink(IMessageSink, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink(Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"CreateOptimizedRemoteMessageSink(IMessageSink, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected IMessageSink CreateOptimizedRemoteMessageSink(IMessageSink sink, bool serializeDiscoveredTestCases = true)"
          },
          {
            "lang": "vb",
            "value": "Protected Function CreateOptimizedRemoteMessageSink(sink As IMessageSink, serializeDiscoveredTestCases As Boolean = True) As IMessageSink"
          }
        ],
        "parameters": [
          {
            "id": "sink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The local message sink to receive the messages.</p>\n"
          },
          {
            "id": "serializeDiscoveredTestCases",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">A flag which indicates whether test case serialization is required</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Abstractions.IMessageSink",
            "name": [
              {
                "lang": "csharp",
                "value": "IMessageSink"
              },
              {
                "lang": "vb",
                "value": "IMessageSink"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IMessageSink"
              },
              {
                "lang": "vb",
                "value": "IMessageSink"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Abstractions.IMessageSink"
              },
              {
                "lang": "vb",
                "value": "Xunit.Abstractions.IMessageSink"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Abstractions.IMessageSink\" text=\"IMessageSink\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Abstractions.IMessageSink\" text=\"IMessageSink\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CreateOptimizedRemoteMessageSink",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 189,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink*",
        "name": [
          {
            "lang": "csharp",
            "value": "CreateOptimizedRemoteMessageSink"
          },
          {
            "lang": "vb",
            "value": "CreateOptimizedRemoteMessageSink"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.CreateOptimizedRemoteMessageSink"
          },
          {
            "lang": "vb",
            "value": "Xunit2.CreateOptimizedRemoteMessageSink"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink*\" text=\"CreateOptimizedRemoteMessageSink\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.CreateOptimizedRemoteMessageSink*\" text=\"CreateOptimizedRemoteMessageSink\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Creates a high performance cross-AppDomain message sink that utilizes <xref href=\"Xunit.Runner.v2.IMessageSinkWithTypes\" data-throw-if-not-resolved=\"false\"></xref>\nwhich can be passed to <xref href=\"Xunit.Abstractions.ITestFrameworkDiscoverer\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Xunit.Abstractions.ITestFrameworkExecutor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessageSink"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessageSink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.DiagnosticMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit2.DiagnosticMessageSink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DiagnosticMessageSink\" text=\"DiagnosticMessageSink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DiagnosticMessageSink\" text=\"DiagnosticMessageSink\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public IMessageSink DiagnosticMessageSink { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property DiagnosticMessageSink As IMessageSink"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.IMessageSink",
            "name": [
              {
                "lang": "csharp",
                "value": "IMessageSink"
              },
              {
                "lang": "vb",
                "value": "IMessageSink"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IMessageSink"
              },
              {
                "lang": "vb",
                "value": "IMessageSink"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.IMessageSink"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.IMessageSink"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessageSink",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 139,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessageSink"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessageSink"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.DiagnosticMessageSink"
          },
          {
            "lang": "vb",
            "value": "Xunit2.DiagnosticMessageSink"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.DiagnosticMessageSink"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DiagnosticMessageSink*\" text=\"DiagnosticMessageSink\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DiagnosticMessageSink*\" text=\"DiagnosticMessageSink\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Gets the message sink used to report diagnostic messages.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.DisposalTracker",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisposalTracker"
        },
        {
          "lang": "vb",
          "value": "DisposalTracker"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.DisposalTracker"
        },
        {
          "lang": "vb",
          "value": "Xunit2.DisposalTracker"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.DisposalTracker"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.DisposalTracker"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposalTracker\" text=\"DisposalTracker\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposalTracker\" text=\"DisposalTracker\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected DisposalTracker DisposalTracker { get; }"
          },
          {
            "lang": "vb",
            "value": "Protected ReadOnly Property DisposalTracker As DisposalTracker"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.DisposalTracker",
            "name": [
              {
                "lang": "csharp",
                "value": "DisposalTracker"
              },
              {
                "lang": "vb",
                "value": "DisposalTracker"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "DisposalTracker"
              },
              {
                "lang": "vb",
                "value": "DisposalTracker"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.DisposalTracker"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.DisposalTracker"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.DisposalTracker\" text=\"DisposalTracker\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.DisposalTracker\" text=\"DisposalTracker\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisposalTracker",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 144,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.DisposalTracker*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisposalTracker"
          },
          {
            "lang": "vb",
            "value": "DisposalTracker"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.DisposalTracker"
          },
          {
            "lang": "vb",
            "value": "Xunit2.DisposalTracker"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.DisposalTracker"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.DisposalTracker"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposalTracker*\" text=\"DisposalTracker\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposalTracker*\" text=\"DisposalTracker\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Gets a tracker for disposable objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.DisposeAsync",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "DisposeAsync()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "Xunit2.DisposeAsync()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.DisposeAsync()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.DisposeAsync()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposeAsync\" text=\"DisposeAsync()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposeAsync\" text=\"DisposeAsync()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public virtual ValueTask DisposeAsync()"
          },
          {
            "lang": "vb",
            "value": "Public Overridable Function DisposeAsync() As ValueTask"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Threading.Tasks.ValueTask",
            "name": [
              {
                "lang": "csharp",
                "value": "ValueTask"
              },
              {
                "lang": "vb",
                "value": "ValueTask"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ValueTask"
              },
              {
                "lang": "vb",
                "value": "ValueTask"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.Tasks.ValueTask"
              },
              {
                "lang": "vb",
                "value": "System.Threading.Tasks.ValueTask"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Threading.Tasks.ValueTask\" text=\"ValueTask\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Threading.Tasks.ValueTask\" text=\"ValueTask\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisposeAsync",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 210,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.DisposeAsync*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "DisposeAsync"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "Xunit2.DisposeAsync"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.DisposeAsync"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.DisposeAsync"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposeAsync*\" text=\"DisposeAsync\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.DisposeAsync*\" text=\"DisposeAsync\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.IAsyncDisposable.DisposeAsync",
          "name": [
            {
              "lang": "csharp",
              "value": "DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "DisposeAsync()"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IAsyncDisposable.DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "IAsyncDisposable.DisposeAsync()"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.IAsyncDisposable.DisposeAsync()"
            },
            {
              "lang": "vb",
              "value": "System.IAsyncDisposable.DisposeAsync()"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync\">DisposeAsync</a>()"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync\">DisposeAsync</a>()"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Performs application-defined tasks associated with freeing, releasing, or\nresetting unmanaged resources asynchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Find(IMessageSink, FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Find(IMessageSink, FrontControllerFindSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.Find(IMessageSink, FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.Find(IMessageSink, FrontControllerFindSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)\" text=\"Find(IMessageSink, FrontControllerFindSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)\" text=\"Find(IMessageSink, FrontControllerFindSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Find(IMessageSink messageSink, FrontControllerFindSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Find(messageSink As IMessageSink, settings As FrontControllerFindSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerFindSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerFindSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerFindSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerFindSettings\" text=\"FrontControllerFindSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerFindSettings\" text=\"FrontControllerFindSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The settings used during discovery.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Find",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 223,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.Find*",
        "name": [
          {
            "lang": "csharp",
            "value": "Find"
          },
          {
            "lang": "vb",
            "value": "Find"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit2.Find"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.Find"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.Find"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Find*\" text=\"Find\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Find*\" text=\"Find\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "Find(IMessageSink, FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "Find(IMessageSink, FrontControllerFindSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.Find(IMessageSink, FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.Find(IMessageSink, FrontControllerFindSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontControllerDiscoverer.html#Xunit_IFrontControllerDiscoverer_Find_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindSettings_\">Find</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindSettings.html\">FrontControllerFindSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontControllerDiscoverer.html#Xunit_IFrontControllerDiscoverer_Find_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindSettings_\">Find</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindSettings.html\">FrontControllerFindSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Starts the process of finding tests in an assembly. Typically only used by\nrunners which discover tests and present them into a UI for the user to interactively\nchoose for selective run (via <xref href=\"Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerRunSettings)\" data-throw-if-not-resolved=\"false\"></xref>). For runners which\nsimply wish to discover and immediately run tests, they should instead\nuse <xref href=\"Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindAndRunSettings)\" data-throw-if-not-resolved=\"false\"></xref>, which permits the same filtering logic\nas this method.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)\" text=\"FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)\" text=\"FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void FindAndRun(IMessageSink messageSink, FrontControllerFindAndRunSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub FindAndRun(messageSink As IMessageSink, settings As FrontControllerFindAndRunSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerFindAndRunSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindAndRunSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerFindAndRunSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerFindAndRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerFindAndRunSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerFindAndRunSettings\" text=\"FrontControllerFindAndRunSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerFindAndRunSettings\" text=\"FrontControllerFindAndRunSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The settings used during discovery and execution.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FindAndRun",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 247,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.FindAndRun*",
        "name": [
          {
            "lang": "csharp",
            "value": "FindAndRun"
          },
          {
            "lang": "vb",
            "value": "FindAndRun"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit2.FindAndRun"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.FindAndRun"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.FindAndRun"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.FindAndRun*\" text=\"FindAndRun\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.FindAndRun*\" text=\"FindAndRun\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink,Xunit.FrontControllerFindAndRunSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontController.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontController.FindAndRun(IMessageSink, FrontControllerFindAndRunSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontController.FindAndRun(Xunit.Sdk.IMessageSink, Xunit.FrontControllerFindAndRunSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_FindAndRun_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindAndRunSettings_\">FindAndRun</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindAndRunSettings.html\">FrontControllerFindAndRunSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_FindAndRun_Xunit_Sdk_IMessageSink_Xunit_FrontControllerFindAndRunSettings_\">FindAndRun</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerFindAndRunSettings.html\">FrontControllerFindAndRunSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Starts the process of finding and running tests in an assembly. Typically only used\nby runner which do not present test discovery UIs to users that allow them to run\nselected tests (those should instead use <xref href=\"Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindSettings)\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerRunSettings)\" data-throw-if-not-resolved=\"false\"></xref> as separate operations).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.ForDiscovery(Xunit.Abstractions.IAssemblyInfo,Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider, IMessageSink, Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider, IMessageSink, Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.ForDiscovery(Xunit.Abstractions.IAssemblyInfo, Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider?, Xunit.Sdk.IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.ForDiscovery(Xunit.Abstractions.IAssemblyInfo, Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider, Xunit.Sdk.IMessageSink, Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscovery(Xunit.Abstractions.IAssemblyInfo,Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscovery(Xunit.Abstractions.IAssemblyInfo,Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"ForDiscovery(IAssemblyInfo, XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IFrontControllerDiscoverer ForDiscovery(IAssemblyInfo assemblyInfo, XunitProjectAssembly projectAssembly, ISourceInformationProvider? sourceInformationProvider = null, IMessageSink? diagnosticMessageSink = null, bool verifyAssembliesOnDisk = true)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForDiscovery(assemblyInfo As IAssemblyInfo, projectAssembly As XunitProjectAssembly, sourceInformationProvider As ISourceInformationProvider = Nothing, diagnosticMessageSink As IMessageSink = Nothing, verifyAssembliesOnDisk As Boolean = True) As IFrontControllerDiscoverer"
          }
        ],
        "parameters": [
          {
            "id": "assemblyInfo",
            "type": {
              "uid": "Xunit.Abstractions.IAssemblyInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IAssemblyInfo"
                },
                {
                  "lang": "vb",
                  "value": "IAssemblyInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IAssemblyInfo"
                },
                {
                  "lang": "vb",
                  "value": "IAssemblyInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Abstractions.IAssemblyInfo"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Abstractions.IAssemblyInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Abstractions.IAssemblyInfo\" text=\"IAssemblyInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Abstractions.IAssemblyInfo\" text=\"IAssemblyInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The assembly to use for discovery</p>\n"
          },
          {
            "id": "projectAssembly",
            "type": {
              "uid": "Xunit.Runner.Common.XunitProjectAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The test project assembly.</p>\n"
          },
          {
            "id": "sourceInformationProvider",
            "type": {
              "uid": "Xunit.Runner.Common.ISourceInformationProvider",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The optional source information provider.</p>\n"
          },
          {
            "id": "diagnosticMessageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The message sink which receives <xref href=\"Xunit.Sdk.IDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.Sdk.IInternalDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref> messages.</p>\n"
          },
          {
            "id": "verifyAssembliesOnDisk",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Determines whether or not to check for the existence of assembly files.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.IFrontControllerDiscoverer",
            "name": [
              {
                "lang": "csharp",
                "value": "IFrontControllerDiscoverer"
              },
              {
                "lang": "vb",
                "value": "IFrontControllerDiscoverer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IFrontControllerDiscoverer"
              },
              {
                "lang": "vb",
                "value": "IFrontControllerDiscoverer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.IFrontControllerDiscoverer"
              },
              {
                "lang": "vb",
                "value": "Xunit.IFrontControllerDiscoverer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ForDiscovery",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 628,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.ForDiscovery*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForDiscovery"
          },
          {
            "lang": "vb",
            "value": "ForDiscovery"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.ForDiscovery"
          },
          {
            "lang": "vb",
            "value": "Xunit2.ForDiscovery"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.ForDiscovery"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.ForDiscovery"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscovery*\" text=\"ForDiscovery\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscovery*\" text=\"ForDiscovery\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Returns an implementation of <xref href=\"Xunit.IFrontControllerDiscoverer\" data-throw-if-not-resolved=\"false\"></xref> which can be used\nto discover xUnit.net v2 tests, including source-based discovery.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider, IMessageSink, Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider, IMessageSink, Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider?, Xunit.Sdk.IMessageSink?, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly, Xunit.Runner.Common.ISourceInformationProvider, Xunit.Sdk.IMessageSink, Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution(Xunit.Runner.Common.XunitProjectAssembly,Xunit.Runner.Common.ISourceInformationProvider,Xunit.Sdk.IMessageSink,System.Boolean)\" text=\"ForDiscoveryAndExecution(XunitProjectAssembly, ISourceInformationProvider?, IMessageSink?, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IFrontController ForDiscoveryAndExecution(XunitProjectAssembly projectAssembly, ISourceInformationProvider? sourceInformationProvider = null, IMessageSink? diagnosticMessageSink = null, bool verifyAssembliesOnDisk = true)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForDiscoveryAndExecution(projectAssembly As XunitProjectAssembly, sourceInformationProvider As ISourceInformationProvider = Nothing, diagnosticMessageSink As IMessageSink = Nothing, verifyAssembliesOnDisk As Boolean = True) As IFrontController"
          }
        ],
        "parameters": [
          {
            "id": "projectAssembly",
            "type": {
              "uid": "Xunit.Runner.Common.XunitProjectAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "XunitProjectAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.XunitProjectAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.XunitProjectAssembly\" text=\"XunitProjectAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The test project assembly.</p>\n"
          },
          {
            "id": "sourceInformationProvider",
            "type": {
              "uid": "Xunit.Runner.Common.ISourceInformationProvider",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "ISourceInformationProvider"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Runner.Common.ISourceInformationProvider"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Runner.Common.ISourceInformationProvider\" text=\"ISourceInformationProvider\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The optional source information provider.</p>\n"
          },
          {
            "id": "diagnosticMessageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The message sink which receives <xref href=\"Xunit.Sdk.IDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.Sdk.IInternalDiagnosticMessage\" data-throw-if-not-resolved=\"false\"></xref> messages.</p>\n"
          },
          {
            "id": "verifyAssembliesOnDisk",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Determines whether or not to check for the existence of assembly files.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.IFrontController",
            "name": [
              {
                "lang": "csharp",
                "value": "IFrontController"
              },
              {
                "lang": "vb",
                "value": "IFrontController"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IFrontController"
              },
              {
                "lang": "vb",
                "value": "IFrontController"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.IFrontController"
              },
              {
                "lang": "vb",
                "value": "Xunit.IFrontController"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ForDiscoveryAndExecution",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 663,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "ForDiscoveryAndExecution"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "Xunit2.ForDiscoveryAndExecution"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution*\" text=\"ForDiscoveryAndExecution\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.ForDiscoveryAndExecution*\" text=\"ForDiscoveryAndExecution\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Returns an implementation of <xref href=\"Xunit.IFrontController\" data-throw-if-not-resolved=\"false\"></xref> which can be used\nfor both discovery and execution of xUnit.net v2 tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Run(IMessageSink, FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Run(IMessageSink, FrontControllerRunSettings)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.Run(IMessageSink, FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit2.Run(IMessageSink, FrontControllerRunSettings)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)\" text=\"Run(IMessageSink, FrontControllerRunSettings)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)\" text=\"Run(IMessageSink, FrontControllerRunSettings)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Run(IMessageSink messageSink, FrontControllerRunSettings settings)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Run(messageSink As IMessageSink, settings As FrontControllerRunSettings)"
          }
        ],
        "parameters": [
          {
            "id": "messageSink",
            "type": {
              "uid": "Xunit.Sdk.IMessageSink",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "IMessageSink"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.IMessageSink"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.IMessageSink"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The message sink to report results back to.</p>\n"
          },
          {
            "id": "settings",
            "type": {
              "uid": "Xunit.FrontControllerRunSettings",
              "name": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerRunSettings"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "FrontControllerRunSettings"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.FrontControllerRunSettings"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.FrontControllerRunSettings"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.FrontControllerRunSettings\" text=\"FrontControllerRunSettings\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.FrontControllerRunSettings\" text=\"FrontControllerRunSettings\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">The settings used during execution.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Run",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 566,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.Run*",
        "name": [
          {
            "lang": "csharp",
            "value": "Run"
          },
          {
            "lang": "vb",
            "value": "Run"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit2.Run"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.Run"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.Run"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Run*\" text=\"Run\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.Run*\" text=\"Run\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink,Xunit.FrontControllerRunSettings)",
          "name": [
            {
              "lang": "csharp",
              "value": "Run(IMessageSink, FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Run(IMessageSink, FrontControllerRunSettings)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontController.Run(IMessageSink, FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "IFrontController.Run(IMessageSink, FrontControllerRunSettings)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontController.Run(Xunit.Sdk.IMessageSink, Xunit.FrontControllerRunSettings)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_Run_Xunit_Sdk_IMessageSink_Xunit_FrontControllerRunSettings_\">Run</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerRunSettings.html\">FrontControllerRunSettings</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"Xunit.IFrontController.html#Xunit_IFrontController_Run_Xunit_Sdk_IMessageSink_Xunit_FrontControllerRunSettings_\">Run</a>(<xref uid=\"Xunit.Sdk.IMessageSink\" text=\"IMessageSink\"/>, <a class=\"xref\" href=\"Xunit.FrontControllerRunSettings.html\">FrontControllerRunSettings</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Starts the process of running selected tests in the assembly. The serialized test\ncases to run come from calling <xref href=\"Xunit.IFrontControllerDiscoverer.Find(Xunit.Sdk.IMessageSink%2cXunit.FrontControllerFindSettings)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.TargetFramework",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TargetFramework"
        },
        {
          "lang": "vb",
          "value": "TargetFramework"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.TargetFramework"
        },
        {
          "lang": "vb",
          "value": "Xunit2.TargetFramework"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.TargetFramework"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.TargetFramework"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TargetFramework\" text=\"TargetFramework\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TargetFramework\" text=\"TargetFramework\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TargetFramework { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property TargetFramework As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TargetFramework",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 150,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.TargetFramework*",
        "name": [
          {
            "lang": "csharp",
            "value": "TargetFramework"
          },
          {
            "lang": "vb",
            "value": "TargetFramework"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.TargetFramework"
          },
          {
            "lang": "vb",
            "value": "Xunit2.TargetFramework"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.TargetFramework"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.TargetFramework"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TargetFramework*\" text=\"TargetFramework\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TargetFramework*\" text=\"TargetFramework\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TargetFramework",
          "name": [
            {
              "lang": "csharp",
              "value": "TargetFramework"
            },
            {
              "lang": "vb",
              "value": "TargetFramework"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TargetFramework"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TargetFramework"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TargetFramework"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TargetFramework"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TargetFramework\" text=\"TargetFramework\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TargetFramework\" text=\"TargetFramework\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Gets the target framework that the test assembly is linked against.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyUniqueID"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "Xunit2.TestAssemblyUniqueID"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TestAssemblyUniqueID { get; protected set; }"
          },
          {
            "lang": "vb",
            "value": "Public Property TestAssemblyUniqueID As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestAssemblyUniqueID",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 147,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyUniqueID"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "Xunit2.TestAssemblyUniqueID"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID*\" text=\"TestAssemblyUniqueID\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestAssemblyUniqueID*\" text=\"TestAssemblyUniqueID\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID",
          "name": [
            {
              "lang": "csharp",
              "value": "TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "TestAssemblyUniqueID"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TestAssemblyUniqueID"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestAssemblyUniqueID\" text=\"TestAssemblyUniqueID\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Gets the unique ID for the test assembly provided to the discoverer.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Runner.v2.Xunit2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkDisplayName"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Xunit2.TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit2.TestFrameworkDisplayName"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public string TestFrameworkDisplayName { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property TestFrameworkDisplayName As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestFrameworkDisplayName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
        "startLine": 155,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.runner.utility.netfx"
      ],
      "namespace": "Xunit.Runner.v2",
      "example": [],
      "overload": {
        "uid": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkDisplayName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "Xunit2.TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit2.TestFrameworkDisplayName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName*\" text=\"TestFrameworkDisplayName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Runner.v2.Xunit2.TestFrameworkDisplayName*\" text=\"TestFrameworkDisplayName\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName",
          "name": [
            {
              "lang": "csharp",
              "value": "TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "TestFrameworkDisplayName"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IFrontControllerDiscoverer.TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "IFrontControllerDiscoverer.TestFrameworkDisplayName"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName"
            },
            {
              "lang": "vb",
              "value": "Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer.TestFrameworkDisplayName\" text=\"TestFrameworkDisplayName\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">Returns the display name of the test framework that this discoverer is running tests for.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "Xunit2"
    },
    {
      "lang": "vb",
      "value": "Xunit2"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "Xunit2"
    },
    {
      "lang": "vb",
      "value": "Xunit2"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Runner.v2.Xunit2"
    },
    {
      "lang": "vb",
      "value": "Xunit.Runner.v2.Xunit2"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "Xunit2",
    "path": "../v3/v3-2.0.0/src/xunit.v3.runner.utility/Frameworks/v2/Xunit2.cs",
    "startLine": 23,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.runner.utility.netfx"
  ],
  "namespace": {
    "uid": "Xunit.Runner.v2",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Runner.v2"
      },
      {
        "lang": "vb",
        "value": "Xunit.Runner.v2"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v2.html\">v2</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Runner.html\">Runner</a>.<a class=\"xref\" href=\"Xunit.Runner.v2.html\">v2</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml\" sourcestartlinenumber=\"1\">This class is used to do discovery and execution of xUnit.net v2 tests.\nDiscovery can be source-based; execution requires a file-system based assembly.\nRunner authors are strongly encouraged to use <xref href=\"Xunit.XunitFrontController\" data-throw-if-not-resolved=\"false\"></xref>\ninstead of using this class directly, unless you are doing source-based\ndiscovery of v2 tests.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class Xunit2 : IFrontController, IFrontControllerDiscoverer, IAsyncDisposable"
      },
      {
        "lang": "vb",
        "value": "Public Class Xunit2 Implements IFrontController, IFrontControllerDiscoverer, IAsyncDisposable"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "implements": [
    {
      "uid": "Xunit.IFrontController",
      "name": [
        {
          "lang": "csharp",
          "value": "IFrontController"
        },
        {
          "lang": "vb",
          "value": "IFrontController"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFrontController"
        },
        {
          "lang": "vb",
          "value": "IFrontController"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.IFrontController"
        },
        {
          "lang": "vb",
          "value": "Xunit.IFrontController"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.IFrontController\" text=\"IFrontController\"/>"
        }
      ]
    },
    {
      "uid": "Xunit.IFrontControllerDiscoverer",
      "name": [
        {
          "lang": "csharp",
          "value": "IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "IFrontControllerDiscoverer"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "IFrontControllerDiscoverer"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.IFrontControllerDiscoverer"
        },
        {
          "lang": "vb",
          "value": "Xunit.IFrontControllerDiscoverer"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.IFrontControllerDiscoverer\" text=\"IFrontControllerDiscoverer\"/>"
        }
      ]
    },
    {
      "uid": "System.IAsyncDisposable",
      "name": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "IAsyncDisposable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.IAsyncDisposable"
        },
        {
          "lang": "vb",
          "value": "System.IAsyncDisposable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.IAsyncDisposable\" text=\"IAsyncDisposable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/runner-utility/Xunit.Runner.v2.Xunit2.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/runner-utility/toc.yml",
  "_tocPath": "v3-2.0.0/runner-utility/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}