{
  "uid": "Xunit.MatrixTheoryData`3",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.MatrixTheoryData`3.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1},System.Collections.Generic.IEnumerable{`2})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.MatrixTheoryData`3",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MatrixTheoryData(IEnumerable<T1>, IEnumerable<T2>, IEnumerable<T3>)"
        },
        {
          "lang": "vb",
          "value": "New(IEnumerable(Of T1), IEnumerable(Of T2), IEnumerable(Of T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "MatrixTheoryData<T1, T2, T3>.MatrixTheoryData(IEnumerable<T1>, IEnumerable<T2>, IEnumerable<T3>)"
        },
        {
          "lang": "vb",
          "value": "MatrixTheoryData(Of T1, T2, T3).New(IEnumerable(Of T1), IEnumerable(Of T2), IEnumerable(Of T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.MatrixTheoryData<T1, T2, T3>.MatrixTheoryData(System.Collections.Generic.IEnumerable<T1>, System.Collections.Generic.IEnumerable<T2>, System.Collections.Generic.IEnumerable<T3>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.MatrixTheoryData(Of T1, T2, T3).New(System.Collections.Generic.IEnumerable(Of T1), System.Collections.Generic.IEnumerable(Of T2), System.Collections.Generic.IEnumerable(Of T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.MatrixTheoryData`3.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1},System.Collections.Generic.IEnumerable{`2})\" text=\"MatrixTheoryData(IEnumerable&lt;T1&gt;, IEnumerable&lt;T2&gt;, IEnumerable&lt;T3&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.MatrixTheoryData`3.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1},System.Collections.Generic.IEnumerable{`2})\" text=\"MatrixTheoryData(IEnumerable&lt;T1&gt;, IEnumerable&lt;T2&gt;, IEnumerable&lt;T3&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public MatrixTheoryData(IEnumerable<T1> dimension1, IEnumerable<T2> dimension2, IEnumerable<T3> dimension3)"
          },
          {
            "lang": "vb",
            "value": "Public Sub New(dimension1 As IEnumerable(Of T1), dimension2 As IEnumerable(Of T2), dimension3 As IEnumerable(Of T3))"
          }
        ],
        "parameters": [
          {
            "id": "dimension1",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{{T1}}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T1>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T1)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T1>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T1)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<T1>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of T1)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;T1&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of T1)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Data for the first dimension</p>\n"
          },
          {
            "id": "dimension2",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{{T2}}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T2>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T2)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T2>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T2)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<T2>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of T2)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;T2&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of T2)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Data for the second dimension</p>\n"
          },
          {
            "id": "dimension3",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{{T3}}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T3>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T3)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<T3>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of T3)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<T3>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of T3)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;T3&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of T3)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Data for the third dimension</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/MatrixTheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": ".ctor",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/MatrixTheoryData.cs",
        "startLine": 60,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.MatrixTheoryData`3.#ctor*",
        "name": [
          {
            "lang": "csharp",
            "value": "MatrixTheoryData"
          },
          {
            "lang": "vb",
            "value": "New"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "MatrixTheoryData<T1, T2, T3>.MatrixTheoryData"
          },
          {
            "lang": "vb",
            "value": "MatrixTheoryData(Of T1, T2, T3).New"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.MatrixTheoryData<T1, T2, T3>.MatrixTheoryData"
          },
          {
            "lang": "vb",
            "value": "Xunit.MatrixTheoryData(Of T1, T2, T3).New"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.MatrixTheoryData`3.#ctor*\" text=\"MatrixTheoryData\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.MatrixTheoryData`3.#ctor*\" text=\"MatrixTheoryData\"/>"
          }
        ]
      },
      "level": 0,
      "type": "constructor",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Initializes a new instance of the <xref href=\"Xunit.MatrixTheoryData%603\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "MatrixTheoryData<T1, T2, T3>"
    },
    {
      "lang": "vb",
      "value": "MatrixTheoryData(Of T1, T2, T3)"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "MatrixTheoryData<T1, T2, T3>"
    },
    {
      "lang": "vb",
      "value": "MatrixTheoryData(Of T1, T2, T3)"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.MatrixTheoryData<T1, T2, T3>"
    },
    {
      "lang": "vb",
      "value": "Xunit.MatrixTheoryData(Of T1, T2, T3)"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/MatrixTheoryData.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "MatrixTheoryData",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/MatrixTheoryData.cs",
    "startLine": 52,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Represents theory data which is created from the merging of three data streams by\ncreating a matrix of the data.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class MatrixTheoryData<T1, T2, T3> : TheoryData<T1, T2, T3>, IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>, IEnumerable<TheoryDataRow<T1, T2, T3>>, IEnumerable"
      },
      {
        "lang": "vb",
        "value": "Public Class MatrixTheoryData(Of T1, T2, T3) Inherits TheoryData(Of T1, T2, T3) Implements IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3)), IEnumerable(Of TheoryDataRow(Of T1, T2, T3)), IEnumerable"
      }
    ],
    "typeParameters": [
      {
        "id": "T1",
        "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Type of the first data dimension</p>\n"
      },
      {
        "id": "T2",
        "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Type of the second data dimension</p>\n"
      },
      {
        "id": "T3",
        "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml\" sourcestartlinenumber=\"1\">Type of the third data dimension</p>\n"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit",
      "definition": "Xunit.TheoryDataBase`2",
      "href": "Xunit.TheoryDataBase-2.html",
      "name": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html\">TheoryDataBase</a>&lt;<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;, (T1, T2, T3)&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html\">TheoryDataBase</a>(Of <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3), (T1, T2, T3))"
        }
      ],
      "level": 0,
      "index": 1
    },
    {
      "uid": "Xunit.TheoryData{{T1},{T2},{T3}}",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit",
      "definition": "Xunit.TheoryData`3",
      "href": "Xunit.TheoryData-3.html",
      "name": [
        {
          "lang": "csharp",
          "value": "TheoryData<T1, T2, T3>"
        },
        {
          "lang": "vb",
          "value": "TheoryData(Of T1, T2, T3)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryData<T1, T2, T3>"
        },
        {
          "lang": "vb",
          "value": "TheoryData(Of T1, T2, T3)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryData<T1, T2, T3>"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryData(Of T1, T2, T3)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html\">TheoryData</a>&lt;T1, T2, T3&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html\">TheoryData</a>(Of T1, T2, T3)"
        }
      ],
      "level": 0,
      "index": 2
    }
  ],
  "level": 3,
  "implements": [
    {
      "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{{T1},{T2},{T3}}}",
      "definition": "System.Collections.Generic.IReadOnlyCollection`1",
      "name": [
        {
          "lang": "csharp",
          "value": "IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3))"
        }
      ]
    },
    {
      "uid": "System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}}",
      "definition": "System.Collections.Generic.IEnumerable`1",
      "name": [
        {
          "lang": "csharp",
          "value": "IEnumerable<TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "IEnumerable(Of TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IEnumerable<TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "IEnumerable(Of TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3>>"
        },
        {
          "lang": "vb",
          "value": "System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3))"
        }
      ]
    },
    {
      "uid": "System.Collections.IEnumerable",
      "name": [
        {
          "lang": "csharp",
          "value": "IEnumerable"
        },
        {
          "lang": "vb",
          "value": "IEnumerable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IEnumerable"
        },
        {
          "lang": "vb",
          "value": "IEnumerable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.IEnumerable"
        },
        {
          "lang": "vb",
          "value": "System.Collections.IEnumerable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "Xunit.TheoryData{{T1},{T2},{T3}}.Add({T1},{T2},{T3})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryData{{T1},{T2},{T3}}",
      "definition": "Xunit.TheoryData`3.Add(`0,`1,`2)",
      "href": "Xunit.TheoryData-3.html#Xunit_TheoryData_3_Add__0__1__2_",
      "name": [
        {
          "lang": "csharp",
          "value": "Add(T1, T2, T3)"
        },
        {
          "lang": "vb",
          "value": "Add(T1, T2, T3)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryData<T1, T2, T3>.Add(T1, T2, T3)"
        },
        {
          "lang": "vb",
          "value": "TheoryData(Of T1, T2, T3).Add(T1, T2, T3)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryData<T1, T2, T3>.Add(T1, T2, T3)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryData(Of T1, T2, T3).Add(T1, T2, T3)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html#Xunit_TheoryData_3_Add__0__1__2_\">Add</a>(T1, T2, T3)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html#Xunit_TheoryData_3_Add__0__1__2_\">Add</a>(T1, T2, T3)"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryData{{T1},{T2},{T3}}.Convert(System.ValueTuple{{T1},{T2},{T3}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryData{{T1},{T2},{T3}}",
      "definition": "Xunit.TheoryData`3.Convert(System.ValueTuple{`0,`1,`2})",
      "href": "Xunit.TheoryData-3.html#Xunit_TheoryData_3_Convert_System_ValueTuple__0__1__2__",
      "name": [
        {
          "lang": "csharp",
          "value": "Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Convert((T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryData<T1, T2, T3>.Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "TheoryData(Of T1, T2, T3).Convert((T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryData<T1, T2, T3>.Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryData(Of T1, T2, T3).Convert((T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html#Xunit_TheoryData_3_Convert_System_ValueTuple__0__1__2__\">Convert</a>((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryData-3.html#Xunit_TheoryData_3_Convert_System_ValueTuple__0__1__2__\">Convert</a>((T1, T2, T3))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Count",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.Count",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Count",
      "name": [
        {
          "lang": "csharp",
          "value": "Count"
        },
        {
          "lang": "vb",
          "value": "Count"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Count"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Count"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Count"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Count"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Count\" text=\"Count\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Count\" text=\"Count\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(System.ValueTuple{{T1},{T2},{T3}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.Add(`1)",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__1_",
      "name": [
        {
          "lang": "csharp",
          "value": "Add((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Add((T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add((T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add((T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__1_\">Add</a>((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__1_\">Add</a>((T1, T2, T3))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(Xunit.TheoryDataRow{{T1},{T2},{T3}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.Add(`0)",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__0_",
      "name": [
        {
          "lang": "csharp",
          "value": "Add(TheoryDataRow<T1, T2, T3>)"
        },
        {
          "lang": "vb",
          "value": "Add(TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add(TheoryDataRow<T1, T2, T3>)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add(TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add(Xunit.TheoryDataRow<T1, T2, T3>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add(Xunit.TheoryDataRow(Of T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__0_\">Add</a>(<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Add__0_\">Add</a>(<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3}}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__",
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(IEnumerable<(T1, T2, T3)>)"
        },
        {
          "lang": "vb",
          "value": "AddRange(IEnumerable(Of (T1, T2, T3)))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(IEnumerable<(T1, T2, T3)>)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(IEnumerable(Of (T1, T2, T3)))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(System.Collections.Generic.IEnumerable<(T1, T2, T3)>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(System.Collections.Generic.IEnumerable(Of (T1, T2, T3)))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__\">AddRange</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;(T1, T2, T3)&gt;)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__\">AddRange</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of (T1, T2, T3)))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.ValueTuple{{T1},{T2},{T3}}[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.AddRange(`1[])",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__1___",
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(params (T1, T2, T3)[])"
        },
        {
          "lang": "vb",
          "value": "AddRange(ParamArray (T1, T2, T3)())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params (T1, T2, T3)[])"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray (T1, T2, T3)())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params (T1, T2, T3)[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray (T1, T2, T3)())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__1___\">AddRange</a>(params (T1, T2, T3)[])"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__1___\">AddRange</a>(ParamArray (T1, T2, T3)())"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__",
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(IEnumerable<TheoryDataRow<T1, T2, T3>>)"
        },
        {
          "lang": "vb",
          "value": "AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(IEnumerable<TheoryDataRow<T1, T2, T3>>)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3>>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3)))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__\">AddRange</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;<a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;&gt;)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__\">AddRange</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3)))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(Xunit.TheoryDataRow{{T1},{T2},{T3}}[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.AddRange(`0[])",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__0___",
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(params TheoryDataRow<T1, T2, T3>[])"
        },
        {
          "lang": "vb",
          "value": "AddRange(ParamArray TheoryDataRow(Of T1, T2, T3)())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params TheoryDataRow<T1, T2, T3>[])"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray TheoryDataRow(Of T1, T2, T3)())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params Xunit.TheoryDataRow<T1, T2, T3>[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray Xunit.TheoryDataRow(Of T1, T2, T3)())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__0___\">AddRange</a>(params <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>&lt;T1, T2, T3&gt;[])"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_AddRange__0___\">AddRange</a>(ParamArray <a class=\"xref\" href=\"Xunit.TheoryDataRow-3.html\">TheoryDataRow</a>(Of T1, T2, T3)())"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Convert(System.ValueTuple{{T1},{T2},{T3}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.Convert(`1)",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Convert__1_",
      "name": [
        {
          "lang": "csharp",
          "value": "Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Convert((T1, T2, T3))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Convert((T1, T2, T3))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Convert((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Convert((T1, T2, T3))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Convert__1_\">Convert</a>((T1, T2, T3))"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_Convert__1_\">Convert</a>((T1, T2, T3))"
        }
      ],
      "level": 0
    },
    {
      "uid": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.GetEnumerator",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}",
      "definition": "Xunit.TheoryDataBase`2.GetEnumerator",
      "href": "Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_GetEnumerator",
      "name": [
        {
          "lang": "csharp",
          "value": "GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "GetEnumerator()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).GetEnumerator()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).GetEnumerator()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_GetEnumerator\">GetEnumerator</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TheoryDataBase-2.html#Xunit_TheoryDataBase_2_GetEnumerator\">GetEnumerator</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.MatrixTheoryData-3.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.MatrixTheoryData-3.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}