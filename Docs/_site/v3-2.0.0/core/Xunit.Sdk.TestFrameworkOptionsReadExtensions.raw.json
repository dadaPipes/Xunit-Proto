{
  "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"AssertEquivalentMaxDepth(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? AssertEquivalentMaxDepth(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function AssertEquivalentMaxDepth(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AssertEquivalentMaxDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 188,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "AssertEquivalentMaxDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth*\" text=\"AssertEquivalentMaxDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.AssertEquivalentMaxDepth*\" text=\"AssertEquivalentMaxDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a max recursive object depth for comparisons done with <code>Assert.Equivalent</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Culture(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Culture(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.Culture(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.Culture(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"Culture(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"Culture(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string? Culture(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function Culture(discoveryOptions As ITestFrameworkDiscoveryOptions) As String"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Culture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 22,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*",
        "name": [
          {
            "lang": "csharp",
            "value": "Culture"
          },
          {
            "lang": "vb",
            "value": "Culture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.Culture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.Culture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*\" text=\"Culture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*\" text=\"Culture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the culture to use for discovering tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Culture(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Culture(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.Culture(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.Culture(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"Culture(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"Culture(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string? Culture(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function Culture(executionOptions As ITestFrameworkExecutionOptions) As String"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Culture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 202,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*",
        "name": [
          {
            "lang": "csharp",
            "value": "Culture"
          },
          {
            "lang": "vb",
            "value": "Culture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.Culture"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.Culture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*\" text=\"Culture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Culture*\" text=\"Culture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the culture to use for running tests. <code>null</code> uses the default OS culture;\n<xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> uses the invariant culture; any other value passes the\nprovided value to <xref href=\"System.Globalization.CultureInfo.%23ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and uses the resulting object\nwith <xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"DiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"DiagnosticMessages(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? DiagnosticMessages(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DiagnosticMessages(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 32,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DiagnosticMessages(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? DiagnosticMessages(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DiagnosticMessages(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessages",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 212,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessages"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessages*\" text=\"DiagnosticMessages\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"DiagnosticMessagesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool DiagnosticMessagesOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DiagnosticMessagesOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 43,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted. If the flag is not present,\nreturns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DiagnosticMessagesOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool DiagnosticMessagesOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DiagnosticMessagesOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DiagnosticMessagesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 223,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "DiagnosticMessagesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DiagnosticMessagesOrDefault*\" text=\"DiagnosticMessagesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether diagnostic messages will be emitted. If the flag is not\npresent, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisableParallelization(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "DisableParallelization(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DisableParallelization(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DisableParallelization(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DisableParallelization(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DisableParallelization(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? DisableParallelization(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DisableParallelization(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisableParallelization",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 229,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisableParallelization"
          },
          {
            "lang": "vb",
            "value": "DisableParallelization"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DisableParallelization"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DisableParallelization"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization*\" text=\"DisableParallelization\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelization*\" text=\"DisableParallelization\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to disable parallelization.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"DisableParallelizationOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool DisableParallelizationOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function DisableParallelizationOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisableParallelizationOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 240,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "DisableParallelizationOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault*\" text=\"DisableParallelizationOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.DisableParallelizationOrDefault*\" text=\"DisableParallelizationOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to disable parallelization. If the flag is not present, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExplicitOption(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ExplicitOption(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ExplicitOption(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ExplicitOption(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ExplicitOption(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ExplicitOption(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ExplicitOption? ExplicitOption(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ExplicitOption(executionOptions As ITestFrameworkExecutionOptions) As ExplicitOption?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ExplicitOption}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ExplicitOption",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 246,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "ExplicitOption"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ExplicitOption"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption*\" text=\"ExplicitOption\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOption*\" text=\"ExplicitOption\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that indicates how to handle explicit tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ExplicitOptionOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ExplicitOption ExplicitOptionOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ExplicitOptionOrDefault(executionOptions As ITestFrameworkExecutionOptions) As ExplicitOption"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ExplicitOption",
            "name": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "ExplicitOption"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ExplicitOption"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ExplicitOption"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ExplicitOption\" text=\"ExplicitOption\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ExplicitOptionOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 258,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "ExplicitOptionOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault*\" text=\"ExplicitOptionOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ExplicitOptionOrDefault*\" text=\"ExplicitOptionOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that indicates how to handle explicit tests. If the flag is not present, returns the\ndefault value (<xref href=\"Xunit.Sdk.ExplicitOption.Off\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailSkips(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "FailSkips(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.FailSkips(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.FailSkips(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailSkips(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailSkips(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? FailSkips(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FailSkips(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailSkips",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 264,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailSkips"
          },
          {
            "lang": "vb",
            "value": "FailSkips"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.FailSkips"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.FailSkips"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips*\" text=\"FailSkips\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkips*\" text=\"FailSkips\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail skipped tests.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "FailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailSkipsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailSkipsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool FailSkipsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FailSkipsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailSkipsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 275,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "FailSkipsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.FailSkipsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault*\" text=\"FailSkipsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailSkipsOrDefault*\" text=\"FailSkipsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail skipped tests. If the flag is not present, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "FailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailTestsWithWarnings(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailTestsWithWarnings(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? FailTestsWithWarnings(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FailTestsWithWarnings(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailTestsWithWarnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 281,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "FailTestsWithWarnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings*\" text=\"FailTestsWithWarnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarnings*\" text=\"FailTestsWithWarnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail passing tests with warnings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"FailTestsWithWarningsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool FailTestsWithWarningsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FailTestsWithWarningsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "FailTestsWithWarningsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 292,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "FailTestsWithWarningsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault*\" text=\"FailTestsWithWarningsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.FailTestsWithWarningsOrDefault*\" text=\"FailTestsWithWarningsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to fail passing tests with warnings. If the flag is not present, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "IncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformation(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"IncludeSourceInformation(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"IncludeSourceInformation(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? IncludeSourceInformation(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function IncludeSourceInformation(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IncludeSourceInformation",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 51,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation*",
        "name": [
          {
            "lang": "csharp",
            "value": "IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "IncludeSourceInformation"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformation"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation*\" text=\"IncludeSourceInformation\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformation*\" text=\"IncludeSourceInformation\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether discovered test cases should include source information.\nNote that not all runners have access to source information, so this flag does not guarantee\nthat source information will be provided.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"IncludeSourceInformationOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool IncludeSourceInformationOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function IncludeSourceInformationOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "IncludeSourceInformationOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 64,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "IncludeSourceInformationOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault*\" text=\"IncludeSourceInformationOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.IncludeSourceInformationOrDefault*\" text=\"IncludeSourceInformationOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether discovered test cases should include source information.\nNote that not all runners have access to source information, so this flag does not guarantee\nthat source information will be provided. If the flag is not present, returns the default\nvalue (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxParallelThreads(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "MaxParallelThreads(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreads(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreads(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"MaxParallelThreads(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"MaxParallelThreads(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? MaxParallelThreads(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MaxParallelThreads(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MaxParallelThreads",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 298,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "MaxParallelThreads"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreads"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreads*\" text=\"MaxParallelThreads\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of threads to use when running tests in parallel.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"MaxParallelThreadsOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int MaxParallelThreadsOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MaxParallelThreadsOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Integer"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MaxParallelThreadsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 310,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "MaxParallelThreadsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault*\" text=\"MaxParallelThreadsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MaxParallelThreadsOrDefault*\" text=\"MaxParallelThreadsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of threads to use when running tests in parallel. If set to 0 (or not set),\nthe value of <xref href=\"System.Environment.ProcessorCount\" data-throw-if-not-resolved=\"false\"></xref> is used; if set to a value less\nthan 0, does not limit the number of threads.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplay(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "MethodDisplay(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplay(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplay(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplay(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplay(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplay? MethodDisplay(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MethodDisplay(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplay?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplay}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplay",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 70,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "MethodDisplay"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplay"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay*\" text=\"MethodDisplay\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplay*\" text=\"MethodDisplay\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format for test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptions(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOptions(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOptions(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplayOptions? MethodDisplayOptions(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MethodDisplayOptions(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplayOptions?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.TestMethodDisplayOptions}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOptions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 88,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOptions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptions*\" text=\"MethodDisplayOptions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display options to format test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOptionsOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplayOptions MethodDisplayOptionsOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MethodDisplayOptionsOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplayOptions"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplayOptions",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplayOptions"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplayOptions"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplayOptions\" text=\"TestMethodDisplayOptions\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOptionsOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 100,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOptionsOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault*\" text=\"MethodDisplayOptionsOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOptionsOrDefault*\" text=\"MethodDisplayOptionsOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the options that determine the default display formatting options for test methods. If no options are not present,\nreturns the default value (<xref href=\"Xunit.Sdk.TestMethodDisplayOptions.None\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"MethodDisplayOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TestMethodDisplay MethodDisplayOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function MethodDisplayOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As TestMethodDisplay"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.TestMethodDisplay",
            "name": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "TestMethodDisplay"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.TestMethodDisplay"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.TestMethodDisplay"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.TestMethodDisplay\" text=\"TestMethodDisplay\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "MethodDisplayOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 82,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "MethodDisplayOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault*\" text=\"MethodDisplayOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.MethodDisplayOrDefault*\" text=\"MethodDisplayOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines the default display name format for test methods. If the flag is not present,\nreturns the default value (<xref href=\"Xunit.Sdk.TestMethodDisplay.ClassAndMethod\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelAlgorithm(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ParallelAlgorithm(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithm(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithm(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ParallelAlgorithm(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ParallelAlgorithm(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ParallelAlgorithm? ParallelAlgorithm(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ParallelAlgorithm(executionOptions As ITestFrameworkExecutionOptions) As ParallelAlgorithm?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.Sdk.ParallelAlgorithm}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelAlgorithm",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 321,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "ParallelAlgorithm"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithm"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithm*\" text=\"ParallelAlgorithm\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the parallel algorithm to be used.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ParallelAlgorithmOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ParallelAlgorithm ParallelAlgorithmOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ParallelAlgorithmOrDefault(executionOptions As ITestFrameworkExecutionOptions) As ParallelAlgorithm"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ParallelAlgorithm",
            "name": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "ParallelAlgorithm"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ParallelAlgorithm"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ParallelAlgorithm\" text=\"ParallelAlgorithm\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ParallelAlgorithmOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 333,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "ParallelAlgorithmOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault*\" text=\"ParallelAlgorithmOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ParallelAlgorithmOrDefault*\" text=\"ParallelAlgorithmOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the parallel algorithm to be used. If the flag is not present, return the default\nvalue (<xref href=\"Xunit.Sdk.ParallelAlgorithm.Conservative\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheories(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PreEnumerateTheories(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PreEnumerateTheories(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? PreEnumerateTheories(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PreEnumerateTheories(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PreEnumerateTheories",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 108,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories*",
        "name": [
          {
            "lang": "csharp",
            "value": "PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "PreEnumerateTheories"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheories"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheories*\" text=\"PreEnumerateTheories\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether theories are pre-enumerated. If they enabled, then the\ndiscovery system will return a test case for each row of test data; they are disabled, then the\ndiscovery system will return a single test case for the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PreEnumerateTheoriesOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool PreEnumerateTheoriesOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PreEnumerateTheoriesOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PreEnumerateTheoriesOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 121,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "PreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "PreEnumerateTheoriesOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault*\" text=\"PreEnumerateTheoriesOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PreEnumerateTheoriesOrDefault*\" text=\"PreEnumerateTheoriesOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether theories are pre-enumerated. If enabled, then the\ndiscovery system will return a test case for each row of test data; if disabled, then the\ndiscovery system will return a single test case for the theory. If the flag is not present,\nreturns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxEnumerableLength(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxEnumerableLength(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxEnumerableLength(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 127,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxEnumerableLength(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxEnumerableLength(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxEnumerableLength(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxEnumerableLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 339,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxEnumerableLength*\" text=\"PrintMaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing collections.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxObjectDepth(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxObjectDepth(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxObjectDepth(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 137,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxObjectDepth(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxObjectDepth(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxObjectDepth(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxObjectDepth(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectDepth",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 349,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectDepth*\" text=\"PrintMaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum recursive depth for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxObjectMemberCount(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxObjectMemberCount(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxObjectMemberCount(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 147,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxObjectMemberCount(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxObjectMemberCount(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxObjectMemberCount(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxObjectMemberCount",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 359,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "PrintMaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxObjectMemberCount*\" text=\"PrintMaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum numbers of members to show for printing objects.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxStringLength(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"PrintMaxStringLength(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxStringLength(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxStringLength(discoveryOptions As ITestFrameworkDiscoveryOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 157,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PrintMaxStringLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "PrintMaxStringLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxStringLength(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"PrintMaxStringLength(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? PrintMaxStringLength(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function PrintMaxStringLength(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PrintMaxStringLength",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 369,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "PrintMaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.PrintMaxStringLength*\" text=\"PrintMaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the maximum length for printing strings.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Seed(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Seed(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.Seed(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.Seed(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"Seed(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"Seed(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int? Seed(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function Seed(executionOptions As ITestFrameworkExecutionOptions) As Integer?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Seed",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 379,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed*",
        "name": [
          {
            "lang": "csharp",
            "value": "Seed"
          },
          {
            "lang": "vb",
            "value": "Seed"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.Seed"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.Seed"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed*\" text=\"Seed\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.Seed*\" text=\"Seed\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets the value that should be used to seed randomness.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShowLiveOutput(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ShowLiveOutput(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutput(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutput(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ShowLiveOutput(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ShowLiveOutput(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? ShowLiveOutput(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ShowLiveOutput(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShowLiveOutput",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 390,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "ShowLiveOutput"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutput"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput*\" text=\"ShowLiveOutput\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutput*\" text=\"ShowLiveOutput\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates if the developer wishes to see output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref>\nlive while it's being reported (in addition to seeing it collected together when the test is finished).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"ShowLiveOutputOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool ShowLiveOutputOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ShowLiveOutputOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "ShowLiveOutputOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 402,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "ShowLiveOutputOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault*\" text=\"ShowLiveOutputOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.ShowLiveOutputOrDefault*\" text=\"ShowLiveOutputOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates if the developer wishes to see output from <xref href=\"Xunit.ITestOutputHelper\" data-throw-if-not-resolved=\"false\"></xref>\nlive while it's being reported (in addition to seeing it collected together when the test is finished).\nIf the flag is not present, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "StopOnTestFail(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "StopOnTestFail(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.StopOnTestFail(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.StopOnTestFail(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"StopOnTestFail(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"StopOnTestFail(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? StopOnTestFail(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function StopOnTestFail(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "StopOnTestFail",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 408,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail*",
        "name": [
          {
            "lang": "csharp",
            "value": "StopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "StopOnTestFail"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.StopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.StopOnTestFail"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail*\" text=\"StopOnTestFail\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFail*\" text=\"StopOnTestFail\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to stop testing on test failure.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"StopOnTestFailOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool StopOnTestFailOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function StopOnTestFailOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "StopOnTestFailOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 419,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "StopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "StopOnTestFailOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault*\" text=\"StopOnTestFailOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.StopOnTestFailOrDefault*\" text=\"StopOnTestFailOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag to stop testing on test failure. If the flag is not present, returns the\ndefault value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"SynchronousMessageReporting(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? SynchronousMessageReporting(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function SynchronousMessageReporting(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 167,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"SynchronousMessageReporting(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"SynchronousMessageReporting(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool? SynchronousMessageReporting(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function SynchronousMessageReporting(executionOptions As ITestFrameworkExecutionOptions) As Boolean?"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReporting",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 425,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReporting"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReporting*\" text=\"SynchronousMessageReporting\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkDiscoveryOptions)\" text=\"SynchronousMessageReportingOrDefault(ITestFrameworkDiscoveryOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool SynchronousMessageReportingOrDefault(this ITestFrameworkDiscoveryOptions discoveryOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function SynchronousMessageReportingOrDefault(discoveryOptions As ITestFrameworkDiscoveryOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "discoveryOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkDiscoveryOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkDiscoveryOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkDiscoveryOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" text=\"ITestFrameworkDiscoveryOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReportingOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 178,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReportingOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)",
      "isEii": false,
      "isExtensionMethod": true,
      "parent": "Xunit.Sdk.TestFrameworkOptionsReadExtensions",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault(Xunit.Sdk.ITestFrameworkExecutionOptions)\" text=\"SynchronousMessageReportingOrDefault(ITestFrameworkExecutionOptions)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool SynchronousMessageReportingOrDefault(this ITestFrameworkExecutionOptions executionOptions)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function SynchronousMessageReportingOrDefault(executionOptions As ITestFrameworkExecutionOptions) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "executionOptions",
            "type": {
              "uid": "Xunit.Sdk.ITestFrameworkExecutionOptions",
              "name": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "ITestFrameworkExecutionOptions"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.ITestFrameworkExecutionOptions"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" text=\"ITestFrameworkExecutionOptions\"/>"
                }
              ]
            }
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SynchronousMessageReportingOrDefault",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
        "startLine": 436,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*",
        "name": [
          {
            "lang": "csharp",
            "value": "SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "SynchronousMessageReportingOrDefault"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.TestFrameworkOptionsReadExtensions.SynchronousMessageReportingOrDefault*\" text=\"SynchronousMessageReportingOrDefault\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Gets a flag that determines whether xUnit.net should report test results synchronously.\nIf the flag is not set, returns the default value (<code>false</code>).</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "TestFrameworkOptionsReadExtensions"
    },
    {
      "lang": "vb",
      "value": "TestFrameworkOptionsReadExtensions"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "TestFrameworkOptionsReadExtensions"
    },
    {
      "lang": "vb",
      "value": "TestFrameworkOptionsReadExtensions"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.TestFrameworkOptionsReadExtensions"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "TestFrameworkOptionsReadExtensions",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/Extensions/TestFrameworkOptionsReadExtensions.cs",
    "startLine": 9,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods for reading <xref href=\"Xunit.Sdk.ITestFrameworkDiscoveryOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Xunit.Sdk.ITestFrameworkExecutionOptions\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class TestFrameworkOptionsReadExtensions"
      },
      {
        "lang": "vb",
        "value": "Public Module TestFrameworkOptionsReadExtensions"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.Sdk.TestFrameworkOptionsReadExtensions.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}