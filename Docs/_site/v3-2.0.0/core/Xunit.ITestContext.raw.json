{
  "uid": "Xunit.ITestContext",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.ITestContext.AddAttachment(System.String,System.Byte[],System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddAttachment(string, byte[], string)"
        },
        {
          "lang": "vb",
          "value": "AddAttachment(String, Byte(), String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.AddAttachment(string, byte[], string)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.AddAttachment(String, Byte(), String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.AddAttachment(string, byte[], string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.AddAttachment(String, Byte(), String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.AddAttachment(System.String,System.Byte[],System.String)\" text=\"AddAttachment(string, byte[], string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.AddAttachment(System.String,System.Byte[],System.String)\" text=\"AddAttachment(string, byte[], string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void AddAttachment(string name, byte[] value, string mediaType = \"application/octet-stream\")"
          },
          {
            "lang": "vb",
            "value": "Sub AddAttachment(name As String, value As Byte(), mediaType As String = \"application/octet-stream\")"
          }
        ],
        "parameters": [
          {
            "id": "name",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The name of the attachment</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "System.Byte[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "byte[]"
                },
                {
                  "lang": "vb",
                  "value": "Byte()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "byte[]"
                },
                {
                  "lang": "vb",
                  "value": "Byte()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "byte[]"
                },
                {
                  "lang": "vb",
                  "value": "Byte()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.byte\">byte</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.byte\">Byte</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value of the attachment</p>\n"
          },
          {
            "id": "mediaType",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The media type of the attachment; defaults to &quot;application/octet-stream&quot;</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddAttachment",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 210,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The <code class=\"paramref\">mediaType</code> value must be in the MIME &quot;type/subtype&quot; form, and does not support\nparameter values. The subtype is allowed to have a single &quot;+&quot; to denote specialization of the\nsubtype (i.e., &quot;application/xhtml+xml&quot;). For more information on media types, see\n<a href=\"https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\">https://datatracker.ietf.org/doc/html/rfc2045#section-5.1</a>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.AddAttachment*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddAttachment"
          },
          {
            "lang": "vb",
            "value": "AddAttachment"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.AddAttachment"
          },
          {
            "lang": "vb",
            "value": "ITestContext.AddAttachment"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.AddAttachment"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.AddAttachment"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.AddAttachment*\" text=\"AddAttachment\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.AddAttachment*\" text=\"AddAttachment\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Adds an attachment that is a binary value (represented by a byte array and media type).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.AddAttachment(System.String,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddAttachment(string, string)"
        },
        {
          "lang": "vb",
          "value": "AddAttachment(String, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.AddAttachment(string, string)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.AddAttachment(String, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.AddAttachment(string, string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.AddAttachment(String, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.AddAttachment(System.String,System.String)\" text=\"AddAttachment(string, string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.AddAttachment(System.String,System.String)\" text=\"AddAttachment(string, string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void AddAttachment(string name, string value)"
          },
          {
            "lang": "vb",
            "value": "Sub AddAttachment(name As String, value As String)"
          }
        ],
        "parameters": [
          {
            "id": "name",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The name of the attachment</p>\n"
          },
          {
            "id": "value",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value of the attachment</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddAttachment",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 194,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.AddAttachment*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddAttachment"
          },
          {
            "lang": "vb",
            "value": "AddAttachment"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.AddAttachment"
          },
          {
            "lang": "vb",
            "value": "ITestContext.AddAttachment"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.AddAttachment"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.AddAttachment"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.AddAttachment*\" text=\"AddAttachment\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.AddAttachment*\" text=\"AddAttachment\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Adds an attachment that is a string value.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.AddWarning(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddWarning(string)"
        },
        {
          "lang": "vb",
          "value": "AddWarning(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.AddWarning(string)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.AddWarning(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.AddWarning(string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.AddWarning(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.AddWarning(System.String)\" text=\"AddWarning(string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.AddWarning(System.String)\" text=\"AddWarning(string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void AddWarning(string message)"
          },
          {
            "lang": "vb",
            "value": "Sub AddWarning(message As String)"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The warning message to be reported</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddWarning",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 219,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.AddWarning*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddWarning"
          },
          {
            "lang": "vb",
            "value": "AddWarning"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.AddWarning"
          },
          {
            "lang": "vb",
            "value": "ITestContext.AddWarning"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.AddWarning"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.AddWarning"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.AddWarning*\" text=\"AddWarning\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.AddWarning*\" text=\"AddWarning\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Adds a warning to the test result.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.Attachments",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Attachments"
        },
        {
          "lang": "vb",
          "value": "Attachments"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.Attachments"
        },
        {
          "lang": "vb",
          "value": "ITestContext.Attachments"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.Attachments"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.Attachments"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.Attachments\" text=\"Attachments\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.Attachments\" text=\"Attachments\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "IReadOnlyDictionary<string, TestAttachment>? Attachments { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Attachments As IReadOnlyDictionary(Of String, TestAttachment)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,Xunit.Sdk.TestAttachment}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, TestAttachment>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, TestAttachment)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, TestAttachment>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, TestAttachment)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, Xunit.Sdk.TestAttachment>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, Xunit.Sdk.TestAttachment)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <xref uid=\"Xunit.Sdk.TestAttachment\" text=\"TestAttachment\"/>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <xref uid=\"Xunit.Sdk.TestAttachment\" text=\"TestAttachment\"/>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Attachments",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 19,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.Attachments*",
        "name": [
          {
            "lang": "csharp",
            "value": "Attachments"
          },
          {
            "lang": "vb",
            "value": "Attachments"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.Attachments"
          },
          {
            "lang": "vb",
            "value": "ITestContext.Attachments"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.Attachments"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.Attachments"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.Attachments*\" text=\"Attachments\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.Attachments*\" text=\"Attachments\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the attachments for the current test, if the engine is currently in the process of running a test;\nwill return <code>null</code> outside of the context of a test.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.CancelCurrentTest",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CancelCurrentTest()"
        },
        {
          "lang": "vb",
          "value": "CancelCurrentTest()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.CancelCurrentTest()"
        },
        {
          "lang": "vb",
          "value": "ITestContext.CancelCurrentTest()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.CancelCurrentTest()"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.CancelCurrentTest()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.CancelCurrentTest\" text=\"CancelCurrentTest()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.CancelCurrentTest\" text=\"CancelCurrentTest()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void CancelCurrentTest()"
          },
          {
            "lang": "vb",
            "value": "Sub CancelCurrentTest()"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CancelCurrentTest",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 225,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.CancelCurrentTest*",
        "name": [
          {
            "lang": "csharp",
            "value": "CancelCurrentTest"
          },
          {
            "lang": "vb",
            "value": "CancelCurrentTest"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.CancelCurrentTest"
          },
          {
            "lang": "vb",
            "value": "ITestContext.CancelCurrentTest"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.CancelCurrentTest"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.CancelCurrentTest"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.CancelCurrentTest*\" text=\"CancelCurrentTest\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.CancelCurrentTest*\" text=\"CancelCurrentTest\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Attempt to cancel the currently executing test, if one is executing. This will\nsignal the <xref href=\"Xunit.ITestContext.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> for cancellation.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.CancellationToken",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "CancellationToken"
        },
        {
          "lang": "vb",
          "value": "CancellationToken"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.CancellationToken"
        },
        {
          "lang": "vb",
          "value": "ITestContext.CancellationToken"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.CancellationToken"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.CancellationToken"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.CancellationToken\" text=\"CancellationToken\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.CancellationToken\" text=\"CancellationToken\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "CancellationToken CancellationToken { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property CancellationToken As CancellationToken"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Threading.CancellationToken",
            "name": [
              {
                "lang": "csharp",
                "value": "CancellationToken"
              },
              {
                "lang": "vb",
                "value": "CancellationToken"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "CancellationToken"
              },
              {
                "lang": "vb",
                "value": "CancellationToken"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.CancellationToken"
              },
              {
                "lang": "vb",
                "value": "System.Threading.CancellationToken"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Threading.CancellationToken\" text=\"CancellationToken\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Threading.CancellationToken\" text=\"CancellationToken\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "CancellationToken",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 27,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.CancellationToken*",
        "name": [
          {
            "lang": "csharp",
            "value": "CancellationToken"
          },
          {
            "lang": "vb",
            "value": "CancellationToken"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.CancellationToken"
          },
          {
            "lang": "vb",
            "value": "ITestContext.CancellationToken"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.CancellationToken"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.CancellationToken"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.CancellationToken*\" text=\"CancellationToken\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.CancellationToken*\" text=\"CancellationToken\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the cancellation token that is used to indicate that the test run should be\naborted. Async tests should pass this along to any async functions that support\ncancellation tokens, to help speed up the cancellation process.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.GetFixture(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetFixture(Type)"
        },
        {
          "lang": "vb",
          "value": "GetFixture(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.GetFixture(Type)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.GetFixture(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.GetFixture(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.GetFixture(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.GetFixture(System.Type)\" text=\"GetFixture(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.GetFixture(System.Type)\" text=\"GetFixture(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ValueTask<object?> GetFixture(Type fixtureType)"
          },
          {
            "lang": "vb",
            "value": "Function GetFixture(fixtureType As Type) As ValueTask(Of Object)"
          }
        ],
        "parameters": [
          {
            "id": "fixtureType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The exact type of the fixture</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Threading.Tasks.ValueTask{System.Object}",
            "definition": "System.Threading.Tasks.ValueTask`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ValueTask<object>"
              },
              {
                "lang": "vb",
                "value": "ValueTask(Of Object)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ValueTask<object>"
              },
              {
                "lang": "vb",
                "value": "ValueTask(Of Object)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.Tasks.ValueTask<object>"
              },
              {
                "lang": "vb",
                "value": "System.Threading.Tasks.ValueTask(Of Object)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1\">ValueTask</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1\">ValueTask</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The fixture, if available; <code>null</code>, otherwise</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetFixture",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 238,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">This may be a fixture attached via <xref href=\"Xunit.IClassFixture%601\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Xunit.ICollectionFixture%601\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"Xunit.AssemblyFixtureAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.GetFixture*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetFixture"
          },
          {
            "lang": "vb",
            "value": "GetFixture"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.GetFixture"
          },
          {
            "lang": "vb",
            "value": "ITestContext.GetFixture"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.GetFixture"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.GetFixture"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.GetFixture*\" text=\"GetFixture\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.GetFixture*\" text=\"GetFixture\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets a fixture that was attached to the test class. Will return <code>null</code> if there is\nno exact match for the requested fixture type, or if there is no test class (that is,\nif <xref href=\"Xunit.ITestContext.TestClass\" data-throw-if-not-resolved=\"false\"></xref> returns <code>null</code>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.KeyValueStorage",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "KeyValueStorage"
        },
        {
          "lang": "vb",
          "value": "KeyValueStorage"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.KeyValueStorage"
        },
        {
          "lang": "vb",
          "value": "ITestContext.KeyValueStorage"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.KeyValueStorage"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.KeyValueStorage"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.KeyValueStorage\" text=\"KeyValueStorage\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.KeyValueStorage\" text=\"KeyValueStorage\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "Dictionary<string, object?> KeyValueStorage { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property KeyValueStorage As Dictionary(Of String, Object)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.Dictionary{System.String,System.Object}",
            "definition": "System.Collections.Generic.Dictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "Dictionary<string, object>"
              },
              {
                "lang": "vb",
                "value": "Dictionary(Of String, Object)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Dictionary<string, object>"
              },
              {
                "lang": "vb",
                "value": "Dictionary(Of String, Object)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.Dictionary<string, object>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.Dictionary(Of String, Object)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2\">Dictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2\">Dictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "KeyValueStorage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 40,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">This storage system is purely for communication between extension points. The values in here\nare thrown away after the pipeline execution is complete. It is strongly recommend that\nextensions either prefix their key names or use guaranteed unique IDs like GUIDs, to prevent\ncollisions with other extension authors.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.KeyValueStorage*",
        "name": [
          {
            "lang": "csharp",
            "value": "KeyValueStorage"
          },
          {
            "lang": "vb",
            "value": "KeyValueStorage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.KeyValueStorage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.KeyValueStorage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.KeyValueStorage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.KeyValueStorage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.KeyValueStorage*\" text=\"KeyValueStorage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.KeyValueStorage*\" text=\"KeyValueStorage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Stores key/value pairs that are available across all stages of the pipeline. Can be used\nto communicate between extensions at different execution stages, in both directions, as\na single storage container is used for the entire pipeline.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.PipelineStage",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "PipelineStage"
        },
        {
          "lang": "vb",
          "value": "PipelineStage"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.PipelineStage"
        },
        {
          "lang": "vb",
          "value": "ITestContext.PipelineStage"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.PipelineStage"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.PipelineStage"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.PipelineStage\" text=\"PipelineStage\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.PipelineStage\" text=\"PipelineStage\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestPipelineStage PipelineStage { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property PipelineStage As TestPipelineStage"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.TestPipelineStage",
            "name": [
              {
                "lang": "csharp",
                "value": "TestPipelineStage"
              },
              {
                "lang": "vb",
                "value": "TestPipelineStage"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestPipelineStage"
              },
              {
                "lang": "vb",
                "value": "TestPipelineStage"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestPipelineStage"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestPipelineStage"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.TestPipelineStage\" text=\"TestPipelineStage\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.TestPipelineStage\" text=\"TestPipelineStage\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "PipelineStage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 45,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.PipelineStage*",
        "name": [
          {
            "lang": "csharp",
            "value": "PipelineStage"
          },
          {
            "lang": "vb",
            "value": "PipelineStage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.PipelineStage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.PipelineStage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.PipelineStage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.PipelineStage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.PipelineStage*\" text=\"PipelineStage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.PipelineStage*\" text=\"PipelineStage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test pipeline stage.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.SendDiagnosticMessage(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SendDiagnosticMessage(string)"
        },
        {
          "lang": "vb",
          "value": "SendDiagnosticMessage(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.SendDiagnosticMessage(string)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.SendDiagnosticMessage(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String)\" text=\"SendDiagnosticMessage(string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String)\" text=\"SendDiagnosticMessage(string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void SendDiagnosticMessage(string message)"
          },
          {
            "lang": "vb",
            "value": "Sub SendDiagnosticMessage(message As String)"
          }
        ],
        "parameters": [
          {
            "id": "message",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The message to send</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SendDiagnosticMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 245,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.SendDiagnosticMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "SendDiagnosticMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.SendDiagnosticMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Sends a diagnostic message. Will only be visible if the end user has enabled diagnostic messages.\nSee <a href=\"https://xunit.net/docs/configuration-files\" sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"2\">https://xunit.net/docs/configuration-files</a> for configuration information.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SendDiagnosticMessage(string, object?)"
        },
        {
          "lang": "vb",
          "value": "SendDiagnosticMessage(String, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.SendDiagnosticMessage(string, object?)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.SendDiagnosticMessage(String, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(string, object?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(String, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object)\" text=\"SendDiagnosticMessage(string, object?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object)\" text=\"SendDiagnosticMessage(string, object?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void SendDiagnosticMessage(string format, object? arg0)"
          },
          {
            "lang": "vb",
            "value": "Sub SendDiagnosticMessage(format As String, arg0 As Object)"
          }
        ],
        "parameters": [
          {
            "id": "format",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">A composite format string.</p>\n"
          },
          {
            "id": "arg0",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {0} in the format string.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SendDiagnosticMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 253,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.SendDiagnosticMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "SendDiagnosticMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.SendDiagnosticMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Sends a formatted diagnostic message. Will only be visible if the end user has enabled diagnostic messages.\nSee <a href=\"https://xunit.net/docs/configuration-files\" sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"2\">https://xunit.net/docs/configuration-files</a> for configuration information.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SendDiagnosticMessage(string, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "SendDiagnosticMessage(String, Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.SendDiagnosticMessage(string, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.SendDiagnosticMessage(String, Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(string, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(String, Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object)\" text=\"SendDiagnosticMessage(string, object?, object?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object)\" text=\"SendDiagnosticMessage(string, object?, object?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void SendDiagnosticMessage(string format, object? arg0, object? arg1)"
          },
          {
            "lang": "vb",
            "value": "Sub SendDiagnosticMessage(format As String, arg0 As Object, arg1 As Object)"
          }
        ],
        "parameters": [
          {
            "id": "format",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">A composite format string.</p>\n"
          },
          {
            "id": "arg0",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {0} in the format string.</p>\n"
          },
          {
            "id": "arg1",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {1} in the format string.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SendDiagnosticMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 262,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.SendDiagnosticMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "SendDiagnosticMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.SendDiagnosticMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Sends a formatted diagnostic message. Will only be visible if the end user has enabled diagnostic messages.\nSee <a href=\"https://xunit.net/docs/configuration-files\" sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"2\">https://xunit.net/docs/configuration-files</a> for configuration information.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SendDiagnosticMessage(string, object?, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "SendDiagnosticMessage(String, Object, Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.SendDiagnosticMessage(string, object?, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "ITestContext.SendDiagnosticMessage(String, Object, Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(string, object?, object?, object?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(String, Object, Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object,System.Object)\" text=\"SendDiagnosticMessage(string, object?, object?, object?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object,System.Object,System.Object)\" text=\"SendDiagnosticMessage(string, object?, object?, object?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void SendDiagnosticMessage(string format, object? arg0, object? arg1, object? arg2)"
          },
          {
            "lang": "vb",
            "value": "Sub SendDiagnosticMessage(format As String, arg0 As Object, arg1 As Object, arg2 As Object)"
          }
        ],
        "parameters": [
          {
            "id": "format",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">A composite format string.</p>\n"
          },
          {
            "id": "arg0",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {0} in the format string.</p>\n"
          },
          {
            "id": "arg1",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {1} in the format string.</p>\n"
          },
          {
            "id": "arg2",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">The value to replace {2} in the format string.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SendDiagnosticMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 272,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.SendDiagnosticMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "SendDiagnosticMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.SendDiagnosticMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Sends a formatted diagnostic message. Will only be visible if the end user has enabled diagnostic messages.\nSee <a href=\"https://xunit.net/docs/configuration-files\" sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"2\">https://xunit.net/docs/configuration-files</a> for configuration information.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SendDiagnosticMessage(string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "SendDiagnosticMessage(String, ParamArray Object())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.SendDiagnosticMessage(string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "ITestContext.SendDiagnosticMessage(String, ParamArray Object())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(string, params object?[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.SendDiagnosticMessage(String, ParamArray Object())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object[])\" text=\"SendDiagnosticMessage(string, params object?[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage(System.String,System.Object[])\" text=\"SendDiagnosticMessage(string, params object?[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "void SendDiagnosticMessage(string format, params object?[] args)"
          },
          {
            "lang": "vb",
            "value": "Sub SendDiagnosticMessage(format As String, ParamArray args As Object())"
          }
        ],
        "parameters": [
          {
            "id": "format",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">A composite format string.</p>\n"
          },
          {
            "id": "args",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">An object array that contains zero or more objects to format.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SendDiagnosticMessage",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 280,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.SendDiagnosticMessage*",
        "name": [
          {
            "lang": "csharp",
            "value": "SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "SendDiagnosticMessage"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "ITestContext.SendDiagnosticMessage"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.SendDiagnosticMessage"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.SendDiagnosticMessage*\" text=\"SendDiagnosticMessage\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Sends a formatted diagnostic message. Will only be visible if the end user has enabled diagnostic messages.\nSee <a href=\"https://xunit.net/docs/configuration-files\" sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"2\">https://xunit.net/docs/configuration-files</a> for configuration information.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.Test",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Test"
        },
        {
          "lang": "vb",
          "value": "Test"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.Test"
        },
        {
          "lang": "vb",
          "value": "ITestContext.Test"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.Test"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.Test"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.Test\" text=\"Test\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.Test\" text=\"Test\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITest? Test { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Test As ITest"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITest",
            "name": [
              {
                "lang": "csharp",
                "value": "ITest"
              },
              {
                "lang": "vb",
                "value": "ITest"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITest"
              },
              {
                "lang": "vb",
                "value": "ITest"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITest"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITest"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITest\" text=\"ITest\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITest\" text=\"ITest\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Test",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 55,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTest\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.Test*",
        "name": [
          {
            "lang": "csharp",
            "value": "Test"
          },
          {
            "lang": "vb",
            "value": "Test"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.Test"
          },
          {
            "lang": "vb",
            "value": "ITestContext.Test"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.Test"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.Test"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.Test*\" text=\"Test\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.Test*\" text=\"Test\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test, if the engine is currently in the process of running a test;\nwill return <code>null</code> outside of the context of a test.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestAssembly",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestAssembly"
        },
        {
          "lang": "vb",
          "value": "TestAssembly"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestAssembly"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestAssembly"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestAssembly"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestAssembly"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestAssembly\" text=\"TestAssembly\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestAssembly\" text=\"TestAssembly\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestAssembly? TestAssembly { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestAssembly As ITestAssembly"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestAssembly",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestAssembly"
              },
              {
                "lang": "vb",
                "value": "ITestAssembly"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestAssembly"
              },
              {
                "lang": "vb",
                "value": "ITestAssembly"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestAssembly"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestAssembly"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestAssembly\" text=\"ITestAssembly\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestAssembly\" text=\"ITestAssembly\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestAssembly",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 66,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTestAssembly\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestAssembly*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestAssembly"
          },
          {
            "lang": "vb",
            "value": "TestAssembly"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestAssembly"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestAssembly"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestAssembly"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestAssembly"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestAssembly*\" text=\"TestAssembly\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestAssembly*\" text=\"TestAssembly\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test assembly, if the engine is currently in the process of running or\ndiscovering tests in assembly; will return <code>null</code> out of this context (this typically\nmeans the test framework itself is being created and initialized).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestAssemblyStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestAssemblyStatus"
        },
        {
          "lang": "vb",
          "value": "TestAssemblyStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestAssemblyStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestAssemblyStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestAssemblyStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestAssemblyStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestAssemblyStatus\" text=\"TestAssemblyStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestAssemblyStatus\" text=\"TestAssemblyStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestAssemblyStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestAssemblyStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestAssemblyStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 72,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestAssemblyStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestAssemblyStatus"
          },
          {
            "lang": "vb",
            "value": "TestAssemblyStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestAssemblyStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestAssemblyStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestAssemblyStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestAssemblyStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestAssemblyStatus*\" text=\"TestAssemblyStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestAssemblyStatus*\" text=\"TestAssemblyStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test assembly.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestCase",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestCase"
        },
        {
          "lang": "vb",
          "value": "TestCase"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestCase"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestCase"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestCase"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestCase"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestCase\" text=\"TestCase\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestCase\" text=\"TestCase\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestCase? TestCase { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestCase As ITestCase"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestCase",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCase"
              },
              {
                "lang": "vb",
                "value": "ITestCase"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCase"
              },
              {
                "lang": "vb",
                "value": "ITestCase"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestCase"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestCase"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestCase\" text=\"ITestCase\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestCase\" text=\"ITestCase\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestCase",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 83,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTestCase\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestCase*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestCase"
          },
          {
            "lang": "vb",
            "value": "TestCase"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestCase"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestCase"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestCase"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestCase"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestCase*\" text=\"TestCase\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestCase*\" text=\"TestCase\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test case, if the engine is currently in the process of running a\ntest case; will return <code>null</code> outside of the context of a test case.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestCaseStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestCaseStatus"
        },
        {
          "lang": "vb",
          "value": "TestCaseStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestCaseStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestCaseStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestCaseStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestCaseStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestCaseStatus\" text=\"TestCaseStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestCaseStatus\" text=\"TestCaseStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestCaseStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestCaseStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestCaseStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 90,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestCaseStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestCaseStatus"
          },
          {
            "lang": "vb",
            "value": "TestCaseStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestCaseStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestCaseStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestCaseStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestCaseStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestCaseStatus*\" text=\"TestCaseStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestCaseStatus*\" text=\"TestCaseStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test case. Will only be available when <xref href=\"Xunit.ITestContext.TestCase\" data-throw-if-not-resolved=\"false\"></xref>\nis not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestClass",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestClass"
        },
        {
          "lang": "vb",
          "value": "TestClass"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestClass"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestClass"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestClass"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestClass"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestClass\" text=\"TestClass\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestClass\" text=\"TestClass\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestClass? TestClass { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestClass As ITestClass"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestClass",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestClass"
              },
              {
                "lang": "vb",
                "value": "ITestClass"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestClass"
              },
              {
                "lang": "vb",
                "value": "ITestClass"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestClass"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestClass"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestClass\" text=\"ITestClass\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestClass\" text=\"ITestClass\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestClass",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 103,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTestClass\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestClass*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestClass"
          },
          {
            "lang": "vb",
            "value": "TestClass"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestClass"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestClass"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestClass"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestClass"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestClass*\" text=\"TestClass\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestClass*\" text=\"TestClass\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test method, if the engine is currently in the process of running\na test class; will return <code>null</code> outside of the context of a test class. Note that\nnot all test framework implementations require that tests be based on classes, so this\nvalue may be <code>null</code> even if <xref href=\"Xunit.ITestContext.TestCase\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestClassInstance",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestClassInstance"
        },
        {
          "lang": "vb",
          "value": "TestClassInstance"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestClassInstance"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestClassInstance"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestClassInstance"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestClassInstance"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestClassInstance\" text=\"TestClassInstance\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestClassInstance\" text=\"TestClassInstance\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "object? TestClassInstance { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestClassInstance As Object"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Object",
            "name": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestClassInstance",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 116,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">This value will only be available when <xref href=\"Xunit.ITestContext.PipelineStage\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Xunit.TestPipelineStage.TestExecution\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.ITestContext.TestStatus\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Xunit.TestEngineStatus.Running\" data-throw-if-not-resolved=\"false\"></xref>, and only after the test class has been\ncreated. It will become <code>null</code> again immediately after the test class has been disposed.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestClassInstance*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestClassInstance"
          },
          {
            "lang": "vb",
            "value": "TestClassInstance"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestClassInstance"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestClassInstance"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestClassInstance"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestClassInstance"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestClassInstance*\" text=\"TestClassInstance\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestClassInstance*\" text=\"TestClassInstance\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the instance of the test class; will return <code>null</code> outside of the context of\na test. Static test methods do not create test class instances, so this will always be <code>null</code>\nfor static test methods.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestClassStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestClassStatus"
        },
        {
          "lang": "vb",
          "value": "TestClassStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestClassStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestClassStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestClassStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestClassStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestClassStatus\" text=\"TestClassStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestClassStatus\" text=\"TestClassStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestClassStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestClassStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestClassStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 122,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestClassStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestClassStatus"
          },
          {
            "lang": "vb",
            "value": "TestClassStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestClassStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestClassStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestClassStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestClassStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestClassStatus*\" text=\"TestClassStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestClassStatus*\" text=\"TestClassStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test class. Will only be available when <xref href=\"Xunit.ITestContext.TestClass\" data-throw-if-not-resolved=\"false\"></xref>\nis not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestCollection",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestCollection"
        },
        {
          "lang": "vb",
          "value": "TestCollection"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestCollection"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestCollection"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestCollection"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestCollection"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestCollection\" text=\"TestCollection\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestCollection\" text=\"TestCollection\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestCollection? TestCollection { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestCollection As ITestCollection"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestCollection",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCollection"
              },
              {
                "lang": "vb",
                "value": "ITestCollection"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCollection"
              },
              {
                "lang": "vb",
                "value": "ITestCollection"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestCollection"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestCollection"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestCollection\" text=\"ITestCollection\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestCollection\" text=\"ITestCollection\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestCollection",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 133,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTestCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestCollection*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestCollection"
          },
          {
            "lang": "vb",
            "value": "TestCollection"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestCollection"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestCollection"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestCollection"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestCollection"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestCollection*\" text=\"TestCollection\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestCollection*\" text=\"TestCollection\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test collection, if the engine is currently in the process of running\na test collection; will return <code>null</code> outside of the context of a test collection.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestCollectionStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestCollectionStatus"
        },
        {
          "lang": "vb",
          "value": "TestCollectionStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestCollectionStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestCollectionStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestCollectionStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestCollectionStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestCollectionStatus\" text=\"TestCollectionStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestCollectionStatus\" text=\"TestCollectionStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestCollectionStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestCollectionStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestCollectionStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 141,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestCollectionStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestCollectionStatus"
          },
          {
            "lang": "vb",
            "value": "TestCollectionStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestCollectionStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestCollectionStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestCollectionStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestCollectionStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestCollectionStatus*\" text=\"TestCollectionStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestCollectionStatus*\" text=\"TestCollectionStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test collection. Will only be available when\n<xref href=\"Xunit.ITestContext.TestCollection\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestMethod",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestMethod"
        },
        {
          "lang": "vb",
          "value": "TestMethod"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestMethod"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestMethod"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestMethod"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestMethod"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestMethod\" text=\"TestMethod\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestMethod\" text=\"TestMethod\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestMethod? TestMethod { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestMethod As ITestMethod"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.ITestMethod",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestMethod"
              },
              {
                "lang": "vb",
                "value": "ITestMethod"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestMethod"
              },
              {
                "lang": "vb",
                "value": "ITestMethod"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.ITestMethod"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.ITestMethod"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.ITestMethod\" text=\"ITestMethod\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.ITestMethod\" text=\"ITestMethod\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestMethod",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 154,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">When running with the default test framework implementation, the value here is likely\nto implement <xref href=\"Xunit.v3.IXunitTestMethod\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestMethod*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestMethod"
          },
          {
            "lang": "vb",
            "value": "TestMethod"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestMethod"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestMethod"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestMethod"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestMethod"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestMethod*\" text=\"TestMethod\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestMethod*\" text=\"TestMethod\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test method, if the engine is currently in the process of running\na test method; will return <code>null</code> outside of the context of a test method. Note that\nnot all test framework implementations require that tests be based on methods, so this\nvalue may be <code>null</code> even if <xref href=\"Xunit.ITestContext.TestCase\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestMethodStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestMethodStatus"
        },
        {
          "lang": "vb",
          "value": "TestMethodStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestMethodStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestMethodStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestMethodStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestMethodStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestMethodStatus\" text=\"TestMethodStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestMethodStatus\" text=\"TestMethodStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestMethodStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestMethodStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestMethodStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 160,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestMethodStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestMethodStatus"
          },
          {
            "lang": "vb",
            "value": "TestMethodStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestMethodStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestMethodStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestMethodStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestMethodStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestMethodStatus*\" text=\"TestMethodStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestMethodStatus*\" text=\"TestMethodStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test method. Will only be available when <xref href=\"Xunit.ITestContext.TestMethod\" data-throw-if-not-resolved=\"false\"></xref>\nis not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestOutputHelper",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestOutputHelper"
        },
        {
          "lang": "vb",
          "value": "TestOutputHelper"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestOutputHelper"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestOutputHelper"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestOutputHelper"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestOutputHelper"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestOutputHelper\" text=\"TestOutputHelper\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestOutputHelper\" text=\"TestOutputHelper\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ITestOutputHelper? TestOutputHelper { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestOutputHelper As ITestOutputHelper"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.ITestOutputHelper",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestOutputHelper"
              },
              {
                "lang": "vb",
                "value": "ITestOutputHelper"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestOutputHelper"
              },
              {
                "lang": "vb",
                "value": "ITestOutputHelper"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.ITestOutputHelper"
              },
              {
                "lang": "vb",
                "value": "Xunit.ITestOutputHelper"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.ITestOutputHelper\" text=\"ITestOutputHelper\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.ITestOutputHelper\" text=\"ITestOutputHelper\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestOutputHelper",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 169,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestOutputHelper*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestOutputHelper"
          },
          {
            "lang": "vb",
            "value": "TestOutputHelper"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestOutputHelper"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestOutputHelper"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestOutputHelper"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestOutputHelper"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestOutputHelper*\" text=\"TestOutputHelper\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestOutputHelper*\" text=\"TestOutputHelper\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the output helper, which can be used to add output to the test. Will only be\navailable when <xref href=\"Xunit.ITestContext.Test\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>. Note that the value may still\nbe <code>null</code> when <xref href=\"Xunit.ITestContext.Test\" data-throw-if-not-resolved=\"false\"></xref> is not <code>null</code>, if the test framework\nimplementation does not provide output helper support.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestState",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestState"
        },
        {
          "lang": "vb",
          "value": "TestState"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestState"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestState"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestState"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestState"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestState\" text=\"TestState\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestState\" text=\"TestState\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestResultState? TestState { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestState As TestResultState"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.TestResultState",
            "name": [
              {
                "lang": "csharp",
                "value": "TestResultState"
              },
              {
                "lang": "vb",
                "value": "TestResultState"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestResultState"
              },
              {
                "lang": "vb",
                "value": "TestResultState"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestResultState"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestResultState"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.TestResultState\" text=\"TestResultState\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.TestResultState\" text=\"TestResultState\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestState",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 174,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestState*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestState"
          },
          {
            "lang": "vb",
            "value": "TestState"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestState"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestState"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestState"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestState"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestState*\" text=\"TestState\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestState*\" text=\"TestState\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current state of the test. Will only be available after the test has finished running.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.TestStatus",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestStatus"
        },
        {
          "lang": "vb",
          "value": "TestStatus"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.TestStatus"
        },
        {
          "lang": "vb",
          "value": "ITestContext.TestStatus"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.TestStatus"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.TestStatus"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.TestStatus\" text=\"TestStatus\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.TestStatus\" text=\"TestStatus\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "TestEngineStatus? TestStatus { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestStatus As TestEngineStatus?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{Xunit.TestEngineStatus}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "TestEngineStatus?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.TestEngineStatus?"
              },
              {
                "lang": "vb",
                "value": "Xunit.TestEngineStatus?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"Xunit.TestEngineStatus.html\">TestEngineStatus</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestStatus",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 180,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.TestStatus*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestStatus"
          },
          {
            "lang": "vb",
            "value": "TestStatus"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.TestStatus"
          },
          {
            "lang": "vb",
            "value": "ITestContext.TestStatus"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.TestStatus"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.TestStatus"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.TestStatus*\" text=\"TestStatus\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.TestStatus*\" text=\"TestStatus\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the current test engine status for the test. Will only be available when <xref href=\"Xunit.ITestContext.Test\" data-throw-if-not-resolved=\"false\"></xref>\nis not <code>null</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.ITestContext.Warnings",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.ITestContext",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Warnings"
        },
        {
          "lang": "vb",
          "value": "Warnings"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITestContext.Warnings"
        },
        {
          "lang": "vb",
          "value": "ITestContext.Warnings"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.ITestContext.Warnings"
        },
        {
          "lang": "vb",
          "value": "Xunit.ITestContext.Warnings"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.ITestContext.Warnings\" text=\"Warnings\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.ITestContext.Warnings\" text=\"Warnings\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "IReadOnlyList<string>? Warnings { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Warnings As IReadOnlyList(Of String)"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyList{System.String}",
            "definition": "System.Collections.Generic.IReadOnlyList`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of String)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyList(Of String)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyList<string>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyList(Of String)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1\">IReadOnlyList</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/ITestContext.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Warnings",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
        "startLine": 187,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.ITestContext.Warnings*",
        "name": [
          {
            "lang": "csharp",
            "value": "Warnings"
          },
          {
            "lang": "vb",
            "value": "Warnings"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITestContext.Warnings"
          },
          {
            "lang": "vb",
            "value": "ITestContext.Warnings"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.ITestContext.Warnings"
          },
          {
            "lang": "vb",
            "value": "Xunit.ITestContext.Warnings"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.ITestContext.Warnings*\" text=\"Warnings\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.ITestContext.Warnings*\" text=\"Warnings\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Gets the set of warnings associated with the current test. Will only be available when <xref href=\"Xunit.ITestContext.Test\" data-throw-if-not-resolved=\"false\"></xref>\nis not <code>null</code>; will also return <code>null</code> if there have been no warnings issued.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ITestContext"
    },
    {
      "lang": "vb",
      "value": "ITestContext"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ITestContext"
    },
    {
      "lang": "vb",
      "value": "ITestContext"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.ITestContext"
    },
    {
      "lang": "vb",
      "value": "Xunit.ITestContext"
    }
  ],
  "type": "interface",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/ITestContext.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "ITestContext",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/ITestContext.cs",
    "startLine": 13,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.ITestContext.yml\" sourcestartlinenumber=\"1\">Represents the current state of the test pipeline.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public interface ITestContext"
      },
      {
        "lang": "vb",
        "value": "Public Interface ITestContext"
      }
    ]
  },
  "level": 0,
  "extensionMethods": [
    {
      "uid": "Xunit.ITestContext.Xunit.TestContextExtensions.GetFixture``1",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TestContextExtensions",
      "definition": "Xunit.TestContextExtensions.GetFixture``1(Xunit.ITestContext)",
      "href": "Xunit.TestContextExtensions.html#Xunit_TestContextExtensions_GetFixture__1_Xunit_ITestContext_",
      "name": [
        {
          "lang": "csharp",
          "value": "GetFixture<TFixture>(ITestContext)"
        },
        {
          "lang": "vb",
          "value": "GetFixture(Of TFixture)(ITestContext)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TestContextExtensions.GetFixture<TFixture>(ITestContext)"
        },
        {
          "lang": "vb",
          "value": "TestContextExtensions.GetFixture(Of TFixture)(ITestContext)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TestContextExtensions.GetFixture<TFixture>(Xunit.ITestContext)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TestContextExtensions.GetFixture(Of TFixture)(Xunit.ITestContext)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.TestContextExtensions.html#Xunit_TestContextExtensions_GetFixture__1_Xunit_ITestContext_\">GetFixture</a>&lt;TFixture&gt;(<a class=\"xref\" href=\"Xunit.ITestContext.html\">ITestContext</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.TestContextExtensions.html#Xunit_TestContextExtensions_GetFixture__1_Xunit_ITestContext_\">GetFixture</a>(Of TFixture)(<a class=\"xref\" href=\"Xunit.ITestContext.html\">ITestContext</a>)"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.ITestContext.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.ITestContext.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}