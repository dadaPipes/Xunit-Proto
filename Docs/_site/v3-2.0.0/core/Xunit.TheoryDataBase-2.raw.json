{
  "uid": "Xunit.TheoryDataBase`2",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.TheoryDataBase`2.Add(`0)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Add(TTheoryDataRow)"
        },
        {
          "lang": "vb",
          "value": "Add(TTheoryDataRow)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add(`0)\" text=\"Add(TTheoryDataRow)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add(`0)\" text=\"Add(TTheoryDataRow)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Add(TTheoryDataRow row)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Add(row As TTheoryDataRow)"
          }
        ],
        "parameters": [
          {
            "id": "row",
            "type": {
              "uid": "{TTheoryDataRow}",
              "definition": "TTheoryDataRow",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{TTheoryDataRow}\" text=\"TTheoryDataRow\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{TTheoryDataRow}\" text=\"TTheoryDataRow\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The row of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Add",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 30,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.Add*",
        "name": [
          {
            "lang": "csharp",
            "value": "Add"
          },
          {
            "lang": "vb",
            "value": "Add"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add*\" text=\"Add\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add*\" text=\"Add\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds a row to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.Add(`1)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Add(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "Add(TRawDataRow)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add(`1)\" text=\"Add(TRawDataRow)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add(`1)\" text=\"Add(TRawDataRow)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void Add(TRawDataRow row)"
          },
          {
            "lang": "vb",
            "value": "Public Sub Add(row As TRawDataRow)"
          }
        ],
        "parameters": [
          {
            "id": "row",
            "type": {
              "uid": "{TRawDataRow}",
              "definition": "TRawDataRow",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{TRawDataRow}\" text=\"TRawDataRow\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{TRawDataRow}\" text=\"TRawDataRow\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The row of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Add",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 23,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.Add*",
        "name": [
          {
            "lang": "csharp",
            "value": "Add"
          },
          {
            "lang": "vb",
            "value": "Add"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add*\" text=\"Add\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Add*\" text=\"Add\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds a row to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(IEnumerable<TTheoryDataRow>)"
        },
        {
          "lang": "vb",
          "value": "AddRange(IEnumerable(Of TTheoryDataRow))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TTheoryDataRow>)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TTheoryDataRow))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TTheoryDataRow>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TTheoryDataRow))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})\" text=\"AddRange(IEnumerable&lt;TTheoryDataRow&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})\" text=\"AddRange(IEnumerable&lt;TTheoryDataRow&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void AddRange(IEnumerable<TTheoryDataRow> rows)"
          },
          {
            "lang": "vb",
            "value": "Public Sub AddRange(rows As IEnumerable(Of TTheoryDataRow))"
          }
        ],
        "parameters": [
          {
            "id": "rows",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{{TTheoryDataRow}}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<TTheoryDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of TTheoryDataRow)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<TTheoryDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of TTheoryDataRow)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<TTheoryDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of TTheoryDataRow)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;TTheoryDataRow&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of TTheoryDataRow)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The rows of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddRange",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 57,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.AddRange*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddRange"
          },
          {
            "lang": "vb",
            "value": "AddRange"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds multiple rows to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(IEnumerable<TRawDataRow>)"
        },
        {
          "lang": "vb",
          "value": "AddRange(IEnumerable(Of TRawDataRow))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TRawDataRow>)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TRawDataRow))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TRawDataRow>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TRawDataRow))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})\" text=\"AddRange(IEnumerable&lt;TRawDataRow&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})\" text=\"AddRange(IEnumerable&lt;TRawDataRow&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void AddRange(IEnumerable<TRawDataRow> rows)"
          },
          {
            "lang": "vb",
            "value": "Public Sub AddRange(rows As IEnumerable(Of TRawDataRow))"
          }
        ],
        "parameters": [
          {
            "id": "rows",
            "type": {
              "uid": "System.Collections.Generic.IEnumerable{{TRawDataRow}}",
              "definition": "System.Collections.Generic.IEnumerable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<TRawDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of TRawDataRow)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IEnumerable<TRawDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "IEnumerable(Of TRawDataRow)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IEnumerable<TRawDataRow>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IEnumerable(Of TRawDataRow)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;TRawDataRow&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of TRawDataRow)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The rows of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddRange",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 37,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.AddRange*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddRange"
          },
          {
            "lang": "vb",
            "value": "AddRange"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds multiple rows to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.AddRange(`0[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(params TTheoryDataRow[])"
        },
        {
          "lang": "vb",
          "value": "AddRange(ParamArray TTheoryDataRow())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(`0[])\" text=\"AddRange(params TTheoryDataRow[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(`0[])\" text=\"AddRange(params TTheoryDataRow[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void AddRange(params TTheoryDataRow[] rows)"
          },
          {
            "lang": "vb",
            "value": "Public Sub AddRange(ParamArray rows As TTheoryDataRow())"
          }
        ],
        "parameters": [
          {
            "id": "rows",
            "type": {
              "uid": "{TTheoryDataRow}[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "TTheoryDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TTheoryDataRow()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The rows of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddRange",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 67,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.AddRange*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddRange"
          },
          {
            "lang": "vb",
            "value": "AddRange"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds multiple rows to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.AddRange(`1[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "AddRange(params TRawDataRow[])"
        },
        {
          "lang": "vb",
          "value": "AddRange(ParamArray TRawDataRow())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(`1[])\" text=\"AddRange(params TRawDataRow[])\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange(`1[])\" text=\"AddRange(params TRawDataRow[])\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public void AddRange(params TRawDataRow[] rows)"
          },
          {
            "lang": "vb",
            "value": "Public Sub AddRange(ParamArray rows As TRawDataRow())"
          }
        ],
        "parameters": [
          {
            "id": "rows",
            "type": {
              "uid": "{TRawDataRow}[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow[]"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The rows of data to be added.</p>\n"
          }
        ]
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "AddRange",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 47,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.AddRange*",
        "name": [
          {
            "lang": "csharp",
            "value": "AddRange"
          },
          {
            "lang": "vb",
            "value": "AddRange"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.AddRange*\" text=\"AddRange\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Adds multiple rows to the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.Convert(`1)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Convert(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "Convert(TRawDataRow)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Convert(`1)\" text=\"Convert(TRawDataRow)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Convert(`1)\" text=\"Convert(TRawDataRow)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "protected abstract TTheoryDataRow Convert(TRawDataRow row)"
          },
          {
            "lang": "vb",
            "value": "Protected MustOverride Function Convert(row As TRawDataRow) As TTheoryDataRow"
          }
        ],
        "parameters": [
          {
            "id": "row",
            "type": {
              "uid": "{TRawDataRow}",
              "definition": "TRawDataRow",
              "name": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "TRawDataRow"
                },
                {
                  "lang": "vb",
                  "value": "TRawDataRow"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"{TRawDataRow}\" text=\"TRawDataRow\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"{TRawDataRow}\" text=\"TRawDataRow\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The raw data row</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{TTheoryDataRow}",
            "definition": "TTheoryDataRow",
            "name": [
              {
                "lang": "csharp",
                "value": "TTheoryDataRow"
              },
              {
                "lang": "vb",
                "value": "TTheoryDataRow"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TTheoryDataRow"
              },
              {
                "lang": "vb",
                "value": "TTheoryDataRow"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "TTheoryDataRow"
              },
              {
                "lang": "vb",
                "value": "TTheoryDataRow"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{TTheoryDataRow}\" text=\"TTheoryDataRow\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{TTheoryDataRow}\" text=\"TTheoryDataRow\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Convert",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 77,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.Convert*",
        "name": [
          {
            "lang": "csharp",
            "value": "Convert"
          },
          {
            "lang": "vb",
            "value": "Convert"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Convert*\" text=\"Convert\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Convert*\" text=\"Convert\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Convert untyped values into the appropriate theory data row.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.Count",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Count"
        },
        {
          "lang": "vb",
          "value": "Count"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Count\" text=\"Count\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.Count\" text=\"Count\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int Count { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Count As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Count",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 17,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.Count*",
        "name": [
          {
            "lang": "csharp",
            "value": "Count"
          },
          {
            "lang": "vb",
            "value": "Count"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Count*\" text=\"Count\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.Count*\" text=\"Count\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}.Count",
          "definition": "System.Collections.Generic.IReadOnlyCollection`1.Count",
          "name": [
            {
              "lang": "csharp",
              "value": "Count"
            },
            {
              "lang": "vb",
              "value": "Count"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IReadOnlyCollection<TTheoryDataRow>.Count"
            },
            {
              "lang": "vb",
              "value": "IReadOnlyCollection(Of TTheoryDataRow).Count"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.Collections.Generic.IReadOnlyCollection<TTheoryDataRow>.Count"
            },
            {
              "lang": "vb",
              "value": "System.Collections.Generic.IReadOnlyCollection(Of TTheoryDataRow).Count"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<xref uid=\"System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}.Count\" text=\"Count\"/>"
            },
            {
              "lang": "vb",
              "value": "<xref uid=\"System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}.Count\" text=\"Count\"/>"
            }
          ]
        }
      ],
      "type": "property",
      "summary": null,
      "platform": null
    },
    {
      "uid": "Xunit.TheoryDataBase`2.GetEnumerator",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.TheoryDataBase`2",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "GetEnumerator()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()"
        },
        {
          "lang": "vb",
          "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.GetEnumerator\" text=\"GetEnumerator()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryDataBase`2.GetEnumerator\" text=\"GetEnumerator()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public IEnumerator<TTheoryDataRow> GetEnumerator()"
          },
          {
            "lang": "vb",
            "value": "Public Function GetEnumerator() As IEnumerator(Of TTheoryDataRow)"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IEnumerator{{TTheoryDataRow}}",
            "definition": "System.Collections.Generic.IEnumerator`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IEnumerator<TTheoryDataRow>"
              },
              {
                "lang": "vb",
                "value": "IEnumerator(Of TTheoryDataRow)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IEnumerator<TTheoryDataRow>"
              },
              {
                "lang": "vb",
                "value": "IEnumerator(Of TTheoryDataRow)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IEnumerator<TTheoryDataRow>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IEnumerator(Of TTheoryDataRow)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1\">IEnumerator</a>&lt;TTheoryDataRow&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1\">IEnumerator</a>(Of TTheoryDataRow)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/TheoryData.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetEnumerator",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
        "startLine": 80,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit",
      "example": [],
      "overload": {
        "uid": "Xunit.TheoryDataBase`2.GetEnumerator*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetEnumerator"
          },
          {
            "lang": "vb",
            "value": "GetEnumerator"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator"
          },
          {
            "lang": "vb",
            "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator"
          },
          {
            "lang": "vb",
            "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.GetEnumerator*\" text=\"GetEnumerator\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.TheoryDataBase`2.GetEnumerator*\" text=\"GetEnumerator\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.Collections.Generic.IEnumerable{{TTheoryDataRow}}.GetEnumerator",
          "definition": "System.Collections.Generic.IEnumerable`1.GetEnumerator",
          "name": [
            {
              "lang": "csharp",
              "value": "GetEnumerator()"
            },
            {
              "lang": "vb",
              "value": "GetEnumerator()"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IEnumerable<TTheoryDataRow>.GetEnumerator()"
            },
            {
              "lang": "vb",
              "value": "IEnumerable(Of TTheoryDataRow).GetEnumerator()"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.Collections.Generic.IEnumerable<TTheoryDataRow>.GetEnumerator()"
            },
            {
              "lang": "vb",
              "value": "System.Collections.Generic.IEnumerable(Of TTheoryDataRow).GetEnumerator()"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator\">GetEnumerator</a>()"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator\">GetEnumerator</a>()"
            }
          ]
        }
      ],
      "type": "method",
      "summary": null,
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>"
    },
    {
      "lang": "vb",
      "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow)"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "TheoryDataBase<TTheoryDataRow, TRawDataRow>"
    },
    {
      "lang": "vb",
      "value": "TheoryDataBase(Of TTheoryDataRow, TRawDataRow)"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>"
    },
    {
      "lang": "vb",
      "value": "Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow)"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/TheoryData.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "TheoryDataBase",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/TheoryData.cs",
    "startLine": 11,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit"
      },
      {
        "lang": "vb",
        "value": "Xunit"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      },
      {
        "lang": "vb",
        "value": "<xref uid=\"Xunit\" text=\"Xunit\"/>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">Provides a base type for theories based on collection initialization syntax.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public abstract class TheoryDataBase<TTheoryDataRow, TRawDataRow> : IReadOnlyCollection<TTheoryDataRow>, IEnumerable<TTheoryDataRow>, IEnumerable where TTheoryDataRow : class, ITheoryDataRow"
      },
      {
        "lang": "vb",
        "value": "Public MustInherit Class TheoryDataBase(Of TTheoryDataRow As {Class, ITheoryDataRow}, TRawDataRow) Implements IReadOnlyCollection(Of TTheoryDataRow), IEnumerable(Of TTheoryDataRow), IEnumerable"
      }
    ],
    "typeParameters": [
      {
        "id": "TTheoryDataRow",
        "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The type of the theory data row (must implement <xref href=\"Xunit.ITheoryDataRow\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
      },
      {
        "id": "TRawDataRow",
        "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.TheoryDataBase-2.yml\" sourcestartlinenumber=\"1\">The raw data row that requires conversion to <code class=\"typeparamref\">TTheoryDataRow</code>.</p>\n"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "derivedClasses": [
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`1\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`1\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`10\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`10\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`11\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`11\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`12\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`12\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`13\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`13\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`14\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`14\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`15\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`15\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`2\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`2\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`3\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`3\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`4\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`4\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`5\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`5\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`6\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`6\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`7\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`7\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`8\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`8\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    },
    {
      "isEii": false,
      "isExtensionMethod": false,
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.TheoryData`9\" displayProperty=\"name\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.TheoryData`9\" displayProperty=\"name\"/>"
        }
      ],
      "level": 0,
      "index": 2
    }
  ],
  "level": 1,
  "implements": [
    {
      "uid": "System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}",
      "definition": "System.Collections.Generic.IReadOnlyCollection`1",
      "name": [
        {
          "lang": "csharp",
          "value": "IReadOnlyCollection<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "IReadOnlyCollection(Of TTheoryDataRow)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IReadOnlyCollection<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "IReadOnlyCollection(Of TTheoryDataRow)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.Generic.IReadOnlyCollection<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "System.Collections.Generic.IReadOnlyCollection(Of TTheoryDataRow)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;TTheoryDataRow&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of TTheoryDataRow)"
        }
      ]
    },
    {
      "uid": "System.Collections.Generic.IEnumerable{{TTheoryDataRow}}",
      "definition": "System.Collections.Generic.IEnumerable`1",
      "name": [
        {
          "lang": "csharp",
          "value": "IEnumerable<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "IEnumerable(Of TTheoryDataRow)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IEnumerable<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "IEnumerable(Of TTheoryDataRow)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.Generic.IEnumerable<TTheoryDataRow>"
        },
        {
          "lang": "vb",
          "value": "System.Collections.Generic.IEnumerable(Of TTheoryDataRow)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>&lt;TTheoryDataRow&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\">IEnumerable</a>(Of TTheoryDataRow)"
        }
      ]
    },
    {
      "uid": "System.Collections.IEnumerable",
      "name": [
        {
          "lang": "csharp",
          "value": "IEnumerable"
        },
        {
          "lang": "vb",
          "value": "IEnumerable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IEnumerable"
        },
        {
          "lang": "vb",
          "value": "IEnumerable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Collections.IEnumerable"
        },
        {
          "lang": "vb",
          "value": "System.Collections.IEnumerable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.TheoryDataBase-2.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.TheoryDataBase-2.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}