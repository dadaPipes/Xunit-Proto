{
  "uid": "Xunit.v3.ExtensibilityPointFactory",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyBeforeAfterTestAttributes(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyBeforeAfterTestAttributes(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)\" text=\"GetAssemblyBeforeAfterTestAttributes(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)\" text=\"GetAssemblyBeforeAfterTestAttributes(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetAssemblyBeforeAfterTestAttributes(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssemblyBeforeAfterTestAttributes(testAssembly As Assembly) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyBeforeAfterTestAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
        "startLine": 18,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyBeforeAfterTestAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes*\" text=\"GetAssemblyBeforeAfterTestAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes*\" text=\"GetAssemblyBeforeAfterTestAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IBeforeAfterTestAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given test assembly.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyFixtureTypes(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyFixtureTypes(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetAssemblyFixtureTypes(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetAssemblyFixtureTypes(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)\" text=\"GetAssemblyFixtureTypes(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)\" text=\"GetAssemblyFixtureTypes(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Type> GetAssemblyFixtureTypes(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssemblyFixtureTypes(testAssembly As Assembly) As IReadOnlyCollection(Of Type)"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Type}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Type>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Type)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyFixtureTypes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
        "startLine": 28,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyFixtureTypes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetAssemblyFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetAssemblyFixtureTypes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes*\" text=\"GetAssemblyFixtureTypes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes*\" text=\"GetAssemblyFixtureTypes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the fixture types that are attached to the test assembly via <xref href=\"Xunit.v3.IAssemblyFixtureAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyTestCaseOrderer(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyTestCaseOrderer(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)\" text=\"GetAssemblyTestCaseOrderer(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)\" text=\"GetAssemblyTestCaseOrderer(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ITestCaseOrderer? GetAssemblyTestCaseOrderer(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssemblyTestCaseOrderer(testAssembly As Assembly) As ITestCaseOrderer"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ITestCaseOrderer",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ITestCaseOrderer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyTestCaseOrderer",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
        "startLine": 40,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyTestCaseOrderer"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetAssemblyTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetAssemblyTestCaseOrderer"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer*\" text=\"GetAssemblyTestCaseOrderer\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer*\" text=\"GetAssemblyTestCaseOrderer\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the test case orderer that's attached to a test assembly. Returns <code>null</code> if there\nisn't one attached.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyTestCollectionOrderer(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyTestCollectionOrderer(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)\" text=\"GetAssemblyTestCollectionOrderer(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)\" text=\"GetAssemblyTestCollectionOrderer(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ITestCollectionOrderer? GetAssemblyTestCollectionOrderer(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssemblyTestCollectionOrderer(testAssembly As Assembly) As ITestCollectionOrderer"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ITestCollectionOrderer",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCollectionOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCollectionOrderer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCollectionOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCollectionOrderer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ITestCollectionOrderer"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ITestCollectionOrderer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ITestCollectionOrderer\" text=\"ITestCollectionOrderer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ITestCollectionOrderer\" text=\"ITestCollectionOrderer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyTestCollectionOrderer",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
        "startLine": 81,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyTestCollectionOrderer"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyTestCollectionOrderer"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer*\" text=\"GetAssemblyTestCollectionOrderer\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer*\" text=\"GetAssemblyTestCollectionOrderer\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the test collection orderer that's attached to a test assembly. Returns <code>null</code> if there\nisn't one attached.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetAssemblyTraits(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetAssemblyTraits(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetAssemblyTraits(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetAssemblyTraits(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)\" text=\"GetAssemblyTraits(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)\" text=\"GetAssemblyTraits(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetAssemblyTraits(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetAssemblyTraits(testAssembly As Assembly) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetAssemblyTraits",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs",
        "startLine": 119,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetAssemblyTraits"
          },
          {
            "lang": "vb",
            "value": "GetAssemblyTraits"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetAssemblyTraits"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetAssemblyTraits"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits*\" text=\"GetAssemblyTraits\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits*\" text=\"GetAssemblyTraits\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the traits that are attached to the test assembly via <xref href=\"Xunit.v3.ITraitAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetClassBeforeAfterTestAttributes(Type testClass, IReadOnlyCollection<IBeforeAfterTestAttribute> collectionBeforeAfterAttributes)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetClassBeforeAfterTestAttributes(testClass As Type, collectionBeforeAfterAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "testClass",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test class</p>\n"
          },
          {
            "id": "collectionBeforeAfterAttributes",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
              "definition": "System.Collections.Generic.IReadOnlyCollection`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The before after attributes from the test collection,\nto be merged into the result.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetClassBeforeAfterTestAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
        "startLine": 19,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetClassBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "GetClassBeforeAfterTestAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes*\" text=\"GetClassBeforeAfterTestAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes*\" text=\"GetClassBeforeAfterTestAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IBeforeAfterTestAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given test class.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetClassClassFixtureTypes(Type, IReadOnlyCollection<Type>)"
        },
        {
          "lang": "vb",
          "value": "GetClassClassFixtureTypes(Type, IReadOnlyCollection(Of Type))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetClassClassFixtureTypes(Type, IReadOnlyCollection<Type>)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetClassClassFixtureTypes(Type, IReadOnlyCollection(Of Type))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type, System.Collections.Generic.IReadOnlyCollection<System.Type>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of System.Type))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})\" text=\"GetClassClassFixtureTypes(Type, IReadOnlyCollection&lt;Type&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})\" text=\"GetClassClassFixtureTypes(Type, IReadOnlyCollection&lt;Type&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Type> GetClassClassFixtureTypes(Type testClass, IReadOnlyCollection<Type> collectionClassFixtureTypes)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetClassClassFixtureTypes(testClass As Type, collectionClassFixtureTypes As IReadOnlyCollection(Of Type)) As IReadOnlyCollection(Of Type)"
          }
        ],
        "parameters": [
          {
            "id": "testClass",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test class</p>\n"
          },
          {
            "id": "collectionClassFixtureTypes",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyCollection{System.Type}",
              "definition": "System.Collections.Generic.IReadOnlyCollection`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<Type>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of Type)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<Type>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of Type)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyCollection<System.Type>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Type)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The class fixture types from the test collection, which\nwill be merged into the result</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Type}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Type>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Type)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetClassClassFixtureTypes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
        "startLine": 32,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetClassClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "GetClassClassFixtureTypes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetClassClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetClassClassFixtureTypes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes*\" text=\"GetClassClassFixtureTypes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes*\" text=\"GetClassClassFixtureTypes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the fixture types that are attached to the test class via <xref href=\"Xunit.IClassFixture%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetClassTestCaseOrderer(Type)"
        },
        {
          "lang": "vb",
          "value": "GetClassTestCaseOrderer(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetClassTestCaseOrderer(Type)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetClassTestCaseOrderer(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)\" text=\"GetClassTestCaseOrderer(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)\" text=\"GetClassTestCaseOrderer(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ITestCaseOrderer? GetClassTestCaseOrderer(Type testClass)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetClassTestCaseOrderer(testClass As Type) As ITestCaseOrderer"
          }
        ],
        "parameters": [
          {
            "id": "testClass",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test class</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ITestCaseOrderer",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ITestCaseOrderer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetClassTestCaseOrderer",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
        "startLine": 47,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetClassTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "GetClassTestCaseOrderer"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetClassTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetClassTestCaseOrderer"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer*\" text=\"GetClassTestCaseOrderer\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer*\" text=\"GetClassTestCaseOrderer\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the test case orderer that's attached to a test class. Returns <code>null</code> if there\nisn't one attached.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetClassTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "GetClassTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetClassTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetClassTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type?, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetClassTraits(Type?, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetClassTraits(Type?, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetClassTraits(Type? testClass, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testCollectionTraits)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetClassTraits(testClass As Type, testCollectionTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
          }
        ],
        "parameters": [
          {
            "id": "testClass",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test class</p>\n"
          },
          {
            "id": "testCollectionTraits",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
              "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The traits inherited from the test collection</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetClassTraits",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs",
        "startLine": 90,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetClassTraits"
          },
          {
            "lang": "vb",
            "value": "GetClassTraits"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetClassTraits"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetClassTraits"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetClassTraits"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTraits*\" text=\"GetClassTraits\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetClassTraits*\" text=\"GetClassTraits\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the traits that are attached to the test class via <xref href=\"Xunit.v3.ITraitAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type?, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetCollectionBeforeAfterTestAttributes(Type? collectionDefinition, IReadOnlyCollection<IBeforeAfterTestAttribute> assemblyBeforeAfterTestAttributes)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionBeforeAfterTestAttributes(collectionDefinition As Type, assemblyBeforeAfterTestAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "collectionDefinition",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The collection definition type</p>\n"
          },
          {
            "id": "assemblyBeforeAfterTestAttributes",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
              "definition": "System.Collections.Generic.IReadOnlyCollection`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The before after attributes from the test assembly,\nto be merged into the result.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionBeforeAfterTestAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 20,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "GetCollectionBeforeAfterTestAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes*\" text=\"GetCollectionBeforeAfterTestAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes*\" text=\"GetCollectionBeforeAfterTestAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IBeforeAfterTestAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given test collection.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionBehavior(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionBehavior(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionBehavior(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionBehavior(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)\" text=\"GetCollectionBehavior(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)\" text=\"GetCollectionBehavior(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ICollectionBehaviorAttribute? GetCollectionBehavior(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionBehavior(testAssembly As Assembly) As ICollectionBehaviorAttribute"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ICollectionBehaviorAttribute",
            "name": [
              {
                "lang": "csharp",
                "value": "ICollectionBehaviorAttribute"
              },
              {
                "lang": "vb",
                "value": "ICollectionBehaviorAttribute"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ICollectionBehaviorAttribute"
              },
              {
                "lang": "vb",
                "value": "ICollectionBehaviorAttribute"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ICollectionBehaviorAttribute"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ICollectionBehaviorAttribute"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ICollectionBehaviorAttribute\" text=\"ICollectionBehaviorAttribute\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ICollectionBehaviorAttribute\" text=\"ICollectionBehaviorAttribute\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionBehavior",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 38,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionBehavior"
          },
          {
            "lang": "vb",
            "value": "GetCollectionBehavior"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionBehavior"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionBehavior"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior*\" text=\"GetCollectionBehavior\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior*\" text=\"GetCollectionBehavior\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.ICollectionBehaviorAttribute\" data-throw-if-not-resolved=\"false\"></xref> that's attached to the test assembly, if there is one.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionClassFixtureTypes(Type?)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionClassFixtureTypes(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionClassFixtureTypes(Type?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionClassFixtureTypes(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)\" text=\"GetCollectionClassFixtureTypes(Type?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)\" text=\"GetCollectionClassFixtureTypes(Type?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Type> GetCollectionClassFixtureTypes(Type? collectionDefinition)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionClassFixtureTypes(collectionDefinition As Type) As IReadOnlyCollection(Of Type)"
          }
        ],
        "parameters": [
          {
            "id": "collectionDefinition",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test collection definition type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Type}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Type>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Type)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
              }
            ]
          },
          "description": ""
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionClassFixtureTypes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 94,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "GetCollectionClassFixtureTypes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionClassFixtureTypes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes*\" text=\"GetCollectionClassFixtureTypes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes*\" text=\"GetCollectionClassFixtureTypes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the fixture types that are attached to the test collection via <xref href=\"Xunit.IClassFixture%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionCollectionFixtureTypes(Type?)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionCollectionFixtureTypes(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(Type?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)\" text=\"GetCollectionCollectionFixtureTypes(Type?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)\" text=\"GetCollectionCollectionFixtureTypes(Type?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<Type> GetCollectionCollectionFixtureTypes(Type? collectionDefinition)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionCollectionFixtureTypes(collectionDefinition As Type) As IReadOnlyCollection(Of Type)"
          }
        ],
        "parameters": [
          {
            "id": "collectionDefinition",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test collection definition type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{System.Type}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<Type>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of Type)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<System.Type>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of System.Type)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>)"
              }
            ]
          },
          "description": ""
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionCollectionFixtureTypes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 108,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionCollectionFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "GetCollectionCollectionFixtureTypes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes*\" text=\"GetCollectionCollectionFixtureTypes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes*\" text=\"GetCollectionCollectionFixtureTypes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the fixture types that are attached to the test collection via <xref href=\"Xunit.ICollectionFixture%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionDefinitions(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionDefinitions(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionDefinitions(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionDefinitions(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)\" text=\"GetCollectionDefinitions(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)\" text=\"GetCollectionDefinitions(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)> GetCollectionDefinitions(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionDefinitions(testAssembly As Assembly) As IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, (System.Type Type, Xunit.CollectionDefinitionAttribute Attribute)>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, (Type As System.Type, Attribute As Xunit.CollectionDefinitionAttribute))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, (<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a> <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.type\">Type</a>, <a class=\"xref\" href=\"Xunit.CollectionDefinitionAttribute.html\">CollectionDefinitionAttribute</a> <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.attribute\">Attribute</a>)&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, (<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.type\">Type</a> As <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.type\">Type</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.attribute\">Attribute</a> As <a class=\"xref\" href=\"Xunit.CollectionDefinitionAttribute.html\">CollectionDefinitionAttribute</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionDefinitions",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 60,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionDefinitions"
          },
          {
            "lang": "vb",
            "value": "GetCollectionDefinitions"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionDefinitions"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionDefinitions"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions*\" text=\"GetCollectionDefinitions\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions*\" text=\"GetCollectionDefinitions\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.CollectionDefinitionAttribute\" data-throw-if-not-resolved=\"false\"></xref>s that are attached to the test assembly.\nVerifies that there are no collection definitions with identical names.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionTestCaseOrderer(Type?)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionTestCaseOrderer(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionTestCaseOrderer(Type?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionTestCaseOrderer(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)\" text=\"GetCollectionTestCaseOrderer(Type?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)\" text=\"GetCollectionTestCaseOrderer(Type?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ITestCaseOrderer? GetCollectionTestCaseOrderer(Type? collectionDefinition)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionTestCaseOrderer(collectionDefinition As Type) As ITestCaseOrderer"
          }
        ],
        "parameters": [
          {
            "id": "collectionDefinition",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test collection definition</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ITestCaseOrderer",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "ITestCaseOrderer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ITestCaseOrderer"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ITestCaseOrderer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ITestCaseOrderer\" text=\"ITestCaseOrderer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionTestCaseOrderer",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 122,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "GetCollectionTestCaseOrderer"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionTestCaseOrderer"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer*\" text=\"GetCollectionTestCaseOrderer\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer*\" text=\"GetCollectionTestCaseOrderer\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the test case orderer that's attached to a test collection. Returns <code>null</code> if there\nisn't one attached.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetCollectionTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "GetCollectionTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetCollectionTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetCollectionTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type?, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetCollectionTraits(Type?, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetCollectionTraits(Type?, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetCollectionTraits(Type? testCollectionDefinition, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testAssemblyTraits)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetCollectionTraits(testCollectionDefinition As Type, testAssemblyTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
          }
        ],
        "parameters": [
          {
            "id": "testCollectionDefinition",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test collection</p>\n"
          },
          {
            "id": "testAssemblyTraits",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
              "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The traits inherited from the test assembly</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetCollectionTraits",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs",
        "startLine": 166,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetCollectionTraits"
          },
          {
            "lang": "vb",
            "value": "GetCollectionTraits"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetCollectionTraits"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetCollectionTraits"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits*\" text=\"GetCollectionTraits\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits*\" text=\"GetCollectionTraits\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the traits that are attached to the test collection via <xref href=\"Xunit.v3.ITraitAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection<IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection(Of IBeforeAfterTestAttribute))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})\" text=\"GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection&lt;IBeforeAfterTestAttribute&gt;)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetMethodBeforeAfterTestAttributes(MethodInfo testMethod, IReadOnlyCollection<IBeforeAfterTestAttribute> classBeforeAfterAttributes)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodBeforeAfterTestAttributes(testMethod As MethodInfo, classBeforeAfterAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test method</p>\n"
          },
          {
            "id": "classBeforeAfterAttributes",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
              "definition": "System.Collections.Generic.IReadOnlyCollection`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The before after attributes from the test class,\nto be merged into the result.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IBeforeAfterTestAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IBeforeAfterTestAttribute.html\">IBeforeAfterTestAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodBeforeAfterTestAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
        "startLine": 19,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMethodBeforeAfterTestAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes*\" text=\"GetMethodBeforeAfterTestAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes*\" text=\"GetMethodBeforeAfterTestAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IBeforeAfterTestAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given method.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodDataAttributes(MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "GetMethodDataAttributes(MethodInfo)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetMethodDataAttributes(MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetMethodDataAttributes(MethodInfo)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)\" text=\"GetMethodDataAttributes(MethodInfo)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)\" text=\"GetMethodDataAttributes(MethodInfo)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IDataAttribute> GetMethodDataAttributes(MethodInfo testMethod)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodDataAttributes(testMethod As MethodInfo) As IReadOnlyCollection(Of IDataAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test method</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IDataAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IDataAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IDataAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IDataAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IDataAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IDataAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IDataAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IDataAttribute.html\">IDataAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IDataAttribute.html\">IDataAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodDataAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
        "startLine": 30,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodDataAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMethodDataAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetMethodDataAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetMethodDataAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes*\" text=\"GetMethodDataAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes*\" text=\"GetMethodDataAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IDataAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given test method.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodFactAttributes(MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "GetMethodFactAttributes(MethodInfo)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetMethodFactAttributes(MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetMethodFactAttributes(MethodInfo)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)\" text=\"GetMethodFactAttributes(MethodInfo)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)\" text=\"GetMethodFactAttributes(MethodInfo)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyCollection<IFactAttribute> GetMethodFactAttributes(MethodInfo testMethod)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodFactAttributes(testMethod As MethodInfo) As IReadOnlyCollection(Of IFactAttribute)"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test method</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IFactAttribute}",
            "definition": "System.Collections.Generic.IReadOnlyCollection`1",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IFactAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IFactAttribute)"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyCollection<IFactAttribute>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyCollection(Of IFactAttribute)"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IFactAttribute>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IFactAttribute)"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.v3.IFactAttribute.html\">IFactAttribute</a>&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.v3.IFactAttribute.html\">IFactAttribute</a>)"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodFactAttributes",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
        "startLine": 48,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodFactAttributes"
          },
          {
            "lang": "vb",
            "value": "GetMethodFactAttributes"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetMethodFactAttributes"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetMethodFactAttributes"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes*\" text=\"GetMethodFactAttributes\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes*\" text=\"GetMethodFactAttributes\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the <xref href=\"Xunit.v3.IFactAttribute\" data-throw-if-not-resolved=\"false\"></xref>s attached to the given test method.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetMethodTraits(MethodInfo, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "GetMethodTraits(MethodInfo, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetMethodTraits(MethodInfo, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetMethodTraits(MethodInfo, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetMethodTraits(MethodInfo, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})\" text=\"GetMethodTraits(MethodInfo, IReadOnlyDictionary&lt;string, IReadOnlyCollection&lt;string&gt;&gt;?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetMethodTraits(MethodInfo testMethod, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testClassTraits)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetMethodTraits(testMethod As MethodInfo, testClassTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test method</p>\n"
          },
          {
            "id": "testClassTraits",
            "type": {
              "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
              "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
                },
                {
                  "lang": "vb",
                  "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The traits inherited from the test class</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}",
            "definition": "System.Collections.Generic.IReadOnlyDictionary`2",
            "name": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IReadOnlyDictionary<string, IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>"
              },
              {
                "lang": "vb",
                "value": "System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>&gt;&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2\">IReadOnlyDictionary</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetMethodTraits",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
        "startLine": 59,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetMethodTraits"
          },
          {
            "lang": "vb",
            "value": "GetMethodTraits"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetMethodTraits"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetMethodTraits"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetMethodTraits"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodTraits*\" text=\"GetMethodTraits\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetMethodTraits*\" text=\"GetMethodTraits\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the traits that are attached to the test method via <xref href=\"Xunit.v3.ITraitAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetTestFramework(Assembly)"
        },
        {
          "lang": "vb",
          "value": "GetTestFramework(Assembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetTestFramework(Assembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetTestFramework(Assembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)\" text=\"GetTestFramework(Assembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)\" text=\"GetTestFramework(Assembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static ITestFramework GetTestFramework(Assembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetTestFramework(testAssembly As Assembly) As ITestFramework"
          }
        ],
        "parameters": [
          {
            "id": "testAssembly",
            "type": {
              "uid": "System.Reflection.Assembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Assembly"
                },
                {
                  "lang": "vb",
                  "value": "Assembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.Assembly"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.Assembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.Assembly\" text=\"Assembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly to get the test framework for</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.ITestFramework",
            "name": [
              {
                "lang": "csharp",
                "value": "ITestFramework"
              },
              {
                "lang": "vb",
                "value": "ITestFramework"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ITestFramework"
              },
              {
                "lang": "vb",
                "value": "ITestFramework"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.ITestFramework"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.ITestFramework"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.ITestFramework\" text=\"ITestFramework\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.ITestFramework\" text=\"ITestFramework\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test framework object</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetTestFramework",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
        "startLine": 66,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetTestFramework"
          },
          {
            "lang": "vb",
            "value": "GetTestFramework"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetTestFramework"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetTestFramework"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetTestFramework"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetTestFramework*\" text=\"GetTestFramework\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetTestFramework*\" text=\"GetTestFramework\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets the test framework object for the given test assembly. It is important that callers to this function have\ncalled <xref href=\"Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> before calling this, so that the test framework and\nany ancillary helper classes have access to the diagnostic and internal diagnostic message sinks.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetXunitTestCaseDiscoverer(Type)"
        },
        {
          "lang": "vb",
          "value": "GetXunitTestCaseDiscoverer(Type)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(Type)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(Type)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)\" text=\"GetXunitTestCaseDiscoverer(Type)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)\" text=\"GetXunitTestCaseDiscoverer(Type)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IXunitTestCaseDiscoverer? GetXunitTestCaseDiscoverer(Type testCaseDiscovererType)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetXunitTestCaseDiscoverer(testCaseDiscovererType As Type) As IXunitTestCaseDiscoverer"
          }
        ],
        "parameters": [
          {
            "id": "testCaseDiscovererType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test case discoverer type</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.IXunitTestCaseDiscoverer",
            "name": [
              {
                "lang": "csharp",
                "value": "IXunitTestCaseDiscoverer"
              },
              {
                "lang": "vb",
                "value": "IXunitTestCaseDiscoverer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IXunitTestCaseDiscoverer"
              },
              {
                "lang": "vb",
                "value": "IXunitTestCaseDiscoverer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.IXunitTestCaseDiscoverer"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.IXunitTestCaseDiscoverer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.IXunitTestCaseDiscoverer\" text=\"IXunitTestCaseDiscoverer\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.IXunitTestCaseDiscoverer\" text=\"IXunitTestCaseDiscoverer\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetXunitTestCaseDiscoverer",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
        "startLine": 89,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetXunitTestCaseDiscoverer"
          },
          {
            "lang": "vb",
            "value": "GetXunitTestCaseDiscoverer"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetXunitTestCaseDiscoverer"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetXunitTestCaseDiscoverer"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer*\" text=\"GetXunitTestCaseDiscoverer\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer*\" text=\"GetXunitTestCaseDiscoverer\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets an xUnit.net v3 test discoverer.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)"
        },
        {
          "lang": "vb",
          "value": "GetXunitTestCollectionFactory(Type, IXunitTestAssembly)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.GetXunitTestCollectionFactory(Type, IXunitTestAssembly)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type?, Xunit.v3.IXunitTestAssembly)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type, Xunit.v3.IXunitTestAssembly)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)\" text=\"GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)\" text=\"GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static IXunitTestCollectionFactory? GetXunitTestCollectionFactory(Type? testCollectionFactoryType, IXunitTestAssembly testAssembly)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function GetXunitTestCollectionFactory(testCollectionFactoryType As Type, testAssembly As IXunitTestAssembly) As IXunitTestCollectionFactory"
          }
        ],
        "parameters": [
          {
            "id": "testCollectionFactoryType",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test collection factory type</p>\n"
          },
          {
            "id": "testAssembly",
            "type": {
              "uid": "Xunit.v3.IXunitTestAssembly",
              "name": [
                {
                  "lang": "csharp",
                  "value": "IXunitTestAssembly"
                },
                {
                  "lang": "vb",
                  "value": "IXunitTestAssembly"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "IXunitTestAssembly"
                },
                {
                  "lang": "vb",
                  "value": "IXunitTestAssembly"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.v3.IXunitTestAssembly"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.v3.IXunitTestAssembly"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.v3.IXunitTestAssembly\" text=\"IXunitTestAssembly\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.v3.IXunitTestAssembly\" text=\"IXunitTestAssembly\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The test assembly under test</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.v3.IXunitTestCollectionFactory",
            "name": [
              {
                "lang": "csharp",
                "value": "IXunitTestCollectionFactory"
              },
              {
                "lang": "vb",
                "value": "IXunitTestCollectionFactory"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "IXunitTestCollectionFactory"
              },
              {
                "lang": "vb",
                "value": "IXunitTestCollectionFactory"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.v3.IXunitTestCollectionFactory"
              },
              {
                "lang": "vb",
                "value": "Xunit.v3.IXunitTestCollectionFactory"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.v3.IXunitTestCollectionFactory\" text=\"IXunitTestCollectionFactory\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.v3.IXunitTestCollectionFactory\" text=\"IXunitTestCollectionFactory\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetXunitTestCollectionFactory",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
        "startLine": 97,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetXunitTestCollectionFactory"
          },
          {
            "lang": "vb",
            "value": "GetXunitTestCollectionFactory"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.GetXunitTestCollectionFactory"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.GetXunitTestCollectionFactory"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory*\" text=\"GetXunitTestCollectionFactory\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory*\" text=\"GetXunitTestCollectionFactory\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets an xUnit.net v3 test collection factory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ExtensibilityPointFactory",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Get<TInterface>(Type?, object?[]?)"
        },
        {
          "lang": "vb",
          "value": "Get(Of TInterface)(Type, Object())"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ExtensibilityPointFactory.Get<TInterface>(Type?, object?[]?)"
        },
        {
          "lang": "vb",
          "value": "ExtensibilityPointFactory.Get(Of TInterface)(Type, Object())"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ExtensibilityPointFactory.Get<TInterface>(System.Type?, object?[]?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ExtensibilityPointFactory.Get(Of TInterface)(System.Type, Object())"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])\" text=\"Get&lt;TInterface&gt;(Type?, object?[]?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])\" text=\"Get&lt;TInterface&gt;(Type?, object?[]?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static TInterface? Get<TInterface>(Type? type, object?[]? ctorArgs = null) where TInterface : class"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function [Get](Of TInterface As Class)(type As Type, ctorArgs As Object() = Nothing) As TInterface"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The implementation type.</p>\n"
          },
          {
            "id": "ctorArgs",
            "type": {
              "uid": "System.Object[]",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object[]"
                },
                {
                  "lang": "vb",
                  "value": "Object()"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>[]"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>()"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The constructor arguments. Since diagnostic message sinks are optional,\nthe code first looks for a type that takes the given arguments plus the message sink, and only\nfalls back to the message sink-less constructor if none was found.</p>\n"
          }
        ],
        "typeParameters": [
          {
            "id": "TInterface",
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The interface type.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "{TInterface}",
            "definition": "TInterface",
            "name": [
              {
                "lang": "csharp",
                "value": "TInterface"
              },
              {
                "lang": "vb",
                "value": "TInterface"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "TInterface"
              },
              {
                "lang": "vb",
                "value": "TInterface"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "TInterface"
              },
              {
                "lang": "vb",
                "value": "TInterface"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"{TInterface}\" text=\"TInterface\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"{TInterface}\" text=\"TInterface\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">The instance of the type.</p>\n"
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Get",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs",
        "startLine": 51,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ExtensibilityPointFactory.Get*",
        "name": [
          {
            "lang": "csharp",
            "value": "Get"
          },
          {
            "lang": "vb",
            "value": "Get"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ExtensibilityPointFactory.Get"
          },
          {
            "lang": "vb",
            "value": "ExtensibilityPointFactory.Get"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ExtensibilityPointFactory.Get"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ExtensibilityPointFactory.Get"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.Get*\" text=\"Get\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ExtensibilityPointFactory.Get*\" text=\"Get\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Gets an instance of the given type, casting it to <code class=\"typeparamref\">TInterface</code>, using the provided\nconstructor arguments.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ExtensibilityPointFactory"
    },
    {
      "lang": "vb",
      "value": "ExtensibilityPointFactory"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ExtensibilityPointFactory"
    },
    {
      "lang": "vb",
      "value": "ExtensibilityPointFactory"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.v3.ExtensibilityPointFactory"
    },
    {
      "lang": "vb",
      "value": "Xunit.v3.ExtensibilityPointFactory"
    }
  ],
  "type": "class",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "ExtensibilityPointFactory",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs",
    "startLine": 11,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml\" sourcestartlinenumber=\"1\">Represents a factory for the types used for extensibility throughout the system.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class ExtensibilityPointFactory"
      },
      {
        "lang": "vb",
        "value": "Public Module ExtensibilityPointFactory"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.v3.ExtensibilityPointFactory.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}