{
  "uid": "Xunit.v3.IDataAttribute",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.v3.IDataAttribute.Explicit",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Explicit"
        },
        {
          "lang": "vb",
          "value": "Explicit"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.Explicit"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.Explicit"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.Explicit"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.Explicit"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Explicit\" text=\"Explicit\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Explicit\" text=\"Explicit\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "bool? Explicit { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Explicit As Boolean?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Boolean}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool?"
              },
              {
                "lang": "vb",
                "value": "Boolean?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">bool</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.boolean\">Boolean</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Explicit",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 20,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.Explicit*",
        "name": [
          {
            "lang": "csharp",
            "value": "Explicit"
          },
          {
            "lang": "vb",
            "value": "Explicit"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.Explicit"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.Explicit"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.Explicit"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.Explicit"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Explicit*\" text=\"Explicit\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Explicit*\" text=\"Explicit\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Gets a value that determines whether the data rows provided by this data\nprovider should be considered explicit or not. If <code>true</code>, then the data\nrows will all be considered explicit; if <code>false</code>, then the data rows\nwill all be considered not explicit; if <code>null</code>, then the data rows will\ninherit their explicitness from <xref href=\"Xunit.v3.IFactAttribute.Explicit\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.GetData(System.Reflection.MethodInfo,Xunit.Sdk.DisposalTracker)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetData(MethodInfo, DisposalTracker)"
        },
        {
          "lang": "vb",
          "value": "GetData(MethodInfo, DisposalTracker)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.GetData(MethodInfo, DisposalTracker)"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.GetData(MethodInfo, DisposalTracker)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.GetData(System.Reflection.MethodInfo, Xunit.Sdk.DisposalTracker)"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.GetData(System.Reflection.MethodInfo, Xunit.Sdk.DisposalTracker)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.GetData(System.Reflection.MethodInfo,Xunit.Sdk.DisposalTracker)\" text=\"GetData(MethodInfo, DisposalTracker)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.GetData(System.Reflection.MethodInfo,Xunit.Sdk.DisposalTracker)\" text=\"GetData(MethodInfo, DisposalTracker)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "ValueTask<IReadOnlyCollection<ITheoryDataRow>> GetData(MethodInfo testMethod, DisposalTracker disposalTracker)"
          },
          {
            "lang": "vb",
            "value": "Function GetData(testMethod As MethodInfo, disposalTracker As DisposalTracker) As ValueTask(Of IReadOnlyCollection(Of ITheoryDataRow))"
          }
        ],
        "parameters": [
          {
            "id": "testMethod",
            "type": {
              "uid": "System.Reflection.MethodInfo",
              "name": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "MethodInfo"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Reflection.MethodInfo"
                },
                {
                  "lang": "vb",
                  "value": "System.Reflection.MethodInfo"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Reflection.MethodInfo\" text=\"MethodInfo\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">The test method the data attribute is attached to</p>\n"
          },
          {
            "id": "disposalTracker",
            "type": {
              "uid": "Xunit.Sdk.DisposalTracker",
              "name": [
                {
                  "lang": "csharp",
                  "value": "DisposalTracker"
                },
                {
                  "lang": "vb",
                  "value": "DisposalTracker"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "DisposalTracker"
                },
                {
                  "lang": "vb",
                  "value": "DisposalTracker"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.DisposalTracker"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.DisposalTracker"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.DisposalTracker\" text=\"DisposalTracker\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.DisposalTracker\" text=\"DisposalTracker\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">The disposal tracker used to dispose the data</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Threading.Tasks.ValueTask{System.Collections.Generic.IReadOnlyCollection{Xunit.ITheoryDataRow}}",
            "definition": "System.Threading.Tasks.ValueTask`1",
            "name": [
              {
                "lang": "csharp",
                "value": "ValueTask<IReadOnlyCollection<ITheoryDataRow>>"
              },
              {
                "lang": "vb",
                "value": "ValueTask(Of IReadOnlyCollection(Of ITheoryDataRow))"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "ValueTask<IReadOnlyCollection<ITheoryDataRow>>"
              },
              {
                "lang": "vb",
                "value": "ValueTask(Of IReadOnlyCollection(Of ITheoryDataRow))"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Threading.Tasks.ValueTask<System.Collections.Generic.IReadOnlyCollection<Xunit.ITheoryDataRow>>"
              },
              {
                "lang": "vb",
                "value": "System.Threading.Tasks.ValueTask(Of System.Collections.Generic.IReadOnlyCollection(Of Xunit.ITheoryDataRow))"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1\">ValueTask</a>&lt;<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"Xunit.ITheoryDataRow.html\">ITheoryDataRow</a>&gt;&gt;"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1\">ValueTask</a>(Of <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1\">IReadOnlyCollection</a>(Of <a class=\"xref\" href=\"Xunit.ITheoryDataRow.html\">ITheoryDataRow</a>))"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "GetData",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 63,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.GetData*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetData"
          },
          {
            "lang": "vb",
            "value": "GetData"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.GetData"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.GetData"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.GetData"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.GetData"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.GetData*\" text=\"GetData\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.GetData*\" text=\"GetData\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Returns the data to be used to test the theory.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.Skip",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Skip"
        },
        {
          "lang": "vb",
          "value": "Skip"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.Skip"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.Skip"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.Skip"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.Skip"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Skip\" text=\"Skip\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Skip\" text=\"Skip\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "string? Skip { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Skip As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Skip",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 27,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.Skip*",
        "name": [
          {
            "lang": "csharp",
            "value": "Skip"
          },
          {
            "lang": "vb",
            "value": "Skip"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.Skip"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.Skip"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.Skip"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.Skip"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Skip*\" text=\"Skip\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Skip*\" text=\"Skip\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Gets a skip reason for all the data rows provided by this data provider. If\nnot <code>null</code>, then all rows will be skipped with the given reason; if <code>null</code>,\nthen the rows will inherit their skip reason from <xref href=\"Xunit.v3.IFactAttribute.Skip\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SupportsDiscoveryEnumeration()"
        },
        {
          "lang": "vb",
          "value": "SupportsDiscoveryEnumeration()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.SupportsDiscoveryEnumeration()"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.SupportsDiscoveryEnumeration()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration()"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration\" text=\"SupportsDiscoveryEnumeration()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration\" text=\"SupportsDiscoveryEnumeration()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "bool SupportsDiscoveryEnumeration()"
          },
          {
            "lang": "vb",
            "value": "Function SupportsDiscoveryEnumeration() As Boolean"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SupportsDiscoveryEnumeration",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 72,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration*",
        "name": [
          {
            "lang": "csharp",
            "value": "SupportsDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "SupportsDiscoveryEnumeration"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.SupportsDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.SupportsDiscoveryEnumeration"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration*\" text=\"SupportsDiscoveryEnumeration\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.SupportsDiscoveryEnumeration*\" text=\"SupportsDiscoveryEnumeration\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the data attribute supports enumeration during\ndiscovery; <code>false</code> otherwise. Data attributes with expensive computational\ncosts and/or randomized data sets should return <code>false</code>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.TestDisplayName",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "TestDisplayName"
        },
        {
          "lang": "vb",
          "value": "TestDisplayName"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.TestDisplayName"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.TestDisplayName"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.TestDisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.TestDisplayName"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.TestDisplayName\" text=\"TestDisplayName\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.TestDisplayName\" text=\"TestDisplayName\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "string? TestDisplayName { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property TestDisplayName As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "TestDisplayName",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 35,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.TestDisplayName*",
        "name": [
          {
            "lang": "csharp",
            "value": "TestDisplayName"
          },
          {
            "lang": "vb",
            "value": "TestDisplayName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.TestDisplayName"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.TestDisplayName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.TestDisplayName"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.TestDisplayName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.TestDisplayName*\" text=\"TestDisplayName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.TestDisplayName*\" text=\"TestDisplayName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Gets the test display name for the test (replacing the default behavior, which\nwould be to use <xref href=\"Xunit.v3.IFactAttribute.DisplayName\" data-throw-if-not-resolved=\"false\"></xref>, or falling back to\ngenerating display names based on <xref href=\"Xunit.Sdk.TestMethodDisplay\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Xunit.Sdk.TestMethodDisplayOptions\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.Timeout",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Timeout"
        },
        {
          "lang": "vb",
          "value": "Timeout"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.Timeout"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.Timeout"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.Timeout"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.Timeout"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Timeout\" text=\"Timeout\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Timeout\" text=\"Timeout\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "int? Timeout { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Timeout As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Timeout",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 43,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.Timeout*",
        "name": [
          {
            "lang": "csharp",
            "value": "Timeout"
          },
          {
            "lang": "vb",
            "value": "Timeout"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.Timeout"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.Timeout"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.Timeout"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.Timeout"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Timeout*\" text=\"Timeout\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Timeout*\" text=\"Timeout\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Gets a value to determine if the data rows provided by this data provider should\ninclude a timeout (in milliseconds). If greater than zero, the data rows will have\nthe given timeout; if zero or less, the data rows will not have a timeout; if <code>null</code>,\nthe data rows will inherit their timeout from <xref href=\"Xunit.v3.IFactAttribute.Timeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.IDataAttribute.Traits",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IDataAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Traits"
        },
        {
          "lang": "vb",
          "value": "Traits"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IDataAttribute.Traits"
        },
        {
          "lang": "vb",
          "value": "IDataAttribute.Traits"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IDataAttribute.Traits"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IDataAttribute.Traits"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Traits\" text=\"Traits\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IDataAttribute.Traits\" text=\"Traits\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "string[]? Traits { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property Traits As String()"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String[]",
            "name": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string[]"
              },
              {
                "lang": "vb",
                "value": "String()"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">string</a>[]"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.string\">String</a>()"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "Traits",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
        "startLine": 56,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">This is structured as an array because attribute initializers don't support dictionaries. Note:\nSetting an odd number of values will throw away the unmatched key at the end of the list. If you\nseem to be missing your a key/value pair or have misaligned keys and values, make sure you have\nan even number of strings alternating between keys and values.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.IDataAttribute.Traits*",
        "name": [
          {
            "lang": "csharp",
            "value": "Traits"
          },
          {
            "lang": "vb",
            "value": "Traits"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "IDataAttribute.Traits"
          },
          {
            "lang": "vb",
            "value": "IDataAttribute.Traits"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.IDataAttribute.Traits"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.IDataAttribute.Traits"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Traits*\" text=\"Traits\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.IDataAttribute.Traits*\" text=\"Traits\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Gets a set of traits for the associated data. The data is provided as an array\nof string values that are alternating keys and values (e.g.,\n<code>[&quot;key1&quot;, &quot;value1&quot;, &quot;key2&quot;, &quot;value2&quot;]</code>).</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "IDataAttribute"
    },
    {
      "lang": "vb",
      "value": "IDataAttribute"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "IDataAttribute"
    },
    {
      "lang": "vb",
      "value": "IDataAttribute"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.v3.IDataAttribute"
    },
    {
      "lang": "vb",
      "value": "Xunit.v3.IDataAttribute"
    }
  ],
  "type": "interface",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "IDataAttribute",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/IDataAttribute.cs",
    "startLine": 11,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IDataAttribute.yml\" sourcestartlinenumber=\"1\">Base interface that all data attributes (that is, data providers for theories) are\nexpected to implement. Data attributes are valid on methods only.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public interface IDataAttribute"
      },
      {
        "lang": "vb",
        "value": "Public Interface IDataAttribute"
      }
    ]
  },
  "level": 0,
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.v3.IDataAttribute.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.v3.IDataAttribute.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}