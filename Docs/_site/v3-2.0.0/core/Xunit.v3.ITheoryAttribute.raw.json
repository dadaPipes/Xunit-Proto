{
  "uid": "Xunit.v3.ITheoryAttribute",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ITheoryAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "DisableDiscoveryEnumeration"
        },
        {
          "lang": "vb",
          "value": "DisableDiscoveryEnumeration"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITheoryAttribute.DisableDiscoveryEnumeration"
        },
        {
          "lang": "vb",
          "value": "ITheoryAttribute.DisableDiscoveryEnumeration"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration\" text=\"DisableDiscoveryEnumeration\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration\" text=\"DisableDiscoveryEnumeration\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "bool DisableDiscoveryEnumeration { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property DisableDiscoveryEnumeration As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "DisableDiscoveryEnumeration",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
        "startLine": 20,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration*",
        "name": [
          {
            "lang": "csharp",
            "value": "DisableDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "DisableDiscoveryEnumeration"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITheoryAttribute.DisableDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "ITheoryAttribute.DisableDiscoveryEnumeration"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration*\" text=\"DisableDiscoveryEnumeration\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.DisableDiscoveryEnumeration*\" text=\"DisableDiscoveryEnumeration\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ITheoryAttribute.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the test method wants to skip enumerating data during\ndiscovery. This will cause the theory to yield a single test case for all data, and the\ndata discovery will be performed during test execution instead of discovery.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.v3.ITheoryAttribute",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "SkipTestWithoutData"
        },
        {
          "lang": "vb",
          "value": "SkipTestWithoutData"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ITheoryAttribute.SkipTestWithoutData"
        },
        {
          "lang": "vb",
          "value": "ITheoryAttribute.SkipTestWithoutData"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.SkipTestWithoutData\" text=\"SkipTestWithoutData\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.SkipTestWithoutData\" text=\"SkipTestWithoutData\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "bool SkipTestWithoutData { get; }"
          },
          {
            "lang": "vb",
            "value": "ReadOnly Property SkipTestWithoutData As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "remote": {
          "path": "src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
          "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
          "repo": "https://github.com/xunit/xunit.git"
        },
        "id": "SkipTestWithoutData",
        "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
        "startLine": 26,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.core"
      ],
      "namespace": "Xunit.v3",
      "example": [],
      "overload": {
        "uid": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData*",
        "name": [
          {
            "lang": "csharp",
            "value": "SkipTestWithoutData"
          },
          {
            "lang": "vb",
            "value": "SkipTestWithoutData"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ITheoryAttribute.SkipTestWithoutData"
          },
          {
            "lang": "vb",
            "value": "ITheoryAttribute.SkipTestWithoutData"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData"
          },
          {
            "lang": "vb",
            "value": "Xunit.v3.ITheoryAttribute.SkipTestWithoutData"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.SkipTestWithoutData*\" text=\"SkipTestWithoutData\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.v3.ITheoryAttribute.SkipTestWithoutData*\" text=\"SkipTestWithoutData\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ITheoryAttribute.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the test should be skipped (rather than failed) for\na lack of data.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ITheoryAttribute"
    },
    {
      "lang": "vb",
      "value": "ITheoryAttribute"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ITheoryAttribute"
    },
    {
      "lang": "vb",
      "value": "ITheoryAttribute"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.v3.ITheoryAttribute"
    },
    {
      "lang": "vb",
      "value": "Xunit.v3.ITheoryAttribute"
    }
  ],
  "type": "interface",
  "source": {
    "remote": {
      "path": "src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
      "branch": "229879b7653ec0573f36ca4759ccfc915be11a21",
      "repo": "https://github.com/xunit/xunit.git"
    },
    "id": "ITheoryAttribute",
    "path": "../v3/v3-2.0.0/src/xunit.v3.core/Abstractions/Attributes/ITheoryAttribute.cs",
    "startLine": 13,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.core"
  ],
  "namespace": {
    "uid": "Xunit.v3",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.v3"
      },
      {
        "lang": "vb",
        "value": "Xunit.v3"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.v3.html\">v3</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ITheoryAttribute.yml\" sourcestartlinenumber=\"1\">Marks a test method as being a data theory. Data theories are tests which are fed\nvarious bits of data from a data source, mapping to parameters on the test method.\nIf the data source contains multiple rows, then the test method is executed\nmultiple times (once with each data row). Data is provided by attributes which\nimplement <xref href=\"Xunit.v3.IDataAttribute\" data-throw-if-not-resolved=\"false\"></xref> (most commonly, <xref href=\"Xunit.InlineDataAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"Xunit.MemberDataAttribute\" data-throw-if-not-resolved=\"false\"></xref>). Implementations must be decorated by\n<xref href=\"Xunit.v3.XunitTestCaseDiscovererAttribute\" data-throw-if-not-resolved=\"false\"></xref> to indicate which class is responsible\nfor converting the test method into one or more tests.</p>\n",
  "remarks": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.ITheoryAttribute.yml\" sourcestartlinenumber=\"1\">The attribute can only be applied to methods, and only one attribute is allowed.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public interface ITheoryAttribute : IFactAttribute"
      },
      {
        "lang": "vb",
        "value": "Public Interface ITheoryAttribute Inherits IFactAttribute"
      }
    ]
  },
  "level": 0,
  "inheritedMembers": [
    {
      "uid": "Xunit.v3.IFactAttribute.DisplayName",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_DisplayName",
      "name": [
        {
          "lang": "csharp",
          "value": "DisplayName"
        },
        {
          "lang": "vb",
          "value": "DisplayName"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.DisplayName"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.DisplayName"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.DisplayName"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.DisplayName"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.DisplayName\" text=\"DisplayName\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.DisplayName\" text=\"DisplayName\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the name of the test to be used when the test is skipped. When <code>null</code>\nis returned, will cause a default display name to be used.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.Explicit",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Explicit",
      "name": [
        {
          "lang": "csharp",
          "value": "Explicit"
        },
        {
          "lang": "vb",
          "value": "Explicit"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.Explicit"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.Explicit"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.Explicit"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.Explicit"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Explicit\" text=\"Explicit\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Explicit\" text=\"Explicit\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets a flag which indicates whether the test should only be run explicitly.\nAn explicit test is skipped by default unless explicit tests are requested\nto be run.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.Skip",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Skip",
      "name": [
        {
          "lang": "csharp",
          "value": "Skip"
        },
        {
          "lang": "vb",
          "value": "Skip"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.Skip"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.Skip"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.Skip"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.Skip"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Skip\" text=\"Skip\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Skip\" text=\"Skip\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the skip reason for the test. When <code>null</code> is returned, the test is\nnot skipped.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.SkipExceptions",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipExceptions",
      "name": [
        {
          "lang": "csharp",
          "value": "SkipExceptions"
        },
        {
          "lang": "vb",
          "value": "SkipExceptions"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.SkipExceptions"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.SkipExceptions"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.SkipExceptions"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.SkipExceptions"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipExceptions\" text=\"SkipExceptions\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipExceptions\" text=\"SkipExceptions\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets exceptions that, when thrown, will cause the test to be skipped rather than failed.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.SkipType",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipType",
      "name": [
        {
          "lang": "csharp",
          "value": "SkipType"
        },
        {
          "lang": "vb",
          "value": "SkipType"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.SkipType"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.SkipType"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.SkipType"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.SkipType"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipType\" text=\"SkipType\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipType\" text=\"SkipType\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the type to retrieve <xref href=\"Xunit.v3.IFactAttribute.SkipUnless\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Xunit.v3.IFactAttribute.SkipWhen\" data-throw-if-not-resolved=\"false\"></xref> from. If not set,\nthen the property will be retrieved from the unit test class.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.SkipUnless",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipUnless",
      "name": [
        {
          "lang": "csharp",
          "value": "SkipUnless"
        },
        {
          "lang": "vb",
          "value": "SkipUnless"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.SkipUnless"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.SkipUnless"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.SkipUnless"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.SkipUnless"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipUnless\" text=\"SkipUnless\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipUnless\" text=\"SkipUnless\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the name of a public static property on the test class which returns <code>bool</code>\nto indicate whether the test should be skipped (<code>false</code>) or not (<code>true</code>).</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.SkipWhen",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_SkipWhen",
      "name": [
        {
          "lang": "csharp",
          "value": "SkipWhen"
        },
        {
          "lang": "vb",
          "value": "SkipWhen"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.SkipWhen"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.SkipWhen"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.SkipWhen"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.SkipWhen"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipWhen\" text=\"SkipWhen\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.SkipWhen\" text=\"SkipWhen\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the name of a public static property on the test class which returns <code>bool</code>\nto indicate whether the test should be skipped (<code>true</code>) or not (<code>false</code>).</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.v3.IFactAttribute.Timeout",
      "isExtensionMethod": false,
      "parent": "Xunit.v3.IFactAttribute",
      "href": "Xunit.v3.IFactAttribute.html#Xunit_v3_IFactAttribute_Timeout",
      "name": [
        {
          "lang": "csharp",
          "value": "Timeout"
        },
        {
          "lang": "vb",
          "value": "Timeout"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IFactAttribute.Timeout"
        },
        {
          "lang": "vb",
          "value": "IFactAttribute.Timeout"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.v3.IFactAttribute.Timeout"
        },
        {
          "lang": "vb",
          "value": "Xunit.v3.IFactAttribute.Timeout"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Timeout\" text=\"Timeout\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.v3.IFactAttribute.Timeout\" text=\"Timeout\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/core/Xunit.v3.IFactAttribute.yml\" sourcestartlinenumber=\"1\">Gets the timeout for test (in milliseconds). When <code>0</code> is returned, the test\nwill not have a timeout.</p>\n",
      "type": "property",
      "platform": null,
      "isEii": false
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/core/Xunit.v3.ITheoryAttribute.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/core/Xunit.v3.ITheoryAttribute.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/core/toc.yml",
  "_tocPath": "v3-2.0.0/core/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}