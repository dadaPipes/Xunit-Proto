{
  "uid": "Xunit.Sdk",
  "isEii": false,
  "isExtensionMethod": false,
  "children": [
    {
      "uid": "Xunit.Sdk.AllException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.AllException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "AllException"
        },
        {
          "lang": "vb",
          "value": "AllException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AllException"
        },
        {
          "lang": "vb",
          "value": "AllException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AllException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AllException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AllException\" text=\"AllException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AllException\" text=\"AllException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AllException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.All fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter",
      "isExtensionMethod": false,
      "href": "Xunit.Sdk.ArgumentFormatter.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter\" text=\"ArgumentFormatter\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter\" text=\"ArgumentFormatter\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Formats value for display in assertion messages and data-driven test display names.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.AssertEqualityResult.html",
      "name": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Indicates the result of comparing two values for equality. Includes success/failure information, as well\nas indices where the values differ, if the values are indexed (e.g., collections or strings).</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.CollectionException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.CollectionException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "CollectionException"
        },
        {
          "lang": "vb",
          "value": "CollectionException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CollectionException"
        },
        {
          "lang": "vb",
          "value": "CollectionException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.CollectionException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.CollectionException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.CollectionException\" text=\"CollectionException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.CollectionException\" text=\"CollectionException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.CollectionException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Collection fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.CollectionTracker",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.CollectionTracker.html",
      "name": [
        {
          "lang": "csharp",
          "value": "CollectionTracker"
        },
        {
          "lang": "vb",
          "value": "CollectionTracker"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CollectionTracker"
        },
        {
          "lang": "vb",
          "value": "CollectionTracker"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.CollectionTracker"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.CollectionTracker"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.CollectionTracker\" text=\"CollectionTracker\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.CollectionTracker\" text=\"CollectionTracker\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.CollectionTracker.yml\" sourcestartlinenumber=\"1\">Base class for generic <xref href=\"Xunit.Sdk.CollectionTracker%601\" data-throw-if-not-resolved=\"false\"></xref>, which also includes some public\nstatic functionality.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.CollectionTrackerExtensions",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.CollectionTrackerExtensions.html",
      "name": [
        {
          "lang": "csharp",
          "value": "CollectionTrackerExtensions"
        },
        {
          "lang": "vb",
          "value": "CollectionTrackerExtensions"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CollectionTrackerExtensions"
        },
        {
          "lang": "vb",
          "value": "CollectionTrackerExtensions"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.CollectionTrackerExtensions"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.CollectionTrackerExtensions"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.CollectionTrackerExtensions\" text=\"CollectionTrackerExtensions\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.CollectionTrackerExtensions\" text=\"CollectionTrackerExtensions\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.CollectionTrackerExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods related to <xref href=\"Xunit.Sdk.CollectionTracker%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.CollectionTracker`1",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.CollectionTracker-1.html",
      "name": [
        {
          "lang": "csharp",
          "value": "CollectionTracker<T>"
        },
        {
          "lang": "vb",
          "value": "CollectionTracker(Of T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "CollectionTracker<T>"
        },
        {
          "lang": "vb",
          "value": "CollectionTracker(Of T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.CollectionTracker<T>"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.CollectionTracker(Of T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.CollectionTracker-1.html\">CollectionTracker</a>&lt;T&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.CollectionTracker-1.html\">CollectionTracker</a>(Of T)"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.CollectionTracker-1.yml\" sourcestartlinenumber=\"1\">A utility class that can be used to wrap enumerables to prevent double enumeration.\nIt offers the ability to safely print parts of the collection when failures are\nencountered, as well as some static versions of the printing functionality.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ContainsException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.ContainsException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ContainsException"
        },
        {
          "lang": "vb",
          "value": "ContainsException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ContainsException"
        },
        {
          "lang": "vb",
          "value": "ContainsException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ContainsException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ContainsException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ContainsException\" text=\"ContainsException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ContainsException\" text=\"ContainsException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ContainsException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Contains fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.DistinctException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.DistinctException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "DistinctException"
        },
        {
          "lang": "vb",
          "value": "DistinctException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DistinctException"
        },
        {
          "lang": "vb",
          "value": "DistinctException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.DistinctException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.DistinctException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.DistinctException\" text=\"DistinctException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.DistinctException\" text=\"DistinctException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.DistinctException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Distinct fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.DoesNotContainException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.DoesNotContainException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "DoesNotContainException"
        },
        {
          "lang": "vb",
          "value": "DoesNotContainException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DoesNotContainException"
        },
        {
          "lang": "vb",
          "value": "DoesNotContainException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.DoesNotContainException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.DoesNotContainException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.DoesNotContainException\" text=\"DoesNotContainException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.DoesNotContainException\" text=\"DoesNotContainException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.DoesNotContainException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.DoesNotContain fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.DoesNotMatchException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.DoesNotMatchException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "DoesNotMatchException"
        },
        {
          "lang": "vb",
          "value": "DoesNotMatchException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "DoesNotMatchException"
        },
        {
          "lang": "vb",
          "value": "DoesNotMatchException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.DoesNotMatchException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.DoesNotMatchException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.DoesNotMatchException\" text=\"DoesNotMatchException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.DoesNotMatchException\" text=\"DoesNotMatchException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.DoesNotMatchException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.DoesNotMatch fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.EmptyException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.EmptyException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "EmptyException"
        },
        {
          "lang": "vb",
          "value": "EmptyException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "EmptyException"
        },
        {
          "lang": "vb",
          "value": "EmptyException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.EmptyException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.EmptyException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.EmptyException\" text=\"EmptyException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.EmptyException\" text=\"EmptyException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.EmptyException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Empty fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.EndsWithException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.EndsWithException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "EndsWithException"
        },
        {
          "lang": "vb",
          "value": "EndsWithException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "EndsWithException"
        },
        {
          "lang": "vb",
          "value": "EndsWithException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.EndsWithException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.EndsWithException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.EndsWithException\" text=\"EndsWithException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.EndsWithException\" text=\"EndsWithException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.EndsWithException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.EndsWith fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.EqualException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.EqualException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "EqualException"
        },
        {
          "lang": "vb",
          "value": "EqualException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "EqualException"
        },
        {
          "lang": "vb",
          "value": "EqualException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.EqualException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.EqualException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.EqualException\" text=\"EqualException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.EqualException\" text=\"EqualException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.EqualException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Equal fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.EquivalentException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.EquivalentException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "EquivalentException"
        },
        {
          "lang": "vb",
          "value": "EquivalentException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "EquivalentException"
        },
        {
          "lang": "vb",
          "value": "EquivalentException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.EquivalentException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.EquivalentException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.EquivalentException\" text=\"EquivalentException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.EquivalentException\" text=\"EquivalentException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.EquivalentException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Equivalent fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.FailException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.FailException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "FailException"
        },
        {
          "lang": "vb",
          "value": "FailException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "FailException"
        },
        {
          "lang": "vb",
          "value": "FailException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.FailException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.FailException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.FailException\" text=\"FailException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.FailException\" text=\"FailException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.FailException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Fail is called.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.FalseException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.FalseException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "FalseException"
        },
        {
          "lang": "vb",
          "value": "FalseException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "FalseException"
        },
        {
          "lang": "vb",
          "value": "FalseException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.FalseException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.FalseException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.FalseException\" text=\"FalseException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.FalseException\" text=\"FalseException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.FalseException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.False fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IAssertEqualityComparerExtensions",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IAssertEqualityComparerExtensions.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IAssertEqualityComparerExtensions"
        },
        {
          "lang": "vb",
          "value": "IAssertEqualityComparerExtensions"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAssertEqualityComparerExtensions"
        },
        {
          "lang": "vb",
          "value": "IAssertEqualityComparerExtensions"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IAssertEqualityComparerExtensions"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IAssertEqualityComparerExtensions"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IAssertEqualityComparerExtensions\" text=\"IAssertEqualityComparerExtensions\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IAssertEqualityComparerExtensions\" text=\"IAssertEqualityComparerExtensions\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IAssertEqualityComparerExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods for <xref href=\"Xunit.Sdk.IAssertEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref></p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IAssertEqualityComparer`1",
      "isExtensionMethod": false,
      "href": "Xunit.Sdk.IAssertEqualityComparer-1.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IAssertEqualityComparer<T>"
        },
        {
          "lang": "vb",
          "value": "IAssertEqualityComparer(Of T)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAssertEqualityComparer<T>"
        },
        {
          "lang": "vb",
          "value": "IAssertEqualityComparer(Of T)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IAssertEqualityComparer<T>"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IAssertEqualityComparer(Of T)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.IAssertEqualityComparer-1.html\">IAssertEqualityComparer</a>&lt;T&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.IAssertEqualityComparer-1.html\">IAssertEqualityComparer</a>(Of T)"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IAssertEqualityComparer-1.yml\" sourcestartlinenumber=\"1\">Represents a specialized version of <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> that returns information useful\nwhen formatting results for assertion failures.</p>\n",
      "type": "interface",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IAssertionException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IAssertionException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IAssertionException"
        },
        {
          "lang": "vb",
          "value": "IAssertionException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAssertionException"
        },
        {
          "lang": "vb",
          "value": "IAssertionException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IAssertionException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IAssertionException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IAssertionException\" text=\"IAssertionException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IAssertionException\" text=\"IAssertionException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IAssertionException.yml\" sourcestartlinenumber=\"1\">This is a marker interface implemented by all built-in assertion exceptions so that\ntest failures can be marked with <xref href=\"Xunit.Sdk.FailureCause.Assertion\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "type": "interface",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.InRangeException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.InRangeException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "InRangeException"
        },
        {
          "lang": "vb",
          "value": "InRangeException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "InRangeException"
        },
        {
          "lang": "vb",
          "value": "InRangeException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.InRangeException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.InRangeException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.InRangeException\" text=\"InRangeException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.InRangeException\" text=\"InRangeException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.InRangeException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.InRange fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IsAssignableFromException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IsAssignableFromException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IsAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "IsAssignableFromException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IsAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "IsAssignableFromException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IsAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IsAssignableFromException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IsAssignableFromException\" text=\"IsAssignableFromException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IsAssignableFromException\" text=\"IsAssignableFromException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IsAssignableFromException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.IsAssignableFrom fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IsNotAssignableFromException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IsNotAssignableFromException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IsNotAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "IsNotAssignableFromException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IsNotAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "IsNotAssignableFromException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IsNotAssignableFromException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IsNotAssignableFromException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IsNotAssignableFromException\" text=\"IsNotAssignableFromException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IsNotAssignableFromException\" text=\"IsNotAssignableFromException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IsNotAssignableFromException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.IsNotAssignableFrom fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IsNotTypeException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IsNotTypeException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IsNotTypeException"
        },
        {
          "lang": "vb",
          "value": "IsNotTypeException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IsNotTypeException"
        },
        {
          "lang": "vb",
          "value": "IsNotTypeException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IsNotTypeException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IsNotTypeException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IsNotTypeException\" text=\"IsNotTypeException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IsNotTypeException\" text=\"IsNotTypeException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IsNotTypeException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.IsNotType fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.IsTypeException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.IsTypeException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "IsTypeException"
        },
        {
          "lang": "vb",
          "value": "IsTypeException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IsTypeException"
        },
        {
          "lang": "vb",
          "value": "IsTypeException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IsTypeException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IsTypeException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IsTypeException\" text=\"IsTypeException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IsTypeException\" text=\"IsTypeException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.IsTypeException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.IsType fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.MatchesException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.MatchesException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "MatchesException"
        },
        {
          "lang": "vb",
          "value": "MatchesException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "MatchesException"
        },
        {
          "lang": "vb",
          "value": "MatchesException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.MatchesException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.MatchesException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.MatchesException\" text=\"MatchesException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.MatchesException\" text=\"MatchesException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.MatchesException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Matches fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.MultipleException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.MultipleException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "MultipleException"
        },
        {
          "lang": "vb",
          "value": "MultipleException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "MultipleException"
        },
        {
          "lang": "vb",
          "value": "MultipleException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.MultipleException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.MultipleException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.MultipleException\" text=\"MultipleException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.MultipleException\" text=\"MultipleException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.MultipleException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Multiple fails w/ multiple errors (when a single error\noccurs, it is thrown directly).</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotEmptyException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotEmptyException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotEmptyException"
        },
        {
          "lang": "vb",
          "value": "NotEmptyException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEmptyException"
        },
        {
          "lang": "vb",
          "value": "NotEmptyException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEmptyException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEmptyException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEmptyException\" text=\"NotEmptyException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEmptyException\" text=\"NotEmptyException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEmptyException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotEmpty fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotEqualException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotEqualException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotEqualException"
        },
        {
          "lang": "vb",
          "value": "NotEqualException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEqualException"
        },
        {
          "lang": "vb",
          "value": "NotEqualException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEqualException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEqualException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotEqual fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotInRangeException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotInRangeException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotInRangeException"
        },
        {
          "lang": "vb",
          "value": "NotInRangeException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotInRangeException"
        },
        {
          "lang": "vb",
          "value": "NotInRangeException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotInRangeException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotInRangeException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotInRangeException\" text=\"NotInRangeException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotInRangeException\" text=\"NotInRangeException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotInRangeException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotInRange fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotNullException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotNullException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotNullException"
        },
        {
          "lang": "vb",
          "value": "NotNullException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotNullException"
        },
        {
          "lang": "vb",
          "value": "NotNullException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotNullException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotNullException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotNullException\" text=\"NotNullException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotNullException\" text=\"NotNullException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotNullException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotNull fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotSameException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotSameException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotSameException"
        },
        {
          "lang": "vb",
          "value": "NotSameException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotSameException"
        },
        {
          "lang": "vb",
          "value": "NotSameException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotSameException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotSameException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotSameException\" text=\"NotSameException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotSameException\" text=\"NotSameException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotSameException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotSame fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NotStrictEqualException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NotStrictEqualException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NotStrictEqualException"
        },
        {
          "lang": "vb",
          "value": "NotStrictEqualException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotStrictEqualException"
        },
        {
          "lang": "vb",
          "value": "NotStrictEqualException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotStrictEqualException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotStrictEqualException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotStrictEqualException\" text=\"NotStrictEqualException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotStrictEqualException\" text=\"NotStrictEqualException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotStrictEqualException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotStrictEqual fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.NullException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.NullException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "NullException"
        },
        {
          "lang": "vb",
          "value": "NullException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NullException"
        },
        {
          "lang": "vb",
          "value": "NullException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NullException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NullException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NullException\" text=\"NullException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NullException\" text=\"NullException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NullException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Null fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ProperSubsetException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.ProperSubsetException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ProperSubsetException"
        },
        {
          "lang": "vb",
          "value": "ProperSubsetException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ProperSubsetException"
        },
        {
          "lang": "vb",
          "value": "ProperSubsetException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ProperSubsetException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ProperSubsetException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ProperSubsetException\" text=\"ProperSubsetException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ProperSubsetException\" text=\"ProperSubsetException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ProperSubsetException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.ProperSubset fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ProperSupersetException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.ProperSupersetException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ProperSupersetException"
        },
        {
          "lang": "vb",
          "value": "ProperSupersetException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ProperSupersetException"
        },
        {
          "lang": "vb",
          "value": "ProperSupersetException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ProperSupersetException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ProperSupersetException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ProperSupersetException\" text=\"ProperSupersetException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ProperSupersetException\" text=\"ProperSupersetException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ProperSupersetException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.ProperSuperset fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.PropertyChangedException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.PropertyChangedException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "PropertyChangedException"
        },
        {
          "lang": "vb",
          "value": "PropertyChangedException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "PropertyChangedException"
        },
        {
          "lang": "vb",
          "value": "PropertyChangedException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.PropertyChangedException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.PropertyChangedException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.PropertyChangedException\" text=\"PropertyChangedException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.PropertyChangedException\" text=\"PropertyChangedException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.PropertyChangedException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.PropertyChanged fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.RaisesAnyException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.RaisesAnyException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "RaisesAnyException"
        },
        {
          "lang": "vb",
          "value": "RaisesAnyException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "RaisesAnyException"
        },
        {
          "lang": "vb",
          "value": "RaisesAnyException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.RaisesAnyException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.RaisesAnyException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.RaisesAnyException\" text=\"RaisesAnyException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.RaisesAnyException\" text=\"RaisesAnyException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.RaisesAnyException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.RaisesAny fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.RaisesException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.RaisesException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "RaisesException"
        },
        {
          "lang": "vb",
          "value": "RaisesException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "RaisesException"
        },
        {
          "lang": "vb",
          "value": "RaisesException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.RaisesException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.RaisesException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.RaisesException\" text=\"RaisesException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.RaisesException\" text=\"RaisesException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.RaisesException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Raises fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.SameException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.SameException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "SameException"
        },
        {
          "lang": "vb",
          "value": "SameException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "SameException"
        },
        {
          "lang": "vb",
          "value": "SameException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.SameException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.SameException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.SameException\" text=\"SameException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.SameException\" text=\"SameException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.SameException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Same fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.SingleException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.SingleException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "SingleException"
        },
        {
          "lang": "vb",
          "value": "SingleException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "SingleException"
        },
        {
          "lang": "vb",
          "value": "SingleException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.SingleException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.SingleException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.SingleException\" text=\"SingleException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.SingleException\" text=\"SingleException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.SingleException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Single fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.SkipException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.SkipException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "SkipException"
        },
        {
          "lang": "vb",
          "value": "SkipException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "SkipException"
        },
        {
          "lang": "vb",
          "value": "SkipException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.SkipException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.SkipException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.SkipException\" text=\"SkipException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.SkipException\" text=\"SkipException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.SkipException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Skip is called.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.StartsWithException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.StartsWithException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "StartsWithException"
        },
        {
          "lang": "vb",
          "value": "StartsWithException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "StartsWithException"
        },
        {
          "lang": "vb",
          "value": "StartsWithException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.StartsWithException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.StartsWithException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.StartsWithException\" text=\"StartsWithException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.StartsWithException\" text=\"StartsWithException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.StartsWithException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.StartsWith fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.StrictEqualException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.StrictEqualException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "StrictEqualException"
        },
        {
          "lang": "vb",
          "value": "StrictEqualException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "StrictEqualException"
        },
        {
          "lang": "vb",
          "value": "StrictEqualException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.StrictEqualException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.StrictEqualException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.StrictEqualException\" text=\"StrictEqualException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.StrictEqualException\" text=\"StrictEqualException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.StrictEqualException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.StrictEqual fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.StringAssertEqualityComparer",
      "isExtensionMethod": false,
      "href": "Xunit.Sdk.StringAssertEqualityComparer.html",
      "name": [
        {
          "lang": "csharp",
          "value": "StringAssertEqualityComparer"
        },
        {
          "lang": "vb",
          "value": "StringAssertEqualityComparer"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "StringAssertEqualityComparer"
        },
        {
          "lang": "vb",
          "value": "StringAssertEqualityComparer"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.StringAssertEqualityComparer"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.StringAssertEqualityComparer"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.StringAssertEqualityComparer\" text=\"StringAssertEqualityComparer\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.StringAssertEqualityComparer\" text=\"StringAssertEqualityComparer\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.StringAssertEqualityComparer.yml\" sourcestartlinenumber=\"1\">This static class offers equivalence comparisons for string values</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.SubsetException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.SubsetException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "SubsetException"
        },
        {
          "lang": "vb",
          "value": "SubsetException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "SubsetException"
        },
        {
          "lang": "vb",
          "value": "SubsetException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.SubsetException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.SubsetException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.SubsetException\" text=\"SubsetException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.SubsetException\" text=\"SubsetException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.SubsetException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Subset fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.SupersetException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.SupersetException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "SupersetException"
        },
        {
          "lang": "vb",
          "value": "SupersetException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "SupersetException"
        },
        {
          "lang": "vb",
          "value": "SupersetException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.SupersetException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.SupersetException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.SupersetException\" text=\"SupersetException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.SupersetException\" text=\"SupersetException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.SupersetException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Superset fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ThrowsAnyException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.ThrowsAnyException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ThrowsAnyException"
        },
        {
          "lang": "vb",
          "value": "ThrowsAnyException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ThrowsAnyException"
        },
        {
          "lang": "vb",
          "value": "ThrowsAnyException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ThrowsAnyException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ThrowsAnyException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ThrowsAnyException\" text=\"ThrowsAnyException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ThrowsAnyException\" text=\"ThrowsAnyException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ThrowsAnyException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.ThrowsAny fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.ThrowsException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.ThrowsException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "ThrowsException"
        },
        {
          "lang": "vb",
          "value": "ThrowsException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ThrowsException"
        },
        {
          "lang": "vb",
          "value": "ThrowsException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ThrowsException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ThrowsException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ThrowsException\" text=\"ThrowsException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ThrowsException\" text=\"ThrowsException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ThrowsException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.Throws fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.TrueException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.TrueException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "TrueException"
        },
        {
          "lang": "vb",
          "value": "TrueException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "TrueException"
        },
        {
          "lang": "vb",
          "value": "TrueException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.TrueException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.TrueException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.TrueException\" text=\"TrueException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.TrueException\" text=\"TrueException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.TrueException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.True fails.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "Xunit.Sdk.XunitException",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.XunitException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "XunitException"
        },
        {
          "lang": "vb",
          "value": "XunitException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "XunitException"
        },
        {
          "lang": "vb",
          "value": "XunitException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.XunitException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.XunitException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.XunitException\" text=\"XunitException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.XunitException\" text=\"XunitException\"/>"
        }
      ],
      "level": 0,
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.XunitException.yml\" sourcestartlinenumber=\"1\">The base assert exception class. It marks itself with <xref href=\"Xunit.Sdk.IAssertionException\" data-throw-if-not-resolved=\"false\"></xref> which is how\nthe framework differentiates between assertion fails and general exceptions.</p>\n",
      "type": "class",
      "platform": null,
      "isEii": false
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk"
    }
  ],
  "type": "namespace",
  "assemblies": [
    "xunit.v3.assert"
  ],
  "level": 0,
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/assert/Xunit.Sdk.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/assert/Xunit.Sdk.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/common/toc.yml",
  "_tocPath": "v3-2.0.0/common/toc.html",
  "_tocRel": "../common/toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}