{
  "uid": "Xunit.Sdk.NotEqualException",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.NotEqualException.ForEqualCollections(System.String,System.String,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.NotEqualException",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForEqualCollections(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "ForEqualCollections(String, String, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEqualException.ForEqualCollections(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "NotEqualException.ForEqualCollections(String, String, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEqualException.ForEqualCollections(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEqualException.ForEqualCollections(String, String, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollections(System.String,System.String,System.String)\" text=\"ForEqualCollections(string, string, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollections(System.String,System.String,System.String)\" text=\"ForEqualCollections(string, string, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static NotEqualException ForEqualCollections(string expected, string actual, string? collectionDisplay = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForEqualCollections(expected As String, actual As String, collectionDisplay As String = Nothing) As NotEqualException"
          }
        ],
        "parameters": [
          {
            "id": "expected",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The expected collection</p>\n"
          },
          {
            "id": "actual",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The actual collection</p>\n"
          },
          {
            "id": "collectionDisplay",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The display name for the collection type (defaults to &quot;Collections&quot;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.NotEqualException",
            "name": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.NotEqualException"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.NotEqualException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForEqualCollections",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\Exceptions\\NotEqualException.cs",
        "startLine": 43,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.NotEqualException.ForEqualCollections*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForEqualCollections"
          },
          {
            "lang": "vb",
            "value": "ForEqualCollections"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "NotEqualException.ForEqualCollections"
          },
          {
            "lang": "vb",
            "value": "NotEqualException.ForEqualCollections"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.NotEqualException.ForEqualCollections"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.NotEqualException.ForEqualCollections"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollections*\" text=\"ForEqualCollections\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollections*\" text=\"ForEqualCollections\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Creates a new instance of <xref href=\"Xunit.Sdk.NotEqualException\" data-throw-if-not-resolved=\"false\"></xref> to be thrown when two collections\nare equal.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Exception,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.NotEqualException",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForEqualCollectionsWithError(int?, string, int?, string, int?, Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "ForEqualCollectionsWithError(Integer?, String, Integer?, String, Integer?, Exception, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEqualException.ForEqualCollectionsWithError(int?, string, int?, string, int?, Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "NotEqualException.ForEqualCollectionsWithError(Integer?, String, Integer?, String, Integer?, Exception, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError(int?, string, int?, string, int?, System.Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError(Integer?, String, Integer?, String, Integer?, System.Exception, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Exception,System.String)\" text=\"ForEqualCollectionsWithError(int?, string, int?, string, int?, Exception?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Exception,System.String)\" text=\"ForEqualCollectionsWithError(int?, string, int?, string, int?, Exception?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static NotEqualException ForEqualCollectionsWithError(int? mismatchedIndex, string expected, int? expectedPointer, string actual, int? actualPointer, Exception? error = null, string? collectionDisplay = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForEqualCollectionsWithError(mismatchedIndex As Integer?, expected As String, expectedPointer As Integer?, actual As String, actualPointer As Integer?, [error] As Exception = Nothing, collectionDisplay As String = Nothing) As NotEqualException"
          }
        ],
        "parameters": [
          {
            "id": "mismatchedIndex",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The index at which the collections error occurred (should be <code>null</code>\nwhen <code class=\"paramref\">error</code> is <code>null</code>)</p>\n"
          },
          {
            "id": "expected",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The expected collection</p>\n"
          },
          {
            "id": "expectedPointer",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The spacing into the expected collection where the difference occurs\n(should be <code>null</code> when <code class=\"paramref\">error</code> is null)</p>\n"
          },
          {
            "id": "actual",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The actual collection</p>\n"
          },
          {
            "id": "actualPointer",
            "type": {
              "uid": "System.Nullable{System.Int32}",
              "definition": "System.Nullable`1",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int?"
                },
                {
                  "lang": "vb",
                  "value": "Integer?"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
                },
                {
                  "lang": "vb",
                  "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The spacing into the actual collection where the difference occurs\n(should be <code>null</code> when <code class=\"paramref\">error</code> is null)</p>\n"
          },
          {
            "id": "error",
            "type": {
              "uid": "System.Exception",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Exception"
                },
                {
                  "lang": "vb",
                  "value": "System.Exception"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The optional exception that was thrown during comparison</p>\n"
          },
          {
            "id": "collectionDisplay",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The display name for the collection type (defaults to &quot;Collections&quot;)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.NotEqualException",
            "name": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.NotEqualException"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.NotEqualException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForEqualCollectionsWithError",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\Exceptions\\NotEqualException.cs",
        "startLine": 67,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForEqualCollectionsWithError"
          },
          {
            "lang": "vb",
            "value": "ForEqualCollectionsWithError"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "NotEqualException.ForEqualCollectionsWithError"
          },
          {
            "lang": "vb",
            "value": "NotEqualException.ForEqualCollectionsWithError"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError*\" text=\"ForEqualCollectionsWithError\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualCollectionsWithError*\" text=\"ForEqualCollectionsWithError\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Creates a new instance of <xref href=\"Xunit.Sdk.NotEqualException\" data-throw-if-not-resolved=\"false\"></xref> to be thrown when two collections\nare equal, and an error has occurred during comparison.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.NotEqualException.ForEqualValues(System.String,System.String,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.NotEqualException",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForEqualValues(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "ForEqualValues(String, String, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEqualException.ForEqualValues(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "NotEqualException.ForEqualValues(String, String, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEqualException.ForEqualValues(string, string, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEqualException.ForEqualValues(String, String, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValues(System.String,System.String,System.String)\" text=\"ForEqualValues(string, string, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValues(System.String,System.String,System.String)\" text=\"ForEqualValues(string, string, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static NotEqualException ForEqualValues(string expected, string actual, string? banner = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForEqualValues(expected As String, actual As String, banner As String = Nothing) As NotEqualException"
          }
        ],
        "parameters": [
          {
            "id": "expected",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The expected value</p>\n"
          },
          {
            "id": "actual",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The actual value</p>\n"
          },
          {
            "id": "banner",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The banner to show; if <code>null</code>, then the standard\nbanner of &quot;Values are equal&quot; will be used</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.NotEqualException",
            "name": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.NotEqualException"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.NotEqualException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForEqualValues",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\Exceptions\\NotEqualException.cs",
        "startLine": 113,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.NotEqualException.ForEqualValues*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForEqualValues"
          },
          {
            "lang": "vb",
            "value": "ForEqualValues"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "NotEqualException.ForEqualValues"
          },
          {
            "lang": "vb",
            "value": "NotEqualException.ForEqualValues"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.NotEqualException.ForEqualValues"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.NotEqualException.ForEqualValues"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValues*\" text=\"ForEqualValues\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValues*\" text=\"ForEqualValues\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Creates a new instance of <xref href=\"Xunit.Sdk.NotEqualException\" data-throw-if-not-resolved=\"false\"></xref> to be thrown when two values\nare equal. This may be simple values (like intrinsics) or complex values (like\nclasses or structs).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError(System.String,System.String,System.Exception,System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.NotEqualException",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForEqualValuesWithError(string, string, Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "ForEqualValuesWithError(String, String, Exception, String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "NotEqualException.ForEqualValuesWithError(string, string, Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "NotEqualException.ForEqualValuesWithError(String, String, Exception, String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError(string, string, System.Exception?, string?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError(String, String, System.Exception, String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValuesWithError(System.String,System.String,System.Exception,System.String)\" text=\"ForEqualValuesWithError(string, string, Exception?, string?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValuesWithError(System.String,System.String,System.Exception,System.String)\" text=\"ForEqualValuesWithError(string, string, Exception?, string?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static NotEqualException ForEqualValuesWithError(string expected, string actual, Exception? error = null, string? banner = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForEqualValuesWithError(expected As String, actual As String, [error] As Exception = Nothing, banner As String = Nothing) As NotEqualException"
          }
        ],
        "parameters": [
          {
            "id": "expected",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The expected value</p>\n"
          },
          {
            "id": "actual",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The actual value</p>\n"
          },
          {
            "id": "error",
            "type": {
              "uid": "System.Exception",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Exception"
                },
                {
                  "lang": "vb",
                  "value": "System.Exception"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The optional exception that was thrown during comparison</p>\n"
          },
          {
            "id": "banner",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">The banner to show; if <code>null</code>, then the standard\nbanner of &quot;Values are equal&quot; will be used. If <code class=\"paramref\">error</code> is not <code>null</code>,\nthen the banner used will always be &quot;Exception thrown during comparison&quot;, regardless\nof the value passed here.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.NotEqualException",
            "name": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "NotEqualException"
              },
              {
                "lang": "vb",
                "value": "NotEqualException"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.NotEqualException"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.NotEqualException"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.NotEqualException\" text=\"NotEqualException\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForEqualValuesWithError",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\Exceptions\\NotEqualException.cs",
        "startLine": 135,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForEqualValuesWithError"
          },
          {
            "lang": "vb",
            "value": "ForEqualValuesWithError"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "NotEqualException.ForEqualValuesWithError"
          },
          {
            "lang": "vb",
            "value": "NotEqualException.ForEqualValuesWithError"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.NotEqualException.ForEqualValuesWithError"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValuesWithError*\" text=\"ForEqualValuesWithError\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.NotEqualException.ForEqualValuesWithError*\" text=\"ForEqualValuesWithError\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Creates a new instance of <xref href=\"Xunit.Sdk.NotEqualException\" data-throw-if-not-resolved=\"false\"></xref> to be thrown when two values\nare equal. This may be simple values (like intrinsics) or complex values (like\nclasses or structs). Used when an error has occurred during comparison.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "NotEqualException"
    },
    {
      "lang": "vb",
      "value": "NotEqualException"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "NotEqualException"
    },
    {
      "lang": "vb",
      "value": "NotEqualException"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.NotEqualException"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.NotEqualException"
    }
  ],
  "type": "class",
  "source": {
    "id": "NotEqualException",
    "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\Exceptions\\NotEqualException.cs",
    "startLine": 22,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.assert"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml\" sourcestartlinenumber=\"1\">Exception thrown when Assert.NotEqual fails.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class NotEqualException : XunitException, ISerializable, IAssertionException"
      },
      {
        "lang": "vb",
        "value": "Public Class NotEqualException Inherits XunitException Implements ISerializable, IAssertionException"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    },
    {
      "uid": "System.Exception",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception",
      "name": [
        {
          "lang": "csharp",
          "value": "Exception"
        },
        {
          "lang": "vb",
          "value": "Exception"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception"
        },
        {
          "lang": "vb",
          "value": "Exception"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception"
        },
        {
          "lang": "vb",
          "value": "System.Exception"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
        }
      ],
      "level": 0,
      "index": 1
    },
    {
      "uid": "Xunit.Sdk.XunitException",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk",
      "href": "Xunit.Sdk.XunitException.html",
      "name": [
        {
          "lang": "csharp",
          "value": "XunitException"
        },
        {
          "lang": "vb",
          "value": "XunitException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "XunitException"
        },
        {
          "lang": "vb",
          "value": "XunitException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.XunitException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.XunitException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.XunitException\" text=\"XunitException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.XunitException\" text=\"XunitException\"/>"
        }
      ],
      "level": 0,
      "index": 2
    }
  ],
  "level": 3,
  "implements": [
    {
      "uid": "System.Runtime.Serialization.ISerializable",
      "name": [
        {
          "lang": "csharp",
          "value": "ISerializable"
        },
        {
          "lang": "vb",
          "value": "ISerializable"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ISerializable"
        },
        {
          "lang": "vb",
          "value": "ISerializable"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Runtime.Serialization.ISerializable"
        },
        {
          "lang": "vb",
          "value": "System.Runtime.Serialization.ISerializable"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Runtime.Serialization.ISerializable\" text=\"ISerializable\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Runtime.Serialization.ISerializable\" text=\"ISerializable\"/>"
        }
      ]
    },
    {
      "uid": "Xunit.Sdk.IAssertionException",
      "name": [
        {
          "lang": "csharp",
          "value": "IAssertionException"
        },
        {
          "lang": "vb",
          "value": "IAssertionException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IAssertionException"
        },
        {
          "lang": "vb",
          "value": "IAssertionException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.IAssertionException"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.IAssertionException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.IAssertionException\" text=\"IAssertionException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.IAssertionException\" text=\"IAssertionException\"/>"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "Xunit.Sdk.XunitException.ToString",
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.XunitException",
      "href": "Xunit.Sdk.XunitException.html#Xunit_Sdk_XunitException_ToString",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "XunitException.ToString()"
        },
        {
          "lang": "vb",
          "value": "XunitException.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.XunitException.ToString()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.XunitException.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.XunitException.html#Xunit_Sdk_XunitException_ToString\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"Xunit.Sdk.XunitException.html#Xunit_Sdk_XunitException_ToString\">ToString</a>()"
        }
      ],
      "level": 0,
      "summary": null,
      "type": "method",
      "platform": null,
      "isEii": false
    },
    {
      "uid": "System.Exception.GetBaseException",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception",
      "name": [
        {
          "lang": "csharp",
          "value": "GetBaseException()"
        },
        {
          "lang": "vb",
          "value": "GetBaseException()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.GetBaseException()"
        },
        {
          "lang": "vb",
          "value": "Exception.GetBaseException()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.GetBaseException()"
        },
        {
          "lang": "vb",
          "value": "System.Exception.GetBaseException()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception\">GetBaseException</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception\">GetBaseException</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata",
      "name": [
        {
          "lang": "csharp",
          "value": "GetObjectData(SerializationInfo, StreamingContext)"
        },
        {
          "lang": "vb",
          "value": "GetObjectData(SerializationInfo, StreamingContext)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.GetObjectData(SerializationInfo, StreamingContext)"
        },
        {
          "lang": "vb",
          "value": "Exception.GetObjectData(SerializationInfo, StreamingContext)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"
        },
        {
          "lang": "vb",
          "value": "System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata\">GetObjectData</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo\">SerializationInfo</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext\">StreamingContext</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata\">GetObjectData</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo\">SerializationInfo</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext\">StreamingContext</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.GetType()"
        },
        {
          "lang": "vb",
          "value": "Exception.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.GetType()"
        },
        {
          "lang": "vb",
          "value": "System.Exception.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.exception.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.Data",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.data",
      "name": [
        {
          "lang": "csharp",
          "value": "Data"
        },
        {
          "lang": "vb",
          "value": "Data"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.Data"
        },
        {
          "lang": "vb",
          "value": "Exception.Data"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.Data"
        },
        {
          "lang": "vb",
          "value": "System.Exception.Data"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.Data\" text=\"Data\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.Data\" text=\"Data\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.HelpLink",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.helplink",
      "name": [
        {
          "lang": "csharp",
          "value": "HelpLink"
        },
        {
          "lang": "vb",
          "value": "HelpLink"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.HelpLink"
        },
        {
          "lang": "vb",
          "value": "Exception.HelpLink"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.HelpLink"
        },
        {
          "lang": "vb",
          "value": "System.Exception.HelpLink"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.HelpLink\" text=\"HelpLink\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.HelpLink\" text=\"HelpLink\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.HResult",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.hresult",
      "name": [
        {
          "lang": "csharp",
          "value": "HResult"
        },
        {
          "lang": "vb",
          "value": "HResult"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.HResult"
        },
        {
          "lang": "vb",
          "value": "Exception.HResult"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.HResult"
        },
        {
          "lang": "vb",
          "value": "System.Exception.HResult"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.HResult\" text=\"HResult\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.HResult\" text=\"HResult\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.InnerException",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.innerexception",
      "name": [
        {
          "lang": "csharp",
          "value": "InnerException"
        },
        {
          "lang": "vb",
          "value": "InnerException"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.InnerException"
        },
        {
          "lang": "vb",
          "value": "Exception.InnerException"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.InnerException"
        },
        {
          "lang": "vb",
          "value": "System.Exception.InnerException"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.InnerException\" text=\"InnerException\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.InnerException\" text=\"InnerException\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.Message",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.message",
      "name": [
        {
          "lang": "csharp",
          "value": "Message"
        },
        {
          "lang": "vb",
          "value": "Message"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.Message"
        },
        {
          "lang": "vb",
          "value": "Exception.Message"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.Message"
        },
        {
          "lang": "vb",
          "value": "System.Exception.Message"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.Message\" text=\"Message\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.Message\" text=\"Message\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.Source",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.source",
      "name": [
        {
          "lang": "csharp",
          "value": "Source"
        },
        {
          "lang": "vb",
          "value": "Source"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.Source"
        },
        {
          "lang": "vb",
          "value": "Exception.Source"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.Source"
        },
        {
          "lang": "vb",
          "value": "System.Exception.Source"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.Source\" text=\"Source\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.Source\" text=\"Source\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.StackTrace",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.stacktrace",
      "name": [
        {
          "lang": "csharp",
          "value": "StackTrace"
        },
        {
          "lang": "vb",
          "value": "StackTrace"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.StackTrace"
        },
        {
          "lang": "vb",
          "value": "Exception.StackTrace"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.StackTrace"
        },
        {
          "lang": "vb",
          "value": "System.Exception.StackTrace"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.StackTrace\" text=\"StackTrace\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.StackTrace\" text=\"StackTrace\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.TargetSite",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.targetsite",
      "name": [
        {
          "lang": "csharp",
          "value": "TargetSite"
        },
        {
          "lang": "vb",
          "value": "TargetSite"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.TargetSite"
        },
        {
          "lang": "vb",
          "value": "Exception.TargetSite"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.TargetSite"
        },
        {
          "lang": "vb",
          "value": "System.Exception.TargetSite"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.TargetSite\" text=\"TargetSite\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.TargetSite\" text=\"TargetSite\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Exception.SerializeObjectState",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Exception",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.exception.serializeobjectstate",
      "name": [
        {
          "lang": "csharp",
          "value": "SerializeObjectState"
        },
        {
          "lang": "vb",
          "value": "SerializeObjectState"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "Exception.SerializeObjectState"
        },
        {
          "lang": "vb",
          "value": "Exception.SerializeObjectState"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.Exception.SerializeObjectState"
        },
        {
          "lang": "vb",
          "value": "System.Exception.SerializeObjectState"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Exception.SerializeObjectState\" text=\"SerializeObjectState\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Exception.SerializeObjectState\" text=\"SerializeObjectState\"/>"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/assert/Xunit.Sdk.NotEqualException.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/assert/Xunit.Sdk.NotEqualException.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/assert/toc.yml",
  "_tocPath": "v3-2.0.0/assert/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}