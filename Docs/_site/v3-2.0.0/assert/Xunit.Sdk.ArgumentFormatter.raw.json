{
  "uid": "Xunit.Sdk.ArgumentFormatter",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.Ellipsis",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Ellipsis"
        },
        {
          "lang": "vb",
          "value": "Ellipsis"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.Ellipsis"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.Ellipsis"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.Ellipsis"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.Ellipsis"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Ellipsis\" text=\"Ellipsis\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Ellipsis\" text=\"Ellipsis\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string Ellipsis { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property Ellipsis As String"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "Ellipsis",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 117,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.Ellipsis*",
        "name": [
          {
            "lang": "csharp",
            "value": "Ellipsis"
          },
          {
            "lang": "vb",
            "value": "Ellipsis"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.Ellipsis"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.Ellipsis"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.Ellipsis"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.Ellipsis"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Ellipsis*\" text=\"Ellipsis\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Ellipsis*\" text=\"Ellipsis\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Gets the ellipsis value (three middle dots, aka U+00B7).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.EscapeString(System.String)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "EscapeString(string)"
        },
        {
          "lang": "vb",
          "value": "EscapeString(String)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.EscapeString(string)"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.EscapeString(String)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.EscapeString(string)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.EscapeString(String)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.EscapeString(System.String)\" text=\"EscapeString(string)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.EscapeString(System.String)\" text=\"EscapeString(string)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string EscapeString(string s)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function EscapeString(s As String) As String"
          }
        ],
        "parameters": [
          {
            "id": "s",
            "type": {
              "uid": "System.String",
              "name": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "string"
                },
                {
                  "lang": "vb",
                  "value": "String"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.String\" text=\"string\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">The string value to be escaped</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "EscapeString",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 146,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.EscapeString*",
        "name": [
          {
            "lang": "csharp",
            "value": "EscapeString"
          },
          {
            "lang": "vb",
            "value": "EscapeString"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.EscapeString"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.EscapeString"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.EscapeString"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.EscapeString"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.EscapeString*\" text=\"EscapeString\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.EscapeString*\" text=\"EscapeString\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Escapes a string for printing, attempting to most closely model the value on how you would\nenter the value in a C# string literal. That means control codes that are normally backslash\nescaped (like &quot;\\n&quot; for newline) are represented like that; all other control codes for ASCII\nvalues under 32 are printed as &quot;\\xnn&quot;.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.Format(System.Object,System.Int32)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Format(object?, int)"
        },
        {
          "lang": "vb",
          "value": "Format(Object, Integer)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.Format(object?, int)"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.Format(Object, Integer)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.Format(object?, int)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.Format(Object, Integer)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Format(System.Object,System.Int32)\" text=\"Format(object?, int)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Format(System.Object,System.Int32)\" text=\"Format(object?, int)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string Format(object? value, int depth = 1)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function Format(value As Object, depth As Integer = 1) As String"
          }
        ],
        "parameters": [
          {
            "id": "value",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">The value to be formatted</p>\n"
          },
          {
            "id": "depth",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">The optional printing depth (1 indicates a top-level value)</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "Format",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 186,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.Format*",
        "name": [
          {
            "lang": "csharp",
            "value": "Format"
          },
          {
            "lang": "vb",
            "value": "Format"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.Format"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.Format"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.Format"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.Format"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Format*\" text=\"Format\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.Format*\" text=\"Format\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Formats a value for display.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.FormatTypeName(System.Type,System.Boolean)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "FormatTypeName(Type, bool)"
        },
        {
          "lang": "vb",
          "value": "FormatTypeName(Type, Boolean)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.FormatTypeName(Type, bool)"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.FormatTypeName(Type, Boolean)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.FormatTypeName(System.Type, bool)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.FormatTypeName(System.Type, Boolean)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.FormatTypeName(System.Type,System.Boolean)\" text=\"FormatTypeName(Type, bool)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.FormatTypeName(System.Type,System.Boolean)\" text=\"FormatTypeName(Type, bool)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static string FormatTypeName(Type type, bool fullTypeName = false)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function FormatTypeName(type As Type, fullTypeName As Boolean = False) As String"
          }
        ],
        "parameters": [
          {
            "id": "type",
            "type": {
              "uid": "System.Type",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Type"
                },
                {
                  "lang": "vb",
                  "value": "Type"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Type"
                },
                {
                  "lang": "vb",
                  "value": "System.Type"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Type\" text=\"Type\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">The type to get the formatted name of</p>\n"
          },
          {
            "id": "fullTypeName",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Set to <code>true</code> to include the namespace; set to <code>false</code> for just the simple type name</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.String",
            "name": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "string"
              },
              {
                "lang": "vb",
                "value": "String"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.String\" text=\"string\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "FormatTypeName",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 458,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.FormatTypeName*",
        "name": [
          {
            "lang": "csharp",
            "value": "FormatTypeName"
          },
          {
            "lang": "vb",
            "value": "FormatTypeName"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.FormatTypeName"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.FormatTypeName"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.FormatTypeName"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.FormatTypeName"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.FormatTypeName*\" text=\"FormatTypeName\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.FormatTypeName*\" text=\"FormatTypeName\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Formats a type. This maps built-in C# types to their C# native name (e.g., printing &quot;int&quot; instead\nof &quot;Int32&quot; or &quot;System.Int32&quot;).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "MaxEnumerableLength"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.MaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.MaxEnumerableLength"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength\" text=\"MaxEnumerableLength\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength\" text=\"MaxEnumerableLength\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int MaxEnumerableLength { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property MaxEnumerableLength As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MaxEnumerableLength",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 122,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "MaxEnumerableLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.MaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.MaxEnumerableLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength*\" text=\"MaxEnumerableLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxEnumerableLength*\" text=\"MaxEnumerableLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of values printed for collections before truncation.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "MaxObjectDepth"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.MaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.MaxObjectDepth"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectDepth\" text=\"MaxObjectDepth\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectDepth\" text=\"MaxObjectDepth\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int MaxObjectDepth { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property MaxObjectDepth As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MaxObjectDepth",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 127,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "MaxObjectDepth"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.MaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.MaxObjectDepth"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectDepth"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectDepth*\" text=\"MaxObjectDepth\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectDepth*\" text=\"MaxObjectDepth\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Gets the maximum printing depth, in terms of objects before truncation.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "MaxObjectMemberCount"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.MaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.MaxObjectMemberCount"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount\" text=\"MaxObjectMemberCount\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount\" text=\"MaxObjectMemberCount\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int MaxObjectMemberCount { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property MaxObjectMemberCount As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MaxObjectMemberCount",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 132,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "MaxObjectMemberCount"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.MaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.MaxObjectMemberCount"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount*\" text=\"MaxObjectMemberCount\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxObjectMemberCount*\" text=\"MaxObjectMemberCount\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Gets the maximum number of items (properties or fields) printed in an object before truncation.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.ArgumentFormatter.MaxStringLength",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.ArgumentFormatter",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MaxStringLength"
        },
        {
          "lang": "vb",
          "value": "MaxStringLength"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "ArgumentFormatter.MaxStringLength"
        },
        {
          "lang": "vb",
          "value": "ArgumentFormatter.MaxStringLength"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxStringLength"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.ArgumentFormatter.MaxStringLength"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxStringLength\" text=\"MaxStringLength\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxStringLength\" text=\"MaxStringLength\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static int MaxStringLength { get; }"
          },
          {
            "lang": "vb",
            "value": "Public Shared ReadOnly Property MaxStringLength As Integer"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MaxStringLength",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
        "startLine": 137,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.ArgumentFormatter.MaxStringLength*",
        "name": [
          {
            "lang": "csharp",
            "value": "MaxStringLength"
          },
          {
            "lang": "vb",
            "value": "MaxStringLength"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "ArgumentFormatter.MaxStringLength"
          },
          {
            "lang": "vb",
            "value": "ArgumentFormatter.MaxStringLength"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxStringLength"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.ArgumentFormatter.MaxStringLength"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxStringLength*\" text=\"MaxStringLength\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.ArgumentFormatter.MaxStringLength*\" text=\"MaxStringLength\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Gets the maximum strength length before truncation.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "ArgumentFormatter"
    },
    {
      "lang": "vb",
      "value": "ArgumentFormatter"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "ArgumentFormatter"
    },
    {
      "lang": "vb",
      "value": "ArgumentFormatter"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.ArgumentFormatter"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.ArgumentFormatter"
    }
  ],
  "type": "class",
  "source": {
    "id": "ArgumentFormatter",
    "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\ArgumentFormatter.cs",
    "startLine": 47,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.assert"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml\" sourcestartlinenumber=\"1\">Formats value for display in assertion messages and data-driven test display names.</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public static class ArgumentFormatter"
      },
      {
        "lang": "vb",
        "value": "Public Module ArgumentFormatter"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gethashcode",
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Object.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/assert/Xunit.Sdk.ArgumentFormatter.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/assert/toc.yml",
  "_tocPath": "v3-2.0.0/assert/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}