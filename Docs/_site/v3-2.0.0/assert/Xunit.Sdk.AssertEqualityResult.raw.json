{
  "uid": "Xunit.Sdk.AssertEqualityResult",
  "isEii": false,
  "isExtensionMethod": false,
  "parent": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "children": [
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.Equal",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Equal"
        },
        {
          "lang": "vb",
          "value": "Equal"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.Equal"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.Equal"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.Equal"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.Equal"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equal\" text=\"Equal\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equal\" text=\"Equal\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool Equal { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Equal As Boolean"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "Equal",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 55,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.Equal*",
        "name": [
          {
            "lang": "csharp",
            "value": "Equal"
          },
          {
            "lang": "vb",
            "value": "Equal"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.Equal"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.Equal"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.Equal"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.Equal"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equal*\" text=\"Equal\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equal*\" text=\"Equal\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the values were equal; <code>false</code>, otherwise.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.Equals(System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object?)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.Equals(object?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.Equals(Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.Equals(object?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.Equals(Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals(System.Object)\" text=\"Equals(object?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals(System.Object)\" text=\"Equals(object?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public override bool Equals(object? obj)"
          },
          {
            "lang": "vb",
            "value": "Public Overrides Function Equals(obj As Object) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "obj",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The object to compare with the current object.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.</p>\n"
        }
      },
      "source": {
        "id": "Equals",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 117,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overridden": {
        "uid": "System.Object.Equals(System.Object)",
        "name": [
          {
            "lang": "csharp",
            "value": "Equals(object)"
          },
          {
            "lang": "vb",
            "value": "Equals(Object)"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "object.Equals(object)"
          },
          {
            "lang": "vb",
            "value": "Object.Equals(Object)"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "object.Equals(object)"
          },
          {
            "lang": "vb",
            "value": "Object.Equals(Object)"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
          },
          {
            "lang": "vb",
            "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
          }
        ]
      },
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.Equals*",
        "name": [
          {
            "lang": "csharp",
            "value": "Equals"
          },
          {
            "lang": "vb",
            "value": "Equals"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.Equals"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.Equals"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.Equals"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.Equals"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals*\" text=\"Equals\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals*\" text=\"Equals\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Determines whether the specified object is equal to the current object.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Equals(AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.Equals(AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.Equals(AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)\" text=\"Equals(AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)\" text=\"Equals(AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public bool Equals(AssertEqualityResult? other)"
          },
          {
            "lang": "vb",
            "value": "Public Function Equals(other As AssertEqualityResult) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "other",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The object to compare with the current object.</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.</p>\n"
        }
      },
      "source": {
        "id": "Equals",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 129,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.Equals*",
        "name": [
          {
            "lang": "csharp",
            "value": "Equals"
          },
          {
            "lang": "vb",
            "value": "Equals"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.Equals"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.Equals"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.Equals"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.Equals"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals*\" text=\"Equals\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Equals*\" text=\"Equals\"/>"
          }
        ]
      },
      "level": 0,
      "implements": [
        {
          "uid": "System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)",
          "definition": "System.IEquatable`1.Equals(`0)",
          "name": [
            {
              "lang": "csharp",
              "value": "Equals(AssertEqualityResult)"
            },
            {
              "lang": "vb",
              "value": "Equals(AssertEqualityResult)"
            }
          ],
          "nameWithType": [
            {
              "lang": "csharp",
              "value": "IEquatable<AssertEqualityResult>.Equals(AssertEqualityResult)"
            },
            {
              "lang": "vb",
              "value": "IEquatable(Of AssertEqualityResult).Equals(AssertEqualityResult)"
            }
          ],
          "fullName": [
            {
              "lang": "csharp",
              "value": "System.IEquatable<Xunit.Sdk.AssertEqualityResult>.Equals(Xunit.Sdk.AssertEqualityResult)"
            },
            {
              "lang": "vb",
              "value": "System.IEquatable(Of Xunit.Sdk.AssertEqualityResult).Equals(Xunit.Sdk.AssertEqualityResult)"
            }
          ],
          "specName": [
            {
              "lang": "csharp",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals\">Equals</a>(<a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html\">AssertEqualityResult</a>)"
            },
            {
              "lang": "vb",
              "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals\">Equals</a>(<a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html\">AssertEqualityResult</a>)"
            }
          ]
        }
      ],
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Determines whether the specified object is equal to the current object.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.Exception",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Exception"
        },
        {
          "lang": "vb",
          "value": "Exception"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.Exception"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.Exception"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.Exception"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.Exception"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Exception\" text=\"Exception\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Exception\" text=\"Exception\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public Exception? Exception { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Exception As Exception"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Exception",
            "name": [
              {
                "lang": "csharp",
                "value": "Exception"
              },
              {
                "lang": "vb",
                "value": "Exception"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "Exception"
              },
              {
                "lang": "vb",
                "value": "Exception"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "System.Exception"
              },
              {
                "lang": "vb",
                "value": "System.Exception"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "Exception",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 61,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.Exception*",
        "name": [
          {
            "lang": "csharp",
            "value": "Exception"
          },
          {
            "lang": "vb",
            "value": "Exception"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.Exception"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.Exception"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.Exception"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.Exception"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Exception*\" text=\"Exception\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Exception*\" text=\"Exception\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns the exception that caused the failure, if it was based on an exception.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "ForMismatch(Object, Object, Integer, Exception, AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.ForMismatch(Object, Object, Integer, Exception, AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch(object?, object?, int, System.Exception?, Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch(Object, Object, Integer, System.Exception, Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static AssertEqualityResult ForMismatch(object? x, object? y, int mismatchIndex, Exception? exception = null, AssertEqualityResult? innerResult = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForMismatch(x As Object, y As Object, mismatchIndex As Integer, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult"
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The left-hand value in the comparison</p>\n"
          },
          {
            "id": "y",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The right-hand value in the comparison</p>\n"
          },
          {
            "id": "mismatchIndex",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The mismatch index for both <code>X</code> and <code>Y</code> values</p>\n"
          },
          {
            "id": "exception",
            "type": {
              "uid": "System.Exception",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Exception"
                },
                {
                  "lang": "vb",
                  "value": "System.Exception"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional exception that was thrown to cause the failure</p>\n"
          },
          {
            "id": "innerResult",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional inner result that caused the equality failure</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.AssertEqualityResult",
            "name": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.AssertEqualityResult"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForMismatch",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 156,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.ForMismatch*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForMismatch"
          },
          {
            "lang": "vb",
            "value": "ForMismatch"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.ForMismatch"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.ForMismatch"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch*\" text=\"ForMismatch\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch*\" text=\"ForMismatch\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Creates an instance of <xref href=\"Xunit.Sdk.AssertEqualityResult\" data-throw-if-not-resolved=\"false\"></xref> where the values were\nnot equal, and there is a single mismatch index (for example, when comparing two\ncollections).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "ForMismatch(Object, Object, Integer, Integer, Exception, AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.ForMismatch(Object, Object, Integer, Integer, Exception, AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch(object?, object?, int, int, System.Exception?, Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch(Object, Object, Integer, Integer, System.Exception, Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static AssertEqualityResult ForMismatch(object? x, object? y, int mismatchIndexX, int mismatchIndexY, Exception? exception = null, AssertEqualityResult? innerResult = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForMismatch(x As Object, y As Object, mismatchIndexX As Integer, mismatchIndexY As Integer, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult"
          }
        ],
        "parameters": [
          {
            "id": "x",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The left-hand value in the comparison</p>\n"
          },
          {
            "id": "y",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The right-hand value in the comparison</p>\n"
          },
          {
            "id": "mismatchIndexX",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The mismatch index for the <code>X</code> value</p>\n"
          },
          {
            "id": "mismatchIndexY",
            "type": {
              "uid": "System.Int32",
              "name": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "int"
                },
                {
                  "lang": "vb",
                  "value": "Integer"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The mismatch index for the <code>Y</code> value</p>\n"
          },
          {
            "id": "exception",
            "type": {
              "uid": "System.Exception",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Exception"
                },
                {
                  "lang": "vb",
                  "value": "System.Exception"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional exception that was thrown to cause the failure</p>\n"
          },
          {
            "id": "innerResult",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional inner result that caused the equality failure</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.AssertEqualityResult",
            "name": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.AssertEqualityResult"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForMismatch",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 185,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.ForMismatch*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForMismatch"
          },
          {
            "lang": "vb",
            "value": "ForMismatch"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.ForMismatch"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.ForMismatch"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.ForMismatch"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch*\" text=\"ForMismatch\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForMismatch*\" text=\"ForMismatch\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Creates an instance of <xref href=\"Xunit.Sdk.AssertEqualityResult\" data-throw-if-not-resolved=\"false\"></xref> where the values were\nnot equal, and there are separate mismatch indices (for example, when comparing two\nstrings under special circumstances).</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "ForResult(Boolean, Object, Object, Exception, AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.ForResult(Boolean, Object, Object, Exception, AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.ForResult(bool, object?, object?, System.Exception?, Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.ForResult(Boolean, Object, Object, System.Exception, Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)\" text=\"ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static AssertEqualityResult ForResult(bool equal, object? x, object? y, Exception? exception = null, AssertEqualityResult? innerResult = null)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Function ForResult(equal As Boolean, x As Object, y As Object, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult"
          }
        ],
        "parameters": [
          {
            "id": "equal",
            "type": {
              "uid": "System.Boolean",
              "name": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "bool"
                },
                {
                  "lang": "vb",
                  "value": "Boolean"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">A flag which indicates whether the values were equal</p>\n"
          },
          {
            "id": "x",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The left-hand value in the comparison</p>\n"
          },
          {
            "id": "y",
            "type": {
              "uid": "System.Object",
              "name": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "object"
                },
                {
                  "lang": "vb",
                  "value": "Object"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Object\" text=\"object\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The right-hand value in the comparison</p>\n"
          },
          {
            "id": "exception",
            "type": {
              "uid": "System.Exception",
              "name": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "Exception"
                },
                {
                  "lang": "vb",
                  "value": "Exception"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "System.Exception"
                },
                {
                  "lang": "vb",
                  "value": "System.Exception"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"System.Exception\" text=\"Exception\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional exception that was thrown to cause the failure</p>\n"
          },
          {
            "id": "innerResult",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The optional inner result that caused the equality failure</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.AssertEqualityResult",
            "name": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.AssertEqualityResult"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "ForResult",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 212,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.ForResult*",
        "name": [
          {
            "lang": "csharp",
            "value": "ForResult"
          },
          {
            "lang": "vb",
            "value": "ForResult"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.ForResult"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.ForResult"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.ForResult"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.ForResult"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForResult*\" text=\"ForResult\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.ForResult*\" text=\"ForResult\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Creates an instance of <xref href=\"Xunit.Sdk.AssertEqualityResult\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.GetHashCode",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "GetHashCode()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.GetHashCode()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.GetHashCode()"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.GetHashCode()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.GetHashCode\" text=\"GetHashCode()\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.GetHashCode\" text=\"GetHashCode()\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public override int GetHashCode()"
          },
          {
            "lang": "vb",
            "value": "Public Overrides Function GetHashCode() As Integer"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Int32",
            "name": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int"
              },
              {
                "lang": "vb",
                "value": "Integer"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Int32\" text=\"int\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "GetHashCode",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 230,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overridden": {
        "uid": "System.Object.GetHashCode",
        "name": [
          {
            "lang": "csharp",
            "value": "GetHashCode()"
          },
          {
            "lang": "vb",
            "value": "GetHashCode()"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "object.GetHashCode()"
          },
          {
            "lang": "vb",
            "value": "Object.GetHashCode()"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "object.GetHashCode()"
          },
          {
            "lang": "vb",
            "value": "Object.GetHashCode()"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
          },
          {
            "lang": "vb",
            "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gethashcode\">GetHashCode</a>()"
          }
        ]
      },
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.GetHashCode*",
        "name": [
          {
            "lang": "csharp",
            "value": "GetHashCode"
          },
          {
            "lang": "vb",
            "value": "GetHashCode"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.GetHashCode"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.GetHashCode"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.GetHashCode"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.GetHashCode"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.GetHashCode*\" text=\"GetHashCode\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.GetHashCode*\" text=\"GetHashCode\"/>"
          }
        ]
      },
      "level": 0,
      "type": "method",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Gets a hash code for the object, to be used in hashed containers.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.InnerResult",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "InnerResult"
        },
        {
          "lang": "vb",
          "value": "InnerResult"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.InnerResult"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.InnerResult"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.InnerResult"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.InnerResult"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.InnerResult\" text=\"InnerResult\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.InnerResult\" text=\"InnerResult\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public AssertEqualityResult? InnerResult { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property InnerResult As AssertEqualityResult"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "Xunit.Sdk.AssertEqualityResult",
            "name": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "AssertEqualityResult"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "Xunit.Sdk.AssertEqualityResult"
              },
              {
                "lang": "vb",
                "value": "Xunit.Sdk.AssertEqualityResult"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "InnerResult",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 76,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "remarks": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">If this value is set, then it generally indicates that this comparison was a\nfailed collection comparison, and the inner result indicates the specific\nitem comparison that caused the failure.</p>\n",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.InnerResult*",
        "name": [
          {
            "lang": "csharp",
            "value": "InnerResult"
          },
          {
            "lang": "vb",
            "value": "InnerResult"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.InnerResult"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.InnerResult"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.InnerResult"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.InnerResult"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.InnerResult*\" text=\"InnerResult\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.InnerResult*\" text=\"InnerResult\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns the comparer result for any inner comparison that caused this result\nto fail; returns <code>null</code> if there was no inner comparison.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MismatchIndexX"
        },
        {
          "lang": "vb",
          "value": "MismatchIndexX"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.MismatchIndexX"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.MismatchIndexX"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexX\" text=\"MismatchIndexX\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexX\" text=\"MismatchIndexX\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? MismatchIndexX { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property MismatchIndexX As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MismatchIndexX",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 85,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX*",
        "name": [
          {
            "lang": "csharp",
            "value": "MismatchIndexX"
          },
          {
            "lang": "vb",
            "value": "MismatchIndexX"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.MismatchIndexX"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.MismatchIndexX"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexX"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexX*\" text=\"MismatchIndexX\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexX*\" text=\"MismatchIndexX\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns the index of the mismatch for the <code>X</code> value, if the comparison\nfailed on a specific index.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "MismatchIndexY"
        },
        {
          "lang": "vb",
          "value": "MismatchIndexY"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.MismatchIndexY"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.MismatchIndexY"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexY\" text=\"MismatchIndexY\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexY\" text=\"MismatchIndexY\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public int? MismatchIndexY { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property MismatchIndexY As Integer?"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Nullable{System.Int32}",
            "definition": "System.Nullable`1",
            "name": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "int?"
              },
              {
                "lang": "vb",
                "value": "Integer?"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">int</a>?"
              },
              {
                "lang": "vb",
                "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.int32\">Integer</a>?"
              }
            ]
          }
        }
      },
      "source": {
        "id": "MismatchIndexY",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 91,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY*",
        "name": [
          {
            "lang": "csharp",
            "value": "MismatchIndexY"
          },
          {
            "lang": "vb",
            "value": "MismatchIndexY"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.MismatchIndexY"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.MismatchIndexY"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.MismatchIndexY"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexY*\" text=\"MismatchIndexY\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.MismatchIndexY*\" text=\"MismatchIndexY\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns the index of the mismatch for the <code>Y</code> value, if the comparison\nfailed on a specific index.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.X",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "X"
        },
        {
          "lang": "vb",
          "value": "X"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.X"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.X"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.X"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.X"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.X\" text=\"X\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.X\" text=\"X\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public object? X { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property X As Object"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Object",
            "name": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "X",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 97,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.X*",
        "name": [
          {
            "lang": "csharp",
            "value": "X"
          },
          {
            "lang": "vb",
            "value": "X"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.X"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.X"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.X"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.X"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.X*\" text=\"X\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.X*\" text=\"X\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The left-hand value in the comparison</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.Y",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "Y"
        },
        {
          "lang": "vb",
          "value": "Y"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.Y"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.Y"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.Y"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.Y"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Y\" text=\"Y\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Y\" text=\"Y\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public object? Y { get; }"
          },
          {
            "lang": "vb",
            "value": "Public ReadOnly Property Y As Object"
          }
        ],
        "parameters": [],
        "return": {
          "type": {
            "uid": "System.Object",
            "name": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "object"
              },
              {
                "lang": "vb",
                "value": "Object"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Object\" text=\"object\"/>"
              }
            ]
          }
        }
      },
      "source": {
        "id": "Y",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 106,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.Y*",
        "name": [
          {
            "lang": "csharp",
            "value": "Y"
          },
          {
            "lang": "vb",
            "value": "Y"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.Y"
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.Y"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.Y"
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.Y"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Y*\" text=\"Y\"/>"
          },
          {
            "lang": "vb",
            "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.Y*\" text=\"Y\"/>"
          }
        ]
      },
      "level": 0,
      "type": "property",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The right-hand value in the comparison</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator ==(AssertEqualityResult?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "=(AssertEqualityResult, AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.operator ==(AssertEqualityResult?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.=(AssertEqualityResult, AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.operator ==(Xunit.Sdk.AssertEqualityResult?, Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.=(Xunit.Sdk.AssertEqualityResult, Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)\" text=\"operator ==(AssertEqualityResult?, AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)\" text=\"operator ==(AssertEqualityResult?, AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool operator ==(AssertEqualityResult? left, AssertEqualityResult? right)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Operator =(left As AssertEqualityResult, right As AssertEqualityResult) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "left",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The first value</p>\n"
          },
          {
            "id": "right",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The second value</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.</p>\n"
        }
      },
      "source": {
        "id": "op_Equality",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 239,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.op_Equality*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator =="
          },
          {
            "lang": "vb",
            "value": "="
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.operator =="
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.="
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.operator =="
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.="
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html#Xunit_Sdk_AssertEqualityResult_op_Equality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_\">==</a>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Determines whether two instances of <xref href=\"Xunit.Sdk.AssertEqualityResult\" data-throw-if-not-resolved=\"false\"></xref> are equal.</p>\n",
      "platform": null
    },
    {
      "uid": "Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "Xunit.Sdk.AssertEqualityResult",
      "isExternal": false,
      "name": [
        {
          "lang": "csharp",
          "value": "operator !=(AssertEqualityResult?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "<>(AssertEqualityResult, AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "AssertEqualityResult.operator !=(AssertEqualityResult?, AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "AssertEqualityResult.<>(AssertEqualityResult, AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "Xunit.Sdk.AssertEqualityResult.operator !=(Xunit.Sdk.AssertEqualityResult?, Xunit.Sdk.AssertEqualityResult?)"
        },
        {
          "lang": "vb",
          "value": "Xunit.Sdk.AssertEqualityResult.<>(Xunit.Sdk.AssertEqualityResult, Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)\" text=\"operator !=(AssertEqualityResult?, AssertEqualityResult?)\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)\" text=\"operator !=(AssertEqualityResult?, AssertEqualityResult?)\"/>"
        }
      ],
      "syntax": {
        "content": [
          {
            "lang": "csharp",
            "value": "public static bool operator !=(AssertEqualityResult? left, AssertEqualityResult? right)"
          },
          {
            "lang": "vb",
            "value": "Public Shared Operator <>(left As AssertEqualityResult, right As AssertEqualityResult) As Boolean"
          }
        ],
        "parameters": [
          {
            "id": "left",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The first value</p>\n"
          },
          {
            "id": "right",
            "type": {
              "uid": "Xunit.Sdk.AssertEqualityResult",
              "name": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "nameWithType": [
                {
                  "lang": "csharp",
                  "value": "AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "AssertEqualityResult"
                }
              ],
              "fullName": [
                {
                  "lang": "csharp",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                },
                {
                  "lang": "vb",
                  "value": "Xunit.Sdk.AssertEqualityResult"
                }
              ],
              "specName": [
                {
                  "lang": "csharp",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                },
                {
                  "lang": "vb",
                  "value": "<xref uid=\"Xunit.Sdk.AssertEqualityResult\" text=\"AssertEqualityResult\"/>"
                }
              ]
            },
            "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">The second value</p>\n"
          }
        ],
        "return": {
          "type": {
            "uid": "System.Boolean",
            "name": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "nameWithType": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "fullName": [
              {
                "lang": "csharp",
                "value": "bool"
              },
              {
                "lang": "vb",
                "value": "Boolean"
              }
            ],
            "specName": [
              {
                "lang": "csharp",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              },
              {
                "lang": "vb",
                "value": "<xref uid=\"System.Boolean\" text=\"bool\"/>"
              }
            ]
          },
          "description": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Returns <code>true</code> if the values are not equal; <code>false</code>, otherwise.</p>\n"
        }
      },
      "source": {
        "id": "op_Inequality",
        "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
        "startLine": 255,
        "endLine": 0
      },
      "assemblies": [
        "xunit.v3.assert"
      ],
      "namespace": "Xunit.Sdk",
      "example": [],
      "overload": {
        "uid": "Xunit.Sdk.AssertEqualityResult.op_Inequality*",
        "name": [
          {
            "lang": "csharp",
            "value": "operator !="
          },
          {
            "lang": "vb",
            "value": "<>"
          }
        ],
        "nameWithType": [
          {
            "lang": "csharp",
            "value": "AssertEqualityResult.operator !="
          },
          {
            "lang": "vb",
            "value": "AssertEqualityResult.<>"
          }
        ],
        "fullName": [
          {
            "lang": "csharp",
            "value": "Xunit.Sdk.AssertEqualityResult.operator !="
          },
          {
            "lang": "vb",
            "value": "Xunit.Sdk.AssertEqualityResult.<>"
          }
        ],
        "specName": [
          {
            "lang": "csharp",
            "value": "operator <a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html#Xunit_Sdk_AssertEqualityResult_op_Inequality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_\">!=</a>"
          }
        ]
      },
      "level": 0,
      "type": "operator",
      "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Determines whether two instances of <xref href=\"Xunit.Sdk.AssertEqualityResult\" data-throw-if-not-resolved=\"false\"></xref> are not equal.</p>\n",
      "platform": null
    }
  ],
  "langs": [
    "csharp",
    "vb"
  ],
  "name": [
    {
      "lang": "csharp",
      "value": "AssertEqualityResult"
    },
    {
      "lang": "vb",
      "value": "AssertEqualityResult"
    }
  ],
  "nameWithType": [
    {
      "lang": "csharp",
      "value": "AssertEqualityResult"
    },
    {
      "lang": "vb",
      "value": "AssertEqualityResult"
    }
  ],
  "fullName": [
    {
      "lang": "csharp",
      "value": "Xunit.Sdk.AssertEqualityResult"
    },
    {
      "lang": "vb",
      "value": "Xunit.Sdk.AssertEqualityResult"
    }
  ],
  "type": "class",
  "source": {
    "id": "AssertEqualityResult",
    "path": "C:\\Users\\dadaP\\source\\TestingRepos\\Xunit-Proto\\v3\\v3-2.0.0\\src\\xunit.v3.assert\\Asserts\\Sdk\\AssertEqualityResult.cs",
    "startLine": 22,
    "endLine": 0
  },
  "assemblies": [
    "xunit.v3.assert"
  ],
  "namespace": {
    "uid": "Xunit.Sdk",
    "isEii": false,
    "isExtensionMethod": false,
    "href": "Xunit.html",
    "name": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "nameWithType": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "fullName": [
      {
        "lang": "csharp",
        "value": "Xunit.Sdk"
      },
      {
        "lang": "vb",
        "value": "Xunit.Sdk"
      }
    ],
    "specName": [
      {
        "lang": "csharp",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      },
      {
        "lang": "vb",
        "value": "<a class=\"xref\" href=\"Xunit.html\">Xunit</a>.<a class=\"xref\" href=\"Xunit.Sdk.html\">Sdk</a>"
      }
    ],
    "level": 0
  },
  "summary": "<p sourcefile=\"v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml\" sourcestartlinenumber=\"1\">Indicates the result of comparing two values for equality. Includes success/failure information, as well\nas indices where the values differ, if the values are indexed (e.g., collections or strings).</p>\n",
  "example": [],
  "syntax": {
    "content": [
      {
        "lang": "csharp",
        "value": "public class AssertEqualityResult : IEquatable<AssertEqualityResult>"
      },
      {
        "lang": "vb",
        "value": "Public Class AssertEqualityResult Implements IEquatable(Of AssertEqualityResult)"
      }
    ]
  },
  "inheritance": [
    {
      "uid": "System.Object",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object",
      "name": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object"
        },
        {
          "lang": "vb",
          "value": "Object"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        },
        {
          "lang": "vb",
          "value": "<xref uid=\"System.Object\" text=\"object\"/>"
        }
      ],
      "level": 0,
      "index": 0
    }
  ],
  "level": 1,
  "implements": [
    {
      "uid": "System.IEquatable{Xunit.Sdk.AssertEqualityResult}",
      "definition": "System.IEquatable`1",
      "name": [
        {
          "lang": "csharp",
          "value": "IEquatable<AssertEqualityResult>"
        },
        {
          "lang": "vb",
          "value": "IEquatable(Of AssertEqualityResult)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "IEquatable<AssertEqualityResult>"
        },
        {
          "lang": "vb",
          "value": "IEquatable(Of AssertEqualityResult)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "System.IEquatable<Xunit.Sdk.AssertEqualityResult>"
        },
        {
          "lang": "vb",
          "value": "System.IEquatable(Of Xunit.Sdk.AssertEqualityResult)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iequatable-1\">IEquatable</a>&lt;<a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html\">AssertEqualityResult</a>&gt;"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.iequatable-1\">IEquatable</a>(Of <a class=\"xref\" href=\"Xunit.Sdk.AssertEqualityResult.html\">AssertEqualityResult</a>)"
        }
      ]
    }
  ],
  "inheritedMembers": [
    {
      "uid": "System.Object.Equals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)",
      "name": [
        {
          "lang": "csharp",
          "value": "Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Equals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.Equals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.Equals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)\">Equals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.GetType",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.gettype",
      "name": [
        {
          "lang": "csharp",
          "value": "GetType()"
        },
        {
          "lang": "vb",
          "value": "GetType()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.GetType()"
        },
        {
          "lang": "vb",
          "value": "Object.GetType()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.gettype\">GetType</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.MemberwiseClone",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone",
      "name": [
        {
          "lang": "csharp",
          "value": "MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "MemberwiseClone()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.MemberwiseClone()"
        },
        {
          "lang": "vb",
          "value": "Object.MemberwiseClone()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone\">MemberwiseClone</a>()"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ReferenceEquals(System.Object,System.Object)",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.referenceequals",
      "name": [
        {
          "lang": "csharp",
          "value": "ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "ReferenceEquals(Object, Object)"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ReferenceEquals(object, object)"
        },
        {
          "lang": "vb",
          "value": "Object.ReferenceEquals(Object, Object)"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">object</a>)"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.referenceequals\">ReferenceEquals</a>(<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>, <a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object\">Object</a>)"
        }
      ],
      "level": 0
    },
    {
      "uid": "System.Object.ToString",
      "isEii": false,
      "isExtensionMethod": false,
      "parent": "System.Object",
      "isExternal": true,
      "href": "https://learn.microsoft.com/dotnet/api/system.object.tostring",
      "name": [
        {
          "lang": "csharp",
          "value": "ToString()"
        },
        {
          "lang": "vb",
          "value": "ToString()"
        }
      ],
      "nameWithType": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "fullName": [
        {
          "lang": "csharp",
          "value": "object.ToString()"
        },
        {
          "lang": "vb",
          "value": "Object.ToString()"
        }
      ],
      "specName": [
        {
          "lang": "csharp",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        },
        {
          "lang": "vb",
          "value": "<a class=\"xref\" href=\"https://learn.microsoft.com/dotnet/api/system.object.tostring\">ToString</a>()"
        }
      ],
      "level": 0
    }
  ],
  "_appName": "xunit-proto",
  "_appTitle": "xunit-proto",
  "_enableSearch": true,
  "pdf": false,
  "_systemKeys": [
    "uid",
    "isEii",
    "isExtensionMethod",
    "parent",
    "children",
    "href",
    "langs",
    "name",
    "nameWithType",
    "fullName",
    "type",
    "source",
    "documentation",
    "assemblies",
    "namespace",
    "summary",
    "remarks",
    "example",
    "syntax",
    "overridden",
    "overload",
    "exceptions",
    "seealso",
    "see",
    "inheritance",
    "derivedClasses",
    "level",
    "implements",
    "inheritedMembers",
    "extensionMethods",
    "conceptual",
    "platform",
    "attributes",
    "additionalNotes"
  ],
  "_key": "v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.yml",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../toc.html",
  "_path": "v3-2.0.0/assert/Xunit.Sdk.AssertEqualityResult.html",
  "_rel": "../../",
  "_tocKey": "~/v3-2.0.0/assert/toc.yml",
  "_tocPath": "v3-2.0.0/assert/toc.html",
  "_tocRel": "toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  }
}